
<h1 class="sectionedit1" id="server">$_SERVER</h1>
<div class="level1">

</div>
<!-- EDIT1 SECTION "$_SERVER" [1-24] -->
<h2 class="sectionedit2" id="参数">参数</h2>
<div class="level2">

<p>
在 $_SERVER 中，你也许能够，也许不能够找到下面的这些元素。
</p>

<p>
<strong>注意</strong>，如果以命令行方式运行 PHP，下面列出的元素几乎没有有效的(或是没有任何实际意义的)。
</p>

</div>
<!-- EDIT2 SECTION "参数" [25-257] -->
<h3 class="sectionedit3" id="php_self">&#039;PHP_SELF&#039;</h3>
<div class="level3">

<p>
当前执行脚本的文件名，与 <code>document root</code> 有关。例如，在地址为 <code><a href="http://example.com/test.php/foo.bar" class="urlextern" target="_blank" title="http://example.com/test.php/foo.bar"  rel="nofollow">http://example.com/test.php/foo.bar</a></code> 的脚本中使用 <code>$_SERVER[&#039;PHP_SELF&#039;]</code> 将得到 <code>/test.php/foo.bar</code>。<a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E5%B8%B8%E9%87%8F:%E9%AD%94%E6%9C%AF%E5%B8%B8%E9%87%8F:file" class="wikilink2" title="php:语言参考:常量:魔术常量:file" rel="nofollow">__FILE__</a> 常量包含当前(例如包含)文件的完整路径和文件名。 从 PHP 4.3.0 版本开始，如果 PHP 以命令行模式运行，这个变量将包含脚本名。之前的版本该变量不可用。
</p>

</div>

<h4 id="范例">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=0" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'PHP_SELF'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">/index.php</pre>

</div>
<!-- EDIT3 SECTION "'PHP_SELF'" [258-920] -->
<h3 class="sectionedit4" id="argv">&#039;argv&#039;</h3>
<div class="level3">

<p>
传递给该脚本的参数的数组。当脚本以命令行方式运行时，<a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:argv" class="wikilink2" title="php:语言参考:预定义变量:argv" rel="nofollow">argv</a>变量传递给程序 C 语言样式的命令行参数。当通过 GET 方式调用时，该变量包含query string。
</p>

</div>

<h4 id="范例1">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=3" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<a target="_blank" href="http://www.php.net/print_r"><span class="kw3">print_r</span></a><span class="br0">&#40;</span><span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'argv'</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>命令行运行</strong>
</p>
<pre class="code">  php index.php a=1 b=2</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">Array
(
    [0] =&gt; D:\Code\test\index.php
    [1] =&gt; a=1
    [2] =&gt; b=2
)</pre>

</div>
<!-- EDIT4 SECTION "'argv'" [921-1382] -->
<h3 class="sectionedit5" id="argc">&#039;argc&#039;</h3>
<div class="level3">

<p>
包含命令行模式下传递给该脚本的参数的数目(如果运行在命令行模式下)。
</p>

</div>

<h4 id="范例2">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=5" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'argc'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>命令行运行</strong>
</p>
<pre class="code">  php index.php</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">  1</pre>

</div>
<!-- EDIT5 SECTION "'argc'" [1383-1637] -->
<h3 class="sectionedit6" id="gateway_interface">&#039;GATEWAY_INTERFACE&#039;</h3>
<div class="level3">

<p>
服务器使用的 CGI 规范的版本；例如，“CGI/1.1”。
</p>

</div>
<!-- EDIT6 SECTION "'GATEWAY_INTERFACE'" [1638-1732] -->
<h3 class="sectionedit7" id="server_addr">&#039;SERVER_ADDR&#039;</h3>
<div class="level3">

<p>
当前运行脚本所在的服务器的 IP 地址。
</p>

</div>

<h4 id="范例3">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=6" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'SERVER_ADDR'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">127.0.0.1</pre>

</div>
<!-- EDIT7 SECTION "'SERVER_ADDR'" [1733-1981] -->
<h3 class="sectionedit8" id="server_name">&#039;SERVER_NAME&#039;</h3>
<div class="level3">

<p>
当前运行脚本所在的服务器的主机名。如果脚本运行于虚拟主机中，该名称是由那个虚拟主机所设置的值决定。
</p>

</div>

<h4 id="范例4">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=9" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'SERVER_NAME'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">www.test.com</pre>

</div>
<!-- EDIT8 SECTION "'SERVER_NAME'" [1982-2328] -->
<h3 class="sectionedit9" id="server_software">&#039;SERVER_SOFTWARE&#039;</h3>
<div class="level3">

<p>
服务器标识字符串，在响应请求时的头信息中给出。
</p>

</div>

<h4 id="范例5">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=12" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'SERVER_SOFTWARE'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">Apache/2.4.10 (Win32) OpenSSL/0.9.8zb PHP/5.3.29</pre>

</div>
<!-- EDIT9 SECTION "'SERVER_SOFTWARE'" [2329-2641] -->
<h3 class="sectionedit10" id="server_protocol">&#039;SERVER_PROTOCOL&#039;</h3>
<div class="level3">

<p>
请求页面时通信协议的名称和版本。例如，“HTTP/1.0”。
</p>

</div>

<h4 id="范例6">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=15" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'SERVER_PROTOCOL'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">HTTP/1.1</pre>

</div>
<!-- EDIT10 SECTION "'SERVER_PROTOCOL'" [2642-2919] -->
<h3 class="sectionedit11" id="request_method">&#039;REQUEST_METHOD&#039;</h3>
<div class="level3">

<p>
访问页面使用的请求方法；例如，“GET”, “HEAD”，“POST”，“PUT”。
</p>

</div>

<h4 id="范例7">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=18" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'REQUEST_METHOD'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">GET</pre>

</div>
<!-- EDIT11 SECTION "'REQUEST_METHOD'" [2920-3210] -->
<h3 class="sectionedit12" id="request_time">&#039;REQUEST_TIME&#039;</h3>
<div class="level3">

<p>
请求开始时的时间戳。从 PHP 5.1.0 起可用。
</p>

</div>

<h4 id="范例8">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=21" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'REQUEST_TIME'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">1467688208</pre>

</div>
<!-- EDIT12 SECTION "'REQUEST_TIME'" [3211-3466] -->
<h3 class="sectionedit13" id="request_time_float">&#039;REQUEST_TIME_FLOAT&#039;</h3>
<div class="level3">

<p>
请求开始时的时间戳，微秒级别的精准度。 自 PHP 5.4.0 开始生效。
</p>

</div>

<h4 id="范例9">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=24" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'REQUEST_TIME_FLOAT'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">#无输出，本地环境是5.3</pre>

</div>
<!-- EDIT13 SECTION "'REQUEST_TIME_FLOAT'" [3467-3786] -->
<h3 class="sectionedit14" id="query_string">&#039;QUERY_STRING&#039;</h3>
<div class="level3">

<p>
query string（查询字符串），如果有的话，通过它进行页面访问。
</p>

</div>

<h4 id="范例10">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=27" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'QUERY_STRING'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com/?a=1</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">a=1</pre>

</div>
<!-- EDIT14 SECTION "'QUERY_STRING'" [3787-4068] -->
<h3 class="sectionedit15" id="document_root">&#039;DOCUMENT_ROOT&#039;</h3>
<div class="level3">

<p>
当前运行脚本所在的文档根目录。在服务器配置文件中定义。
</p>

</div>

<h4 id="范例11">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=30" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'DOCUMENT_ROOT'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">D:/Code/test</pre>

</div>
<!-- EDIT15 SECTION "'DOCUMENT_ROOT'" [4069-4353] -->
<h3 class="sectionedit16" id="http_accept">&#039;HTTP_ACCEPT&#039;</h3>
<div class="level3">

<p>
当前请求头中 Accept: 项的内容，如果存在的话。
</p>

</div>

<h4 id="范例12">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=33" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'HTTP_ACCEPT'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</pre>

</div>
<!-- EDIT16 SECTION "'HTTP_ACCEPT'" [4354-4678] -->
<h3 class="sectionedit17" id="http_accept_charset">&#039;HTTP_ACCEPT_CHARSET&#039;</h3>
<div class="level3">

<p>
当前请求头中 Accept-Charset: 项的内容，如果存在的话。例如：“iso-8859-1,*,utf-8”。
</p>

</div>

<h4 id="范例13">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=36" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'HTTP_ACCEPT_CHARSET'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code"> </pre>

</div>
<!-- EDIT17 SECTION "'HTTP_ACCEPT_CHARSET'" [4679-5008] -->
<h3 class="sectionedit18" id="http_accept_encoding">&#039;HTTP_ACCEPT_ENCODING&#039;</h3>
<div class="level3">

<p>
当前请求头中 Accept-Encoding: 项的内容，如果存在的话。例如：“gzip”。
</p>

</div>

<h4 id="范例14">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=39" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'HTTP_ACCEPT_ENCODING'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">gzip, deflate, sdch</pre>

</div>
<!-- EDIT18 SECTION "'HTTP_ACCEPT_ENCODING'" [5009-5327] -->
<h3 class="sectionedit19" id="http_accept_language">&#039;HTTP_ACCEPT_LANGUAGE&#039;</h3>
<div class="level3">

<p>
当前请求头中 Accept-Language: 项的内容，如果存在的话。例如：“en”。
</p>

</div>

<h4 id="范例15">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=42" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'HTTP_ACCEPT_LANGUAGE'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">zh-CN,zh;q=0.8</pre>

</div>
<!-- EDIT19 SECTION "'HTTP_ACCEPT_LANGUAGE'" [5328-5639] -->
<h3 class="sectionedit20" id="http_connection">&#039;HTTP_CONNECTION&#039;</h3>
<div class="level3">

<p>
当前请求头中 Connection: 项的内容，如果存在的话。例如：“Keep-Alive”。
</p>

</div>

<h4 id="范例16">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=45" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'HTTP_CONNECTION'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">keep-alive</pre>

</div>
<!-- EDIT20 SECTION "'HTTP_CONNECTION'" [5640-5940] -->
<h3 class="sectionedit21" id="http_host">&#039;HTTP_HOST&#039;</h3>
<div class="level3">

<p>
当前请求头中 Host: 项的内容，如果存在的话。
</p>

</div>

<h4 id="范例17">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=48" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'HTTP_HOST'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">www.test.com</pre>

</div>
<!-- EDIT21 SECTION "'HTTP_HOST'" [5941-6197] -->
<h3 class="sectionedit22" id="http_referer">&#039;HTTP_REFERER&#039;</h3>
<div class="level3">

<p>
引导用户代理到当前页的前一页的地址（如果存在）。由 user agent 设置决定。并不是所有的用户代理都会设置该项，有的还提供了修改 HTTP_REFERER 的功能。简言之，该值并不可信。
</p>

</div>

<h4 id="范例18">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=51" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'SERVER_NAME'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code"> </pre>

</div>
<!-- EDIT22 SECTION "'HTTP_REFERER'" [6198-6640] -->
<h3 class="sectionedit23" id="http_user_agent">&#039;HTTP_USER_AGENT&#039;</h3>
<div class="level3">

<p>
当前请求头中 User-Agent: 项的内容，如果存在的话。该字符串表明了访问该页面的用户代理的信息。一个典型的例子是：Mozilla/4.5 [en] (X11; U; Linux 2.2.9 i586)。除此之外，你可以通过 <a href="/doku.php/php:%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83:%E5%85%B6%E4%BB%96%E5%9F%BA%E6%9C%AC%E6%89%A9%E5%B1%95:misc:get_browser" class="wikilink2" title="php:函数参考:其他基本扩展:misc:get_browser" rel="nofollow">get_browser()</a>来使用该值，从而定制页面输出以便适应用户代理的性能。
</p>

</div>

<h4 id="范例19">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=54" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'HTTP_USER_AGENT'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36</pre>

</div>
<!-- EDIT23 SECTION "'HTTP_USER_AGENT'" [6641-7334] -->
<h3 class="sectionedit24" id="https">&#039;HTTPS&#039;</h3>
<div class="level3">

<p>
如果脚本是通过 HTTPS 协议被访问，则被设为一个非空的值。
</p>
<pre class="code">  Note: 注意当使用 IIS 上的 ISAPI 方式时，如果不是通过 HTTPS 协议被访问，这个值将为 off。</pre>

</div>

<h4 id="范例20">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=57" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'HTTPS'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code"> </pre>

</div>
<!-- EDIT24 SECTION "'HTTPS'" [7335-7711] -->
<h3 class="sectionedit25" id="remote_addr">&#039;REMOTE_ADDR&#039;</h3>
<div class="level3">

<p>
浏览当前页面的用户的 IP 地址。
</p>

</div>

<h4 id="范例21">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=60" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'REMOTE_ADDR'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">127.0.0.1</pre>

</div>
<!-- EDIT25 SECTION "'REMOTE_ADDR'" [7712-7951] -->
<h3 class="sectionedit26" id="remote_host">&#039;REMOTE_HOST&#039;</h3>
<div class="level3">

<p>
浏览当前页面的用户的主机名。DNS 反向解析不依赖于用户的 <code>REMOTE_ADDR</code>。
</p>
<pre class="code">Note: 你的服务器必须被配置以便产生这个变量。例如在 Apache 中，你需要在 httpd.conf 中设置 HostnameLookups On 来产生它。参见 gethostbyaddr()。</pre>

</div>

<h4 id="范例22">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=63" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'REMOTE_HOST'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code"> </pre>

</div>
<!-- EDIT26 SECTION "'REMOTE_HOST'" [7952-8439] -->
<h3 class="sectionedit27" id="remote_port">&#039;REMOTE_PORT&#039;</h3>
<div class="level3">

<p>
用户机器上连接到 Web 服务器所使用的端口号。
</p>

</div>

<h4 id="范例23">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=66" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'REMOTE_PORT'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">62027</pre>

</div>
<!-- EDIT27 SECTION "'REMOTE_PORT'" [8440-8694] -->
<h3 class="sectionedit28" id="remote_user">&#039;REMOTE_USER&#039;</h3>
<div class="level3">

<p>
经验证的用户
</p>

</div>
<!-- EDIT28 SECTION "'REMOTE_USER'" [8695-8735] -->
<h3 class="sectionedit29" id="redirect_remote_user">&#039;REDIRECT_REMOTE_USER&#039;</h3>
<div class="level3">

<p>
验证的用户，如果请求已在内部重定向。
</p>

</div>
<!-- EDIT29 SECTION "'REDIRECT_REMOTE_USER'" [8736-8821] -->
<h3 class="sectionedit30" id="script_filename">&#039;SCRIPT_FILENAME&#039;</h3>
<div class="level3">

<p>
当前执行脚本的绝对路径。
</p>
<pre class="code">Note:如果在命令行界面（Command Line Interface, CLI）使用相对路径执行脚本，例如 file.php 或 ../file.php，那么 $_SERVER[&#039;SCRIPT_FILENAME&#039;] 将包含用户指定的相对路径。</pre>

</div>

<h4 id="范例24">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=69" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'SCRIPT_FILENAME'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">D:/Code/test/index.php</pre>

</div>
<!-- EDIT30 SECTION "'SCRIPT_FILENAME'" [8822-9282] -->
<h3 class="sectionedit31" id="server_admin">&#039;SERVER_ADMIN&#039;</h3>
<div class="level3">

<p>
该值指明了 Apache 服务器配置文件中的 SERVER_ADMIN 参数。如果脚本运行在一个虚拟主机上，则该值是那个虚拟主机的值。
</p>

</div>

<h4 id="范例25">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=72" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'SERVER_ADMIN'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">admin@phpStudy.net</pre>

</div>
<!-- EDIT31 SECTION "'SERVER_ADMIN'" [9283-9664] -->
<h3 class="sectionedit32" id="server_port">&#039;SERVER_PORT&#039;</h3>
<div class="level3">

<p>
Web 服务器使用的端口。默认值为 “80”。如果使用 SSL 安全连接，则这个值为用户设置的 HTTP 端口。
</p>

</div>

<h4 id="范例26">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=75" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'SERVER_PORT'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">80</pre>

</div>
<!-- EDIT32 SECTION "'SERVER_PORT'" [9665-9986] -->
<h3 class="sectionedit33" id="server_signature">&#039;SERVER_SIGNATURE&#039;</h3>
<div class="level3">

<p>
包含了服务器版本和虚拟主机名的字符串。
</p>

</div>
<!-- EDIT33 SECTION "'SERVER_SIGNATURE'" [9987-10071] -->
<h3 class="sectionedit34" id="path_translated">&#039;PATH_TRANSLATED&#039;</h3>
<div class="level3">

<p>
当前脚本所在文件系统（非文档根目录）的基本路径。这是在服务器进行虚拟到真实路径的映像后的结果。
</p>
<pre class="code">Note: 自 PHP 4.3.2 起，PATH_TRANSLATED 在 Apache 2 SAPI 模式下不再和 Apache 1 一样隐含赋值，而是若 Apache 不生成此值，PHP 便自己生成并将其值放入 SCRIPT_FILENAME 服务器常量中。这个修改遵守了 CGI 规范，PATH_TRANSLATED 仅在 PATH_INFO 被定义的条件下才存在。 Apache 2 用户可以在 httpd.conf 中设置 AcceptPathInfo = On 来定义 PATH_INFO。</pre>

</div>
<!-- EDIT34 SECTION "'PATH_TRANSLATED'" [10072-10651] -->
<h3 class="sectionedit35" id="script_name">&#039;SCRIPT_NAME&#039;</h3>
<div class="level3">

<p>
包含当前脚本的路径。这在页面需要指向自己时非常有用。<a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E5%B8%B8%E9%87%8F:%E9%AD%94%E6%9C%AF%E5%B8%B8%E9%87%8F:file" class="wikilink2" title="php:语言参考:常量:魔术常量:file" rel="nofollow">__FILE__</a> 常量包含当前脚本(例如包含文件)的完整路径和文件名。
</p>

</div>

<h4 id="范例27">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=78" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'SCRIPT_NAME'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">/index.php</pre>

</div>
<!-- EDIT35 SECTION "'SCRIPT_NAME'" [10652-11046] -->
<h3 class="sectionedit36" id="request_uri">&#039;REQUEST_URI&#039;</h3>
<div class="level3">

<p>
<abbr title="Uniform Resource Identifier">URI</abbr> 用来指定要访问的页面。例如 “/index.html”。
</p>

</div>

<h4 id="范例28">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=81" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'REQUEST_URI'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">/</pre>

</div>
<!-- EDIT36 SECTION "'REQUEST_URI'" [11047-11299] -->
<h3 class="sectionedit37" id="php_auth_digest">&#039;PHP_AUTH_DIGEST&#039;</h3>
<div class="level3">

<p>
当作为 Apache 模块运行时，进行 HTTP Digest 认证的过程中，此变量被设置成客户端发送的“Authorization” HTTP 头内容（以便作进一步的认证操作）。
</p>

</div>
<!-- EDIT37 SECTION "'PHP_AUTH_DIGEST'" [11300-11516] -->
<h3 class="sectionedit38" id="php_auth_user">&#039;PHP_AUTH_USER&#039;</h3>
<div class="level3">

<p>
当 PHP 运行在 Apache 或 IIS（PHP 5 是 ISAPI）模块方式下，并且正在使用 HTTP 认证功能，这个变量便是用户输入的用户名。
</p>

</div>

<h4 id="范例29">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=84" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="re0">$authorization</span> <span class="sy0">=</span> <span class="kw4">false</span><span class="sy0">;</span>
<span class="kw1">if</span><span class="br0">&#40;</span><span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'PHP_AUTH_USER'</span><span class="br0">&#93;</span> <span class="sy0">==</span> <span class="st0">&quot;admin&quot;</span> <span class="sy0">&amp;&amp;</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'PHP_AUTH_PW'</span><span class="br0">&#93;</span> <span class="sy0">==</span> <span class="st0">&quot;admin888&quot;</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
    <span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'PHP_AUTH_USER'</span><span class="br0">&#93;</span><span class="sy0">;</span>
    <span class="re0">$authorization</span> <span class="sy0">=</span> <span class="kw4">true</span><span class="sy0">;</span>
    <a target="_blank" href="http://www.php.net/exit"><span class="kw3">exit</span></a><span class="sy0">;</span>
<span class="br0">&#125;</span>
<span class="kw1">if</span><span class="br0">&#40;</span><span class="sy0">!</span><span class="re0">$authorization</span><span class="br0">&#41;</span><span class="br0">&#123;</span>
    <a target="_blank" href="http://www.php.net/header"><span class="kw3">header</span></a><span class="br0">&#40;</span><span class="st0">&quot;WWW-Authenticate:Basic realm='Private'&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <a target="_blank" href="http://www.php.net/header"><span class="kw3">header</span></a><span class="br0">&#40;</span><span class="st_h">'HTTP/1.0 401 Unauthorized'</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="kw1">print</span> <span class="st0">&quot;You are unauthorized to enter this area.&quot;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

</div>
<!-- EDIT38 SECTION "'PHP_AUTH_USER'" [11517-12112] -->
<h3 class="sectionedit39" id="php_auth_pw">&#039;PHP_AUTH_PW&#039;</h3>
<div class="level3">

<p>
当 PHP 运行在 Apache 或 IIS（PHP 5 是 ISAPI）模块方式下，并且正在使用 HTTP 认证功能，这个变量便是用户输入的密码。
</p>

</div>
<!-- EDIT39 SECTION "'PHP_AUTH_PW'" [12113-12288] -->
<h3 class="sectionedit40" id="auth_type">&#039;AUTH_TYPE&#039;</h3>
<div class="level3">

<p>
当 PHP 运行在 Apache 模块方式下，并且正在使用 HTTP 认证功能，这个变量便是认证的类型。
</p>

</div>
<!-- EDIT40 SECTION "'AUTH_TYPE'" [12289-12427] -->
<h3 class="sectionedit41" id="path_info">&#039;PATH_INFO&#039;</h3>
<div class="level3">

<p>
包含由客户端提供的、跟在真实脚本名称之后并且在查询语句（query string）之前的路径信息，如果存在的话。例如，如果当前脚本是通过 <abbr title="Uniform Resource Locator">URL</abbr> <code><a href="http://www.example.com/php/path_info.php/some/stuff?foo=bar" class="urlextern" target="_blank" title="http://www.example.com/php/path_info.php/some/stuff?foo=bar"  rel="nofollow">http://www.example.com/php/path_info.php/some/stuff?foo=bar</a></code> 被访问，那么 <code>$<em>SERVER[&#039;PATH</em>INFO&#039;]</code> 将包含 <code>/some/stuff</code>。
</p>

</div>

<h4 id="范例30">范例</h4>
<div class="level4">

<p>
<strong>代码</strong>
</p>
<dl class="file">
<dt><a href="/doku.php/php:%E8%AF%AD%E8%A8%80%E5%8F%82%E8%80%83:%E9%A2%84%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F:server?do=export_code&amp;codeblock=85" title="下载片段" class="mediafile mf_php">index.php</a></dt>
<dd><pre class="code file php"><span class="kw2">&lt;?php</span>
<span class="kw1">echo</span> <span class="re0">$_SERVER</span><span class="br0">&#91;</span><span class="st_h">'PATH_INFO'</span><span class="br0">&#93;</span><span class="sy0">;</span>
<span class="sy1">?&gt;</span></pre>
</dd></dl>

<p>
<strong>请求</strong>
</p>
<pre class="code">http://www.test.com/index.php/wd/qwd/af?awd=1&amp;aw&amp;asd</pre>

<p>
<strong>结果</strong>
</p>
<pre class="code">/wd/qwd/af</pre>

</div>
<!-- EDIT41 SECTION "'PATH_INFO'" [12428-12976] -->
<h3 class="sectionedit42" id="orig_path_info">&#039;ORIG_PATH_INFO&#039;</h3>
<div class="level3">

<p>
在被 PHP 处理之前，“PATH_INFO” 的原始版本。
</p>

</div>
<!-- EDIT42 SECTION "'ORIG_PATH_INFO'" [12977-13079] -->
<h2 class="sectionedit43" id="更新日志">更新日志</h2>
<div class="level2">
<div class="table sectionedit44"><table class="inline">
	<thead>
	<tr class="row0">
		<th class="col0">版本</th><th class="col1">说明</th>
	</tr>
	</thead>
	<tr class="row1">
		<td class="col0">4.1.0</td><td class="col1">引入 $_SERVER，弃用 $HTTP_SERVER_VARS。</td>
	</tr>
</table></div>
<!-- EDIT44 TABLE [13103-13189] -->
</div>
<!-- EDIT43 SECTION "更新日志" [13080-] -->