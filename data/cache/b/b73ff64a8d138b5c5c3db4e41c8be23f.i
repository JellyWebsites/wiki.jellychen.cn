a:3196:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"Jscript 用户指南";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:35;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"JScript 基础";i:1;i:2;i:2;i:35;}i:2;i:35;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:35;}i:6;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:61;}i:7;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"什么是 JScript？";i:1;i:3;i:2;i:61;}i:2;i:61;}i:8;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:61;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:61;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:244:"JScript 是 Microsoft 公司对 ECMA 262 语言规范（ECMAScript 编辑器 3）的一种实现。除了少数例外（为了保持向后兼容），JScript 完全实现了 ECMA 标准。本概述的目的就是引导您学习使用 JScript。";}i:2;i:91;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:335;}i:12;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:337;}i:13;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"使用 JScript";i:1;i:4;i:2;i:337;}i:2;i:337;}i:14;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:337;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:337;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:227:"JScript 是一种解释型的、基于对象的脚本语言。尽管与 C++ 这样成熟的面向对象的语言相比，JScript 的功能要弱一些，但对于它的预期用途而言，JScript 的功能已经足够大了。";}i:2;i:362;}i:17;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:589;}i:18;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:589;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:441:"JScript 不是其他语言的精简版（例如，它只是与 Java 有点模糊而间接的关系），也不是任何事物的简化。不过，它有其局限性。例如，您不能使用该语言来编写独立运行的应用程序，并且没有对读写文件的内置支持。此外，JScript 脚本只能在某个解释器或“宿主”上运行，如 Active Server Pages（ASP）、Internet 浏览器或者 Windows 脚本宿主。";}i:2;i:591;}i:20;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1032;}i:21;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1032;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:389:"JScript 是一种宽松类型的语言。宽松类型意味着您不必显式定义变量的数据类型。事实上 JScript 更进一步。您无法在JScriot上明确地定义数据类型。此外，在大多数情况下，JScript 将根据需要自动进行转换。例如，如果将一个数值添加到由文本组成的某项（一个字符串），该数值将被转换为文本。";}i:2;i:1034;}i:23;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1423;}i:24;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1423;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:105:"本用户指南的其余部分是 JScript 特性概述。有关该语言实现的全部细节，请参考";}i:2;i:1425;}i:26;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:31:"javascript:jscript_语言参考";i:1;s:12:"语言参考";}i:2;i:1530;}i:27;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"。 ";}i:2;i:1578;}i:28;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1582;}i:29;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1582;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:330:"注意   下面大多数示例的代码比实际 Web 页中的代码应该更明确，并且不是太复杂。其目的是阐明相关概念，而不是提供最优的简短编码和风格。在任何情况下，如果六个月以后您还能毫不费力地阅读和理解所编写的代码，则说明这些代码写得不错。 ";}i:2;i:1584;}i:31;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1914;}i:32;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1917;}i:33;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"编写 JScript 代码";i:1;i:3;i:2;i:1917;}i:2;i:1917;}i:34;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1917;}i:35;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1917;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:284:"与其他许多编程语言一样， Microsoft JScript 是用文本方式编写的，并被组织成为语句、由相关的语句集组成的块、以及注释。在一条语句内可以使用变量、比如字符串和数字（称为“文字”）的立即数、以及表达式。 ";}i:2;i:1948;}i:37;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2232;}i:38;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2234;}i:39;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"语句";i:1;i:4;i:2;i:2234;}i:2;i:2234;}i:40;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:2234;}i:41;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2234;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:157:"JScript 程序是语句的集合。一条 Jscript 语句相当于英语中的一个完整句。Jscript 语句将表达式组合起来，完成一个任务。";}i:2;i:2248;}i:43;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2405;}i:44;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2405;}i:45;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:479:"一条语句由一个或多个表达式、关键字或者运算符（符号）组成。典型地，一条语句写一行，尽管一条语句可以超过两行或更多行。两条或更多条语句也可以写在同一行上，语句之间用分号“;”隔开。通常，每一新行开始一条新语句。不过显式地终止语句是一个好方法。这是用分号 (;)来实现的，分号是 JScript 语句的终止字符。下面给出 Jscript 语句的两隔示例。";}i:2;i:2407;}i:46;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2892;}i:47;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:129:"
aBird = "Robin"; //将文本“Robin”赋值给变量 aBird
var today = new Date(); // 将今天的日期赋值给变量 today
";i:1;s:10:"javascript";i:2;N;}i:2;i:2892;}i:48;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2892;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:407:"用大括号（{}）括起来的一组 JScript 语句称为一个语句块。分组到一个语句块中的语句通常可当作单条语句处理。这就是说在 JScript 期望有一条单个语句的大多数地方可以使用语句块。应该注意以 for 和 while 打头的循环语句是例外情况。注意，语句块中的原始语句以分号结束，但语句块本身并不以分号结束。";}i:2;i:3041;}i:50;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3448;}i:51;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3448;}i:52;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:442:"通常，在函数和条件语句中使用语句块。注意，Jscript 与 C++ 以及其他某些语言不同，它不认为语句块是一个新的范围；只有函数创建新范围。在下面的示例中，第一条语句开始定义一个函数，该函数包含一个五条语句组成的语句块。语句块后的三条语句没有用大括号括起来；这些语句不是一个语句块，所以就不是函数定义的一部分。";}i:2;i:3450;}i:53;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3898;}i:54;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:299:"
function convert(inches)  {
   feet = inches / 12;  //  这五条语句属于一个语句块。
   miles = feet / 5280;
   nauticalMiles = feet / 6080;
   cm = inches * 2.54;
   meters = inches / 39.37;
}
km = meters / 1000;  //  这三条语句不在语句块内。
kradius = km;
mradius = miles;
";i:1;s:10:"javascript";i:2;N;}i:2;i:3898;}i:55;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4218;}i:56;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"注释";i:1;i:4;i:2;i:4218;}i:2;i:4218;}i:57;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:4218;}i:58;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4218;}i:59;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:99:"
单行的 JScript 注释以一对正斜杠(//)开始。下面给出一个单行注释的示例。
";}i:2;i:4239;}i:60;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4347;}i:61;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:79:"
aGoodIdea = "Comment your code thoroughly.";  //  这是一个单行注释。
";i:1;s:10:"javascript";i:2;N;}i:2;i:4354;}i:62;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4354;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:56:"多行注释以一个正斜杠加一个星号的组合(/";}i:2;i:4454;}i:64;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:24:"markdowku_italicasterisk";i:1;a:2:{i:0;i:1;i:1;s:1:"*";}i:2;i:1;i:3;s:1:"*";}i:2;i:4510;}i:65;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:24:"markdowku_italicasterisk";i:1;a:2:{i:0;i:3;i:1;s:31:")开始,并以其逆向顺序 (";}i:2;i:3;i:3;s:31:")开始,并以其逆向顺序 (";}i:2;i:4511;}i:66;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:24:"markdowku_italicasterisk";i:1;a:2:{i:0;i:4;i:1;s:1:"*";}i:2;i:4;i:3;s:1:"*";}i:2;i:4542;}i:67;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"/)结束。";}i:2;i:4543;}i:68;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4554;}i:69;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:283:"
/*
这是一个用来解释前面的代码语句的多行注释。

该语句将一个值赋给 aGoodIdea 变量。
用引号包含的这种值称为一个文字。
文字显式并直接包含信息；
而不是简接地引用信息。
（引号不属于该文字的内容。）
*/
";i:1;s:10:"javascript";i:2;N;}i:2;i:4561;}i:70;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4561;}i:71;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:4865;}i:72;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"注意";}i:2;i:3;i:3;s:6:"注意";}i:2;i:4867;}i:73;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:4873;}i:74;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:357:"   如果您试图将一个多行注释插入到另一个中，JScript 不能按正常的方式解释生成的多行注释。标明嵌入的多行注释结束的 */ 被认为是整个多行注释的结尾。这就意味着嵌入多行注释之后的文本不再被认为是注释；相应地，它将被解释为 JScript 代码，并会产生语法错误。";}i:2;i:4875;}i:75;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5232;}i:76;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5232;}i:77;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:126:"建议将所有的注释写为单行注释的语句块。这样您以后就能够将大段的代码与多行注释区分开。";}i:2;i:5234;}i:78;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5360;}i:79;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:386:"
//这是另一种多行注释，写成一系列单行注释。

//  在执行完该语句后，可以使用 aGoodIdea 变量的名字来引用其内容，
//  如下一条语句那样，即采用连接操作将字符串文字添加到
//  aGoodIdea 变量，以创建一个新的变量。

var extendedIdea = aGoodIdea + " You never know when you'll have to figure out what it does.";
";i:1;s:10:"javascript";i:2;N;}i:2;i:5367;}i:80;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5774;}i:81;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"赋值和相等";i:1;i:4;i:2;i:5774;}i:2;i:5774;}i:82;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:5774;}i:83;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5774;}i:84;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:151:"
JScript 语句中使用等号 (=)给变量赋值：等号是赋值运算符。= 运算符左边的操作项总是一个 Lvalue。Lvalue 可以是： 
";}i:2;i:5805;}i:85;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5965;}i:86;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:5965;}i:87;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5965;}i:88;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5965;}i:89;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"变量";}i:2;i:5969;}i:90;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5975;}i:91;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5975;}i:92;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5975;}i:93;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5975;}i:94;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"数组元素";}i:2;i:5979;}i:95;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:5991;}i:96;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:5991;}i:97;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:5991;}i:98;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:5991;}i:99;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"对象属性";}i:2;i:5995;}i:100;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:6007;}i:101;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:6007;}i:102;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:6007;}i:103;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6007;}i:104;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:176:"= 运算符右边的操作项总是一个 Rvalue。Rvalues 可以是任何类型的一个任意值，包括表达式的值。下面给出一个 JScript 赋值语句的示例。";}i:2;i:6009;}i:105;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6191;}i:106;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:16:"
anInteger = 3;
";i:1;s:10:"javascript";i:2;N;}i:2;i:6191;}i:107;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6191;}i:108;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:114:"Jscript 编译器解释本语句的意义为：“将 3 赋给变量 anInteger”或“anInteger 的值为 3”。";}i:2;i:6228;}i:109;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6342;}i:110;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6342;}i:111;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:212:"
确定您理解了 = 运算符（赋值）和 == 运算符（相等）的差异。在比较两个值是否相等时，应使用两个等于号 (==)。这些内容将在 控制程序的流程 中详细介绍。 
";}i:2;i:6352;}i:112;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6573;}i:113;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6573;}i:114;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:6575;}i:115;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:9:"表达式";}i:2;i:3;i:3;s:9:"表达式";}i:2;i:6577;}i:116;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:6586;}i:117;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6588;}i:118;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6588;}i:119;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:268:"JScript 表达式是指 JScript 解释器能够计算生成值的 JScript “短语”。这个值可以是任何有效的 JScript 类型 — 数字、字符串、对象，等等。最简单的表达式是文字。下面给出 JScript 文字表达式的一些示例。";}i:2;i:6590;}i:120;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6864;}i:121;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:298:"
3.9                       // 数字文字
"Hello!"                  // 字符串文字
false                     // 布尔文字
null                      // 文字空值
{x:1, y:2}                // 对象文字
[1,2,3]                   // 数组文字
function(x){return x*x;}  // 函数文字
";i:1;s:10:"javascript";i:2;N;}i:2;i:6864;}i:122;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6864;}i:123;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:171:"更多复杂的表达式中包含变量、函数、函数调用以及其他表达式。可以用运算符将表达式组合，创建复合表达式。运算符可以是：";}i:2;i:7182;}i:124;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7359;}i:125;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:53:"
+  // 加法
-  // 减法
*  // 乘法
/  // 除法
";i:1;s:10:"javascript";i:2;N;}i:2;i:7359;}i:126;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7359;}i:127;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:54:"下面给出 JScript 复合表达式的一些示例。";}i:2;i:7432;}i:128;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7486;}i:129;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:231:"
var anExpression = 3 * (4 / 5) + 6;
var aSecondExpression = Math.PI * radius * radius;
var aThirdExpression = aSecondExpression + "%" + anExpression;
var aFourthExpression = "(" + aSecondExpression + ") % (" + anExpression + ")";
";i:1;s:10:"javascript";i:2;N;}i:2;i:7493;}i:130;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:7745;}i:131;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"JScript 变量";i:1;i:3;i:2;i:7745;}i:2;i:7745;}i:132;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:7745;}i:133;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7745;}i:134;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:60:"任何编程语言中，用一块数据量化一个概念。";}i:2;i:7769;}i:135;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7829;}i:136;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7829;}i:137;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"How old am I?";}i:2;i:7831;}i:138;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7844;}i:139;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7844;}i:140;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:159:"在 Jscript 中，变量是给概念的名称；它代表了给出瞬间的值。当使用该变量时，实际是用的它所代表的数据。给出示例：";}i:2;i:7846;}i:141;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8011;}i:142;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:44:"
NumberOfDaysLeft = EndDate – TodaysDate;
";i:1;s:10:"javascript";i:2;N;}i:2;i:8011;}i:143;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8011;}i:144;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:156:"机械的理解是使用变量来存储、得到并操作脚本中出现的所有的不同值。创建有意义的变量名称；便于别人理解脚本。";}i:2;i:8075;}i:145;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8231;}i:146;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:8233;}i:147;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"变量声明";i:1;i:4;i:2;i:8233;}i:2;i:8233;}i:148;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:8233;}i:149;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8233;}i:150;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:224:"变量在脚本中的第一次出现是在声明中。变量在第一次用到时就设置于内存中，便于后来在脚本中引用。使用变量之前先进行声明。可以使用 var 关键字来进行变量声明。";}i:2;i:8253;}i:151;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8483;}i:152;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:189:"
var count;  // 单个声明。
var count, amount, level;  // 用单个 var 关键字声明的多个声明。
var count = 0, amount = 100;  // 一条语句中的变量声明和初始化。
";i:1;s:6:"script";i:2;N;}i:2;i:8483;}i:153;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8483;}i:154;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"如果在 ";}i:2;i:8688;}i:155;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:8698;}i:156;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"var";}i:2;i:3;i:3;s:3:"var";}i:2;i:8700;}i:157;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:8703;}i:158;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:" 语句中没有初始化变量，变量自动取 JScript 值 ";}i:2;i:8705;}i:159;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:8767;}i:160;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:9:"undefined";}i:2;i:3;i:3;s:9:"undefined";}i:2;i:8769;}i:161;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:8778;}i:162;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"。尽管并不安全，但声明语句中忽略 ";}i:2;i:8780;}i:163;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:8829;}i:164;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"var";}i:2;i:3;i:3;s:3:"var";}i:2;i:8831;}i:165;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:8834;}i:166;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:217:" 关键字是合法的 JScript 语法。这时，JScript 解释器给予变量全局范围的可见度。当在过程级中声明一个变量时，它不能用于全局范围；这种情况下，变量声明必须用 ";}i:2;i:8836;}i:167;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:9053;}i:168;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"var";}i:2;i:3;i:3;s:3:"var";}i:2;i:9055;}i:169;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:9058;}i:170;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:" 关键字。";}i:2;i:9060;}i:171;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9073;}i:172;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:9075;}i:173;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"变量命名";i:1;i:4;i:2;i:9075;}i:2;i:9075;}i:174;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:9075;}i:175;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9075;}i:176;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:"变量名称是一个标识符。Jscript 中，用标识符来： ";}i:2;i:9095;}i:177;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9162;}i:178;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:9162;}i:179;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9162;}i:180;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9162;}i:181;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:"命名变量";}i:2;i:9166;}i:182;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9178;}i:183;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9178;}i:184;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9178;}i:185;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9178;}i:186;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"命名函数 ";}i:2;i:9182;}i:187;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9195;}i:188;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9195;}i:189;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9195;}i:190;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9195;}i:191;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"给出循环的标签";}i:2;i:9199;}i:192;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9220;}i:193;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9220;}i:194;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:9220;}i:195;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9220;}i:196;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:208:"JScript 是一种区分大小写的语言。因此变量名称 myCounter 和变量名称 mYCounter 是不一样的。变量的名称可以是任意长度。创建合法的变量名称应遵循如下规则： ";}i:2;i:9221;}i:197;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9430;}i:198;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:9430;}i:199;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9430;}i:200;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9430;}i:201;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"第一个字符必须是一个 ";}i:2;i:9434;}i:202;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:5:"ASCII";}i:2;i:9465;}i:203;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:" 字母（大小写均可），或一个下划线(";}i:2;i:9470;}i:204;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"_";}i:2;i:9528;}i:205;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:")。注意第一个字符不能是数字。 ";}i:2;i:9538;}i:206;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9582;}i:207;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9582;}i:208;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9582;}i:209;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9582;}i:210;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:55:"后续的字符必须是字母、数字或下划线。 ";}i:2;i:9586;}i:211;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9641;}i:212;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9641;}i:213;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9641;}i:214;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9641;}i:215;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:"变量名称一定不能是 保留字。 ";}i:2;i:9645;}i:216;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9686;}i:217;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9686;}i:218;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:9686;}i:219;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9686;}i:220;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"下面给出合法变量名称的一些示例： ";}i:2;i:9687;}i:221;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9742;}i:222;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:34:"
_pagecount 
Part9 
Number_Items 
";i:1;s:10:"javascript";i:2;N;}i:2;i:9742;}i:223;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9742;}i:224;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"下面给出无效变量名称的一些示例： ";}i:2;i:9796;}i:225;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9851;}i:226;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:118:"
99Balloons // 不能以数字开头。
Smith&Wesson // “与”符号（&）字符用于变量名称是无效的。
";i:1;s:10:"javascript";i:2;N;}i:2;i:9851;}i:227;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9851;}i:228;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:137:"当要声明一个变量并进行初始化，但又不想指定任何特殊值，可以赋值为 JScript 值 null。下面给出示例。";}i:2;i:9989;}i:229;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10132;}i:230;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:80:"
var bestAge = null;
var muchTooOld = 3 * bestAge; // muchTooOld 的值为 0。
";i:1;s:10:"javascript";i:2;N;}i:2;i:10132;}i:231;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10132;}i:232;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:123:"如果声明了一个变量但没有对其赋值，该变量存在，其值为Jscript 值 undefined。下面给出示例。";}i:2;i:10232;}i:233;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10361;}i:234;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:121:"
var currentCount;
var finalCount = 1 * currentCount; // finalCount 的值为 NaN，因为 currentCount 为 undefined。
";i:1;s:10:"javascript";i:2;N;}i:2;i:10361;}i:235;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10361;}i:236;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:"注意在 JScript 中 ";}i:2;i:10502;}i:237;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:10524;}i:238;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"null";}i:2;i:3;i:3;s:4:"null";}i:2;i:10526;}i:239;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:10530;}i:240;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 和 ";}i:2;i:10532;}i:241;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:10537;}i:242;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:9:"undefined";}i:2;i:3;i:3;s:9:"undefined";}i:2;i:10539;}i:243;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:10548;}i:244;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:" 的主要区别是 ";}i:2;i:10550;}i:245;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:10570;}i:246;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"null";}i:2;i:3;i:3;s:4:"null";}i:2;i:10572;}i:247;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:10576;}i:248;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:" 的操作象数字 0，而 ";}i:2;i:10578;}i:249;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:10606;}i:250;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:9:"undefined";}i:2;i:3;i:3;s:9:"undefined";}i:2;i:10608;}i:251;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:10617;}i:252;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:" 的操作象特殊值";}i:2;i:10619;}i:253;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:10641;}i:254;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"NaN";}i:2;i:3;i:3;s:3:"NaN";}i:2;i:10643;}i:255;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:10646;}i:256;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" （不是一个数字）。对 ";}i:2;i:10648;}i:257;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:10680;}i:258;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"null";}i:2;i:3;i:3;s:4:"null";}i:2;i:10682;}i:259;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:10686;}i:260;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" 值和 ";}i:2;i:10688;}i:261;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:10696;}i:262;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:9:"undefined";}i:2;i:3;i:3;s:9:"undefined";}i:2;i:10698;}i:263;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:10707;}i:264;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:" 值作比较总是相等的。";}i:2;i:10709;}i:265;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10740;}i:266;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10740;}i:267;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"可以不用 ";}i:2;i:10742;}i:268;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:10755;}i:269;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"var";}i:2;i:3;i:3;s:3:"var";}i:2;i:10757;}i:270;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:10760;}i:271;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:" 关键字声明变量，并赋值。这就是隐式声明。";}i:2;i:10762;}i:272;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10829;}i:273;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:60:"
noStringAtAll = ""; // 隐式声明变量 noStringAtAll。
";i:1;s:10:"javascript";i:2;N;}i:2;i:10829;}i:274;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10829;}i:275;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:"不能使用未经过声明的变量。";}i:2;i:10909;}i:276;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10954;}i:277;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:77:"
var volume = length * width; // 错误 — length 和 width 并不存在。
";i:1;s:10:"javascript";i:2;N;}i:2;i:10954;}i:278;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:11052;}i:279;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"强制转换";i:1;i:4;i:2;i:11052;}i:2;i:11052;}i:280;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:11052;}i:281;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11052;}i:282;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:285:"表达式中操作项的数据类型相同时 JScript 解释器才能对其求值。如果表达式不经过强制转换就试图对两个不同的数据类型（如一个为数字，另一个为字符串）执行运算，将产生错误结果。但在 Jscript 中情况就不同了。";}i:2;i:11072;}i:283;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11357;}i:284;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11357;}i:285;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:245:"JScript 是一种自由类型的语言。它的变量没有预定类型（相对于强类型语言，如 C++）。相反，JScript 变量的类型相应于他们包含的值的类型。这种操作的好处是能将值作为另一类型处理。";}i:2;i:11359;}i:286;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11604;}i:287;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11604;}i:288;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:239:"在 Jscript 中，可以对不同类型的值执行运算，不必担心 JScript 解释器产生异常。相反，JScript 解释器自动将数据类型之一改变（强制转换）为另一种数据类型，然后执行运算。例如：";}i:2;i:11606;}i:289;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11846;}i:290;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:2;i:1;i:4;i:2;i:11847;}i:2;i:11846;}i:291;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:11846;}i:292;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:11846;}i:293;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:11846;}i:294;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:"   运算               ";}i:2;i:11848;}i:295;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:11872;}i:296;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:11872;}i:297;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"   结果        ";}i:2;i:11873;}i:298;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:11890;}i:299;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:11891;}i:300;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:11891;}i:301;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:11891;}i:302;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:11891;}i:303;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:" 数值与字符串相加    ";}i:2;i:11893;}i:304;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11922;}i:305;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:11922;}i:306;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:" 将数值强制转换为字符串。  ";}i:2;i:11923;}i:307;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11962;}i:308;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:11963;}i:309;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:11963;}i:310;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:11963;}i:311;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:" 布尔值与字符串相加   ";}i:2;i:11965;}i:312;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11996;}i:313;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:11996;}i:314;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:" 将布尔值强制转换为字符串。";}i:2;i:11997;}i:315;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:12037;}i:316;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:12039;}i:317;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:12039;}i:318;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:12039;}i:319;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:" 数值与布尔值相加    ";}i:2;i:12041;}i:320;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:12070;}i:321;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:12070;}i:322;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:" 将布尔值强制转换为数值。  ";}i:2;i:12071;}i:323;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:12110;}i:324;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:12111;}i:325;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:12111;}i:2;i:12111;}i:326;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12111;}i:327;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:"考虑下面的示例。";}i:2;i:12114;}i:328;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12144;}i:329;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:181:"
var x = 2000;      // 一个数字。
var y = "Hello";   // 一个字符串。
x = x + y;         // 将数字强制转换为字符串。
document.write(x); // 输出 2000Hello。
";i:1;s:10:"javascript";i:2;N;}i:2;i:12144;}i:330;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12144;}i:331;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:262:"要想显式地将字符串转换为整数，使用 parseInt 方法。要想显式地将字符串转换为数字，使用 parseFloat 方法。请注意，比较大小时字符串自动转换为相等的数字，但加法（连接）运算时保留为字符串。";}i:2;i:12345;}i:332;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12607;}i:333;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:12609;}i:334;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"JScript 数据类型";i:1;i:3;i:2;i:12609;}i:2;i:12609;}i:335;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:12609;}i:336;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12609;}i:337;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:92:"Jscript 有三种主要数据类型、两种复合数据类型和两种特殊数据类型。";}i:2;i:12639;}i:338;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12731;}i:339;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12731;}i:340;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:"主要（基本）数据类型是： ";}i:2;i:12733;}i:341;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12771;}i:342;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:12771;}i:343;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:12771;}i:344;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:12771;}i:345;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"字符串 ";}i:2;i:12775;}i:346;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:12785;}i:347;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:12785;}i:348;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:12785;}i:349;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:12785;}i:350;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"数值 ";}i:2;i:12789;}i:351;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:12796;}i:352;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:12796;}i:353;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:12796;}i:354;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:12796;}i:355;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"布尔 ";}i:2;i:12800;}i:356;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:12807;}i:357;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:12807;}i:358;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:12807;}i:359;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12807;}i:360;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:"复合（引用）数据类型是： ";}i:2;i:12808;}i:361;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12846;}i:362;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:12846;}i:363;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:12846;}i:364;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:12846;}i:365;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"对象 ";}i:2;i:12850;}i:366;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:12857;}i:367;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:12857;}i:368;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:12857;}i:369;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:12857;}i:370;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"数组 ";}i:2;i:12861;}i:371;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:12868;}i:372;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:12868;}i:373;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:12868;}i:374;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12868;}i:375;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"特殊数据类型是： ";}i:2;i:12869;}i:376;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:12895;}i:377;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:12895;}i:378;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:12895;}i:379;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:12895;}i:380;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"Null ";}i:2;i:12899;}i:381;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:12904;}i:382;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:12904;}i:383;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:12904;}i:384;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:12904;}i:385;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"Undefined ";}i:2;i:12908;}i:386;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:12918;}i:387;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:12918;}i:388;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:12918;}i:389;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:12920;}i:390;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"字符串数据类型";i:1;i:4;i:2;i:12920;}i:2;i:12920;}i:391;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:12920;}i:392;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:12920;}i:393;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:447:"一个字符串值是排在一起的一串零或零以上的 Unicode 字符（字母、数字和标点符号）。字符串数据类型用来表示 JScript 中的文本。脚本中可以包含字符串文字，这些字符串文字放在一对匹配的的单引号或双引号中。字符串中可以包含双引号，该双引号两边需加单引号，也可以包含单引号，该单引号两边需加双引号。下面是字符串的示例：";}i:2;i:12949;}i:394;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:13402;}i:395;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:93:"
"Happy am I; from care I’m free!"
'"Avast, ye lubbers!" roared the technician.' 
"42"
'c'
";i:1;s:9:"javascrpt";i:2;N;}i:2;i:13402;}i:396;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:13402;}i:397;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:71:"请注意，JScript 中没有表示单个字符的类型（如 C++ 的 ";}i:2;i:13514;}i:398;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:13585;}i:399;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"char";}i:2;i:3;i:3;s:4:"char";}i:2;i:13587;}i:400;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:13591;}i:401;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:117:"）。要表示 Jscript 中的单个字符，应创建一个只包含一个字符的字符串。包含零个字符（";}i:2;i:13593;}i:402;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:13710;}i:403;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:13711;}i:404;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:"）的字符串是空（零长度）字符串。";}i:2;i:13712;}i:405;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:13760;}i:406;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:13762;}i:407;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"数值数据类型";i:1;i:4;i:2;i:13762;}i:2;i:13762;}i:408;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:13762;}i:409;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:13762;}i:410;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:148:"在 Jscript 中整数和浮点值没有差别；JScript 数值可以是其中任意一种（JScript 内部将所有的数值表示为浮点值）。";}i:2;i:13788;}i:411;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:13936;}i:412;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:13938;}i:413;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:9:"整型值";i:1;i:4;i:2;i:13938;}i:2;i:13938;}i:414;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:13938;}i:415;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:13938;}i:416;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:320:"整型值可以是正整数，负整数和 0。可以用 10 进制，8 进制和 16 进制来表示。在 Jscript 中大多数字是用十进制表示的。加前缀“0”表示 8 进制的整型值，只能包含 0 到 7 的数字。前缀为“0”同时包含数字“8”或“9”的数被解释为十进制数。 ";}i:2;i:13955;}i:417;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14275;}i:418;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14275;}i:419;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:252:"加前缀“0x”（零和x|X）表示 16 进制整型值。可以包含数字 0 到 9，以及字母 A 到 F（大写或小写）。使用字母 A 到 F 表示十进制 10 到 15 的单个数字。就是说 0xF 与 15 相等，同时 0x10 等于 16。";}i:2;i:14277;}i:420;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14529;}i:421;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14529;}i:422;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:117:"八进制和十六进制数可以为负，但不能有小数位，同时不能以科学计数法（指数）表示。";}i:2;i:14531;}i:423;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:14648;}i:424;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:14650;}i:425;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:9:"浮点值";i:1;i:4;i:2;i:14650;}i:2;i:14650;}i:426;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:14650;}i:427;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:14650;}i:428;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:235:"浮点值为带小数部分的数。也可以用科学计数法来表示。这就是说，大写或小写“e”用来表示 10 的次方。Jscript用数值表示的八字节 IEEE754 浮点标准。这意味着数字最大可以到±1.";}i:2;i:14667;}i:429;a:3:{i:0;s:14:"multiplyentity";i:1;a:2:{i:0;s:16:"7976931348623157";i:1;s:2:"10";}i:2;i:14902;}i:430;a:3:{i:0;s:16:"superscript_open";i:1;a:0:{}i:2;i:14921;}i:431;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"308";}i:2;i:14926;}i:432;a:3:{i:0;s:17:"superscript_close";i:1;a:0:{}i:2;i:14929;}i:433;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"，最小到±";}i:2;i:14935;}i:434;a:3:{i:0;s:14:"multiplyentity";i:1;a:2:{i:0;s:1:"5";i:1;s:2:"10";}i:2;i:14949;}i:435;a:3:{i:0;s:16:"superscript_open";i:1;a:0:{}i:2;i:14953;}i:436;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"-324";}i:2;i:14958;}i:437;a:3:{i:0;s:17:"superscript_close";i:1;a:0:{}i:2;i:14962;}i:438;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:"。以“0”开始且包含小数点的数字被解释为小数浮点数。";}i:2;i:14968;}i:439;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15044;}i:440;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:15044;}i:441;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:115:"注意以“0x”或“00”开始并包含小数点的数将发生错误。以下是 Jscript 中数字的例子。";}i:2;i:15046;}i:442;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:15162;}i:443;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:3;i:1;i:12;i:2;i:15163;}i:2;i:15162;}i:444;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:15162;}i:445;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:15162;}i:446;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:15162;}i:447;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"  数字   ";}i:2;i:15164;}i:448;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:15175;}i:449;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:15175;}i:450;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"  描述   ";}i:2;i:15176;}i:451;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:15187;}i:452;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:15187;}i:453;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:"  等价十进制数   ";}i:2;i:15188;}i:454;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:15211;}i:455;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:15212;}i:456;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:15212;}i:457;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:15212;}i:458;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15212;}i:459;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:".0001, 0.0001, 1e";}i:2;i:15214;}i:460;a:3:{i:0;s:16:"superscript_open";i:1;a:0:{}i:2;i:15231;}i:461;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"-4";}i:2;i:15236;}i:462;a:3:{i:0;s:17:"superscript_close";i:1;a:0:{}i:2;i:15238;}i:463;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:", 1.0e";}i:2;i:15244;}i:464;a:3:{i:0;s:16:"superscript_open";i:1;a:0:{}i:2;i:15250;}i:465;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"-4";}i:2;i:15255;}i:466;a:3:{i:0;s:17:"superscript_close";i:1;a:0:{}i:2;i:15257;}i:467;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:15263;}i:468;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15264;}i:469;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15264;}i:470;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"四个相等的浮点数 ";}i:2;i:15265;}i:471;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15290;}i:472;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15290;}i:473;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"0.0001 ";}i:2;i:15291;}i:474;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15298;}i:475;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:15299;}i:476;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:15299;}i:477;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15299;}i:478;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"3.45e";}i:2;i:15301;}i:479;a:3:{i:0;s:16:"superscript_open";i:1;a:0:{}i:2;i:15306;}i:480;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"2";}i:2;i:15311;}i:481;a:3:{i:0;s:17:"superscript_close";i:1;a:0:{}i:2;i:15312;}i:482;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:15318;}i:483;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15319;}i:484;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15319;}i:485;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"浮点数 ";}i:2;i:15320;}i:486;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15330;}i:487;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15330;}i:488;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"345 ";}i:2;i:15331;}i:489;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15335;}i:490;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:15336;}i:491;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:15336;}i:492;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15336;}i:493;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"42 ";}i:2;i:15338;}i:494;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15341;}i:495;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15341;}i:496;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"整数 ";}i:2;i:15342;}i:497;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15349;}i:498;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15349;}i:499;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"42 ";}i:2;i:15350;}i:500;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15353;}i:501;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:15354;}i:502;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:15354;}i:503;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15354;}i:504;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"0378 ";}i:2;i:15356;}i:505;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15361;}i:506;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15361;}i:507;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:123:"整数。虽然看起来是八进制数（以0开头），但是8不是有效的八进制数字，所以为十进制数。 ";}i:2;i:15362;}i:508;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15485;}i:509;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15485;}i:510;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"378 ";}i:2;i:15486;}i:511;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15490;}i:512;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:15491;}i:513;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:15491;}i:514;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15491;}i:515;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"0377 ";}i:2;i:15493;}i:516;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15498;}i:517;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15498;}i:518;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:101:"八进制整数。注意它虽然看起来比上面的数只小1，但实际数值有很大不同。 ";}i:2;i:15499;}i:519;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15600;}i:520;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15600;}i:521;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"255 ";}i:2;i:15601;}i:522;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15605;}i:523;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:15606;}i:524;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:15606;}i:525;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15606;}i:526;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"0.0001 ";}i:2;i:15608;}i:527;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15615;}i:528;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15615;}i:529;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:85:"浮点数。虽然以零开头，但由于带有小数点所以不是八进制数。 ";}i:2;i:15616;}i:530;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15701;}i:531;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15701;}i:532;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"0.0001 ";}i:2;i:15702;}i:533;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15709;}i:534;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:15710;}i:535;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:15710;}i:536;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15710;}i:537;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"00.0001 ";}i:2;i:15712;}i:538;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15720;}i:539;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15720;}i:540;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:88:"错误。两个零开头表示为八进制，但八进制数不能带有小数部分。 ";}i:2;i:15721;}i:541;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15809;}i:542;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15809;}i:543;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:"N/A （编译错误） ";}i:2;i:15810;}i:544;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15833;}i:545;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:15834;}i:546;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:15834;}i:547;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15834;}i:548;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"0Xff ";}i:2;i:15836;}i:549;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15841;}i:550;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15841;}i:551;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:"十六进制整数。 ";}i:2;i:15842;}i:552;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15864;}i:553;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15864;}i:554;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"255 ";}i:2;i:15865;}i:555;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15869;}i:556;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:15870;}i:557;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:15870;}i:558;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15870;}i:559;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"0x37CF ";}i:2;i:15872;}i:560;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15879;}i:561;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15879;}i:562;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:"十六进制整数。 ";}i:2;i:15880;}i:563;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15902;}i:564;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15902;}i:565;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"14287 ";}i:2;i:15903;}i:566;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15909;}i:567;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:15910;}i:568;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:15910;}i:569;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15910;}i:570;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"0x3e";}i:2;i:15912;}i:571;a:3:{i:0;s:16:"superscript_open";i:1;a:0:{}i:2;i:15916;}i:572;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"7";}i:2;i:15921;}i:573;a:3:{i:0;s:17:"superscript_close";i:1;a:0:{}i:2;i:15922;}i:574;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:15928;}i:575;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15929;}i:576;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15929;}i:577;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:"十六进制整数。注意‘e’并不被认为指数。 ";}i:2;i:15930;}i:578;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15989;}i:579;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15989;}i:580;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"999 ";}i:2;i:15990;}i:581;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:15994;}i:582;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:15995;}i:583;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:15995;}i:584;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:15995;}i:585;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"0x3.45e";}i:2;i:15997;}i:586;a:3:{i:0;s:16:"superscript_open";i:1;a:0:{}i:2;i:16004;}i:587;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"2";}i:2;i:16009;}i:588;a:3:{i:0;s:17:"superscript_close";i:1;a:0:{}i:2;i:16010;}i:589;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:16016;}i:590;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:16017;}i:591;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:16017;}i:592;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"错误。十六进制数不能有小数部分。 ";}i:2;i:16018;}i:593;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:16067;}i:594;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:16067;}i:595;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:"N/A （编译错误） ";}i:2;i:16068;}i:596;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:16091;}i:597;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:16092;}i:598;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:16092;}i:2;i:16092;}i:599;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16092;}i:600;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:53:"另外，JScript包含特殊值数字。它们是： ";}i:2;i:16095;}i:601;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16149;}i:602;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:16149;}i:603;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:16149;}i:604;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:16149;}i:605;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:110:"NaN （不是数）。当对不适当的数据进行数学运算时使用，例如字符串或未定义值。 ";}i:2;i:16153;}i:606;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:16263;}i:607;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:16263;}i:608;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:16263;}i:609;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:16263;}i:610;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:"正无穷大。在JScript中如果一个正数太大的话使用它来表示。 ";}i:2;i:16267;}i:611;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:16347;}i:612;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:16347;}i:613;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:16347;}i:614;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:16347;}i:615;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:"负无穷大。在JScript中如果一个负数太大的话使用它来表示。 ";}i:2;i:16351;}i:616;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:16431;}i:617;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:16431;}i:618;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:16431;}i:619;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:16431;}i:620;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"正0和负0。Jscript区分正0和负0。 ";}i:2;i:16435;}i:621;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:16477;}i:622;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:16477;}i:623;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:16477;}i:624;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:16479;}i:625;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:19:"Boolean数据类型";i:1;i:4;i:2;i:16479;}i:2;i:16479;}i:626;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:16479;}i:627;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16479;}i:628;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:117:"尽管字符串和数字类型可以有无数不同的值，boolean 数据类型却只有两个值。它们是文字 ";}i:2;i:16506;}i:629;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:16623;}i:630;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"true";}i:2;i:3;i:3;s:4:"true";}i:2;i:16625;}i:631;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:16629;}i:632;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 和 ";}i:2;i:16631;}i:633;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:16636;}i:634;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"false";}i:2;i:3;i:3;s:5:"false";}i:2;i:16638;}i:635;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:16643;}i:636;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:100:"。Boolean值是一个真值，它表示一个状态的有效性（说明该状态为真或假）。";}i:2;i:16645;}i:637;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16745;}i:638;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16745;}i:639;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:87:"脚本中的比较通常得到一个 Boolean 结果。考虑下一行 Jscript 代码。";}i:2;i:16747;}i:640;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:16840;}i:641;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:18:"
y = (x == 2000);
";i:1;s:10:"javascript";i:2;N;}i:2;i:16840;}i:642;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:16840;}i:643;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:106:"这里要比较变量 x 的值是否与数字 2000 相等。如果相等，比较的结果为 Boolean 值 ";}i:2;i:16878;}i:644;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:16984;}i:645;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"true";}i:2;i:3;i:3;s:4:"true";}i:2;i:16986;}i:646;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:16990;}i:647;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:83:"，并将其赋给变量 y。如果x与2000不等，则比较的结果为boolean值";}i:2;i:16992;}i:648;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:17075;}i:649;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"false";}i:2;i:3;i:3;s:5:"false";}i:2;i:17077;}i:650;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:17082;}i:651;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"。";}i:2;i:17084;}i:652;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:17087;}i:653;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:17087;}i:654;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:170:"Boolean值在结构控制中尤其有用。可以将直接创建 boolean 值的比较与用使用该 boolean 值的语句相组合。考虑下面的JScript代码范例。";}i:2;i:17089;}i:655;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:17265;}i:656;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:51:"
if (x == 2000)
    z = z + 1;
else
    x = x + 1;
";i:1;s:10:"javascript";i:2;N;}i:2;i:17265;}i:657;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:17265;}i:658;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"当 boolean 值为 ";}i:2;i:17336;}i:659;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:17355;}i:660;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"true";}i:2;i:3;i:3;s:4:"true";}i:2;i:17357;}i:661;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:17361;}i:662;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:" 时，Jscript 中的 ";}i:2;i:17363;}i:663;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:17385;}i:664;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:7:"if/else";}i:2;i:3;i:3;s:7:"if/else";}i:2;i:17387;}i:665;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:17394;}i:666;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:" 语句执行一个操作（这样，z = z + 1），而当 boolean 值为 ";}i:2;i:17396;}i:667;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:17470;}i:668;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"false";}i:2;i:3;i:3;s:5:"false";}i:2;i:17472;}i:669;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:17477;}i:670;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:" 时执行另一个操作（x = x + 1）。";}i:2;i:17479;}i:671;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:17522;}i:672;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:17522;}i:673;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:120:"可以使用任意表达式作比较表达式。任何值为0、null、未定义或空字符串的表达式被解释为 ";}i:2;i:17524;}i:674;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:17644;}i:675;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"false";}i:2;i:3;i:3;s:5:"false";}i:2;i:17646;}i:676;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:17651;}i:677;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"。其他任意值的表达式解释为 ";}i:2;i:17653;}i:678;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:17693;}i:679;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"true";}i:2;i:3;i:3;s:4:"true";}i:2;i:17695;}i:680;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:17699;}i:681;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"。例如，可以使用如下表达式：";}i:2;i:17701;}i:682;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:17749;}i:683;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:64:"
if (x = y + z) // 这可能不是想要的结果 – 如下！
";i:1;s:10:"javascript";i:2;N;}i:2;i:17749;}i:684;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:17749;}i:685;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:260:"注意上面的代码并不检查 x 是否与 y+z 相等，因为仅使用了一个等号（赋值）。相反的，上面的代码将 y+z 赋给变量 x，然后检查整个表达式的值是否为零。要检查 x 是否与 y+z 相等，使用如下代码。";}i:2;i:17833;}i:686;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18099;}i:687;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:51:"
if (x == y + z) // 这与上面的代码不同！
";i:1;s:10:"javascript";i:2;N;}i:2;i:18099;}i:688;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18099;}i:689;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:"有关比较的详细信息，请参见控制程序的流程。";}i:2;i:18170;}i:690;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18233;}i:691;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:18235;}i:692;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"Null 数据类型";i:1;i:4;i:2;i:18235;}i:2;i:18235;}i:693;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:18235;}i:694;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18235;}i:695;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:"在 Jscript 中数据类型 ";}i:2;i:18260;}i:696;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:18288;}i:697;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"null";}i:2;i:3;i:3;s:4:"null";}i:2;i:18290;}i:698;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:18294;}i:699;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:" 只有一个值：null。关键字 null 不能用作函数或变量的名称。";}i:2;i:18296;}i:700;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18376;}i:701;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18376;}i:702;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:217:"包含 null 的变量包含“无值”或“无对象”。换句话说，该变量没有保存有效的数、字符串、boolean、数组或对象。可以通过给一个变量赋 null 值来清除变量的内容。";}i:2;i:18378;}i:703;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18595;}i:704;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18595;}i:705;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:123:"请注意，在 Jscript 中，null 与 0 不相等（与在 C 和 C++ 中不同）。同时应该指出的是，Jscript中 ";}i:2;i:18597;}i:706;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:18720;}i:707;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"typeof";}i:2;i:3;i:3;s:6:"typeof";}i:2;i:18722;}i:708;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:18728;}i:709;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" 运算符将报告 null 值为 ";}i:2;i:18730;}i:710;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:18762;}i:711;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"Object";}i:2;i:3;i:3;s:6:"Object";}i:2;i:18764;}i:712;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:18770;}i:713;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:75:" 类型，而非类型 null。这点潜在的混淆是为了向下兼容。";}i:2;i:18772;}i:714;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18847;}i:715;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:18849;}i:716;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:22:"Undefined 数据类型";i:1;i:4;i:2;i:18849;}i:2;i:18849;}i:717;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:18849;}i:718;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18849;}i:719;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:"如下情况使返回 undefined 值： ";}i:2;i:18879;}i:720;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:18919;}i:721;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:18919;}i:722;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:18919;}i:723;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:18919;}i:724;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"对象属性不存在， ";}i:2;i:18923;}i:725;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:18948;}i:726;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:18948;}i:727;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:18948;}i:728;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:18948;}i:729;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:"声明了变量但从未赋值。 ";}i:2;i:18952;}i:730;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:18986;}i:731;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:18986;}i:732;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:18986;}i:733;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:18986;}i:734;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:218:"注意不能通过与 undefined 做比较来测试一个变量是否存在，虽然可以检查它的类型是否为“undefined”。在以下的代码范例中，假设程序员想测试是否已经声明变量 x ：";}i:2;i:18989;}i:735;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:19213;}i:736;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:273:"
// 这种方法不起作用
if (x == undefined)
    // 作某些操作

// 这个方法同样不起作用- 必须检查
// 字符串 "undefined"
if (typeof(x) == undefined)
    // 作某些操作

// 这个方法有效
if (typeof(x) == "undefined")
    // 作某些操作
";i:1;s:10:"javascript";i:2;N;}i:2;i:19213;}i:737;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:19213;}i:738;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"考虑将 undefined 值与null做比较。";}i:2;i:19506;}i:739;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:19554;}i:740;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:26:"
someObject.prop == null;
";i:1;s:10:"javascript";i:2;N;}i:2;i:19554;}i:741;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:19554;}i:742;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:"如下情况时，比较的结果为 ";}i:2;i:19600;}i:743;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:19637;}i:744;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"true";}i:2;i:3;i:3;s:4:"true";}i:2;i:19639;}i:745;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:19643;}i:746;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"， ";}i:2;i:19645;}i:747;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:19650;}i:748;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:19650;}i:749;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:19650;}i:750;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:19650;}i:751;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:"如果属性 someObject.prop 包含 null 值， ";}i:2;i:19654;}i:752;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:19702;}i:753;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:19702;}i:754;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:19702;}i:755;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:19702;}i:756;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"如果属性 someObject.prop 不存在。 ";}i:2;i:19706;}i:757;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:19748;}i:758;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:19748;}i:759;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:19748;}i:760;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:19748;}i:761;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:"要检查一个对象属性是否存在，可以使用新的 ";}i:2;i:19752;}i:762;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:19813;}i:763;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"in";}i:2;i:3;i:3;s:2:"in";}i:2;i:19815;}i:764;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:19817;}i:765;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 运算符： ";}i:2;i:19819;}i:766;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:19833;}i:767;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:19833;}i:768;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:19833;}i:769;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:58:"
if ("prop" in someObject)
// someObject 有属性 'prop'
";i:1;s:10:"javascript";i:2;N;}i:2;i:19839;}i:770;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:19917;}i:771;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"JScript 运算符";i:1;i:3;i:2;i:19917;}i:2;i:19917;}i:772;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:19917;}i:773;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:19917;}i:774;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:102:"JScript 具有全范围的运算符,包括算术、逻辑、位、赋值以及其他某些运算符。";}i:2;i:19944;}i:775;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:20047;}i:776;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:10;i:1;i:15;i:2;i:20048;}i:2;i:20047;}i:777;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:20047;}i:778;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:20047;}i:779;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:20047;}i:780;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"  计算  ";}i:2;i:20049;}i:781;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:20059;}i:782;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:20059;}i:783;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"  逻辑  ";}i:2;i:20060;}i:784;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:20070;}i:785;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:20070;}i:786;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"  位运算  ";}i:2;i:20071;}i:787;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:20084;}i:788;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:20084;}i:789;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"  赋值  ";}i:2;i:20085;}i:790;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:20095;}i:791;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:20095;}i:792;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"  杂项  ";}i:2;i:20096;}i:793;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:20106;}i:794;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20106;}i:795;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"  ";}i:2;i:20107;}i:796;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:20109;}i:797;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20109;}i:798;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20110;}i:799;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:20111;}i:800;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20111;}i:801;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20112;}i:802;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:20113;}i:803;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20113;}i:804;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20114;}i:805;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:20115;}i:806;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20115;}i:807;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20116;}i:808;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:20117;}i:809;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:20126;}i:810;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:20126;}i:811;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:20126;}i:812;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20126;}i:813;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"描述 ";}i:2;i:20128;}i:814;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20135;}i:815;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20135;}i:816;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"符号 ";}i:2;i:20136;}i:817;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20143;}i:818;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20143;}i:819;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"描述 ";}i:2;i:20144;}i:820;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20151;}i:821;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20151;}i:822;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"符号 ";}i:2;i:20152;}i:823;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20159;}i:824;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20159;}i:825;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"描述 ";}i:2;i:20160;}i:826;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20167;}i:827;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20167;}i:828;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"符号 ";}i:2;i:20168;}i:829;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20175;}i:830;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20175;}i:831;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"描述 ";}i:2;i:20176;}i:832;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20183;}i:833;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20183;}i:834;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"符号 ";}i:2;i:20184;}i:835;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20191;}i:836;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20191;}i:837;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"描述 ";}i:2;i:20192;}i:838;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20199;}i:839;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20199;}i:840;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"符号";}i:2;i:20200;}i:841;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20206;}i:842;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:20208;}i:843;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:20208;}i:844;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20208;}i:845;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"负值 ";}i:2;i:20210;}i:846;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20217;}i:847;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20217;}i:848;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"- ";}i:2;i:20218;}i:849;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20220;}i:850;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20220;}i:851;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"逻辑非 ";}i:2;i:20221;}i:852;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20231;}i:853;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20231;}i:854;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"! ";}i:2;i:20232;}i:855;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20234;}i:856;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20234;}i:857;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"按位取反 ";}i:2;i:20235;}i:858;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20248;}i:859;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20248;}i:860;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"~ ";}i:2;i:20249;}i:861;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20251;}i:862;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20251;}i:863;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"赋值 ";}i:2;i:20252;}i:864;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20259;}i:865;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20259;}i:866;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"= ";}i:2;i:20260;}i:867;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20262;}i:868;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20262;}i:869;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"删除 ";}i:2;i:20263;}i:870;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20270;}i:871;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20270;}i:872;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"delete ";}i:2;i:20271;}i:873;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20278;}i:874;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:20279;}i:875;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:20279;}i:876;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20279;}i:877;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"递增 ";}i:2;i:20281;}i:878;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20288;}i:879;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20288;}i:880;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"++  ";}i:2;i:20289;}i:881;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20293;}i:882;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20293;}i:883;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"小于 ";}i:2;i:20294;}i:884;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20301;}i:885;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20301;}i:886;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"< ";}i:2;i:20302;}i:887;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20304;}i:888;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20304;}i:889;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"按位左移 ";}i:2;i:20305;}i:890;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20318;}i:891;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20318;}i:892;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:2:"<<";}i:2;i:20327;}i:893;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"  ";}i:2;i:20338;}i:894;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20340;}i:895;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20340;}i:896;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"运算赋值 ";}i:2;i:20341;}i:897;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20354;}i:898;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20354;}i:899;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"oP=  ";}i:2;i:20355;}i:900;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20360;}i:901;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20360;}i:902;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"typeof运算符 ";}i:2;i:20361;}i:903;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20377;}i:904;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20377;}i:905;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"typeof ";}i:2;i:20378;}i:906;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20385;}i:907;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:20386;}i:908;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:20386;}i:909;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20386;}i:910;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"递减 ";}i:2;i:20388;}i:911;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20395;}i:912;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20395;}i:913;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:20396;}i:914;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"  ";}i:2;i:20398;}i:915;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20400;}i:916;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20400;}i:917;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"大于 ";}i:2;i:20401;}i:918;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20408;}i:919;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20408;}i:920;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"> ";}i:2;i:20409;}i:921;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20411;}i:922;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20411;}i:923;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"按位右移 ";}i:2;i:20412;}i:924;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20425;}i:925;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20425;}i:926;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:2:">>";}i:2;i:20434;}i:927;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"     ";}i:2;i:20445;}i:928;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20450;}i:929;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20450;}i:930;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20451;}i:931;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20452;}i:932;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20452;}i:933;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20453;}i:934;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20454;}i:935;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20454;}i:936;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"void  ";}i:2;i:20455;}i:937;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20461;}i:938;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20461;}i:939;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"void ";}i:2;i:20462;}i:940;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20467;}i:941;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:20468;}i:942;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:20468;}i:943;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20468;}i:944;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"乘法 ";}i:2;i:20470;}i:945;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20477;}i:946;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20477;}i:947;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"* ";}i:2;i:20478;}i:948;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20480;}i:949;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20480;}i:950;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"小于等于 ";}i:2;i:20481;}i:951;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20494;}i:952;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20494;}i:953;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:2:"<=";}i:2;i:20503;}i:954;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20514;}i:955;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20515;}i:956;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20515;}i:957;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"无符号右移  ";}i:2;i:20516;}i:958;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20533;}i:959;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20533;}i:960;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:3:">>>";}i:2;i:20542;}i:961;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"  ";}i:2;i:20554;}i:962;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20556;}i:963;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20556;}i:964;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20557;}i:965;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20558;}i:966;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20558;}i:967;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"    ";}i:2;i:20559;}i:968;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20563;}i:969;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20563;}i:970;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"instanceof ";}i:2;i:20564;}i:971;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20575;}i:972;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20575;}i:973;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"instanceof ";}i:2;i:20576;}i:974;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20587;}i:975;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:20588;}i:976;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:20588;}i:977;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20588;}i:978;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"除法 ";}i:2;i:20590;}i:979;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20597;}i:980;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20597;}i:981;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"/ ";}i:2;i:20598;}i:982;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20600;}i:983;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20600;}i:984;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"大于等于 ";}i:2;i:20601;}i:985;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20614;}i:986;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20614;}i:987;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:">= ";}i:2;i:20615;}i:988;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20618;}i:989;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20618;}i:990;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"按位与  ";}i:2;i:20619;}i:991;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20630;}i:992;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20630;}i:993;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"&     ";}i:2;i:20631;}i:994;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20637;}i:995;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20637;}i:996;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20638;}i:997;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20639;}i:998;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20639;}i:999;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20640;}i:1000;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20641;}i:1001;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20641;}i:1002;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"new ";}i:2;i:20642;}i:1003;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20646;}i:1004;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20646;}i:1005;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"new ";}i:2;i:20647;}i:1006;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20651;}i:1007;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:20652;}i:1008;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:20652;}i:1009;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20652;}i:1010;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"取模运算 ";}i:2;i:20654;}i:1011;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20667;}i:1012;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20667;}i:1013;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"% ";}i:2;i:20668;}i:1014;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20670;}i:1015;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20670;}i:1016;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"等于 ";}i:2;i:20671;}i:1017;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20678;}i:1018;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20678;}i:1019;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"== ";}i:2;i:20679;}i:1020;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20682;}i:1021;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20682;}i:1022;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"按位异或  ";}i:2;i:20683;}i:1023;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20697;}i:1024;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20697;}i:1025;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"^";}i:2;i:20706;}i:1026;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"   ";}i:2;i:20716;}i:1027;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20719;}i:1028;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20719;}i:1029;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20720;}i:1030;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20721;}i:1031;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20721;}i:1032;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"   ";}i:2;i:20722;}i:1033;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20725;}i:1034;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20725;}i:1035;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"in ";}i:2;i:20726;}i:1036;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20729;}i:1037;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20729;}i:1038;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"in ";}i:2;i:20730;}i:1039;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20733;}i:1040;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:20734;}i:1041;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:20734;}i:1042;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20734;}i:1043;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"加法 ";}i:2;i:20736;}i:1044;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20743;}i:1045;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20743;}i:1046;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"+ ";}i:2;i:20744;}i:1047;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20746;}i:1048;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20746;}i:1049;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"不等于 ";}i:2;i:20747;}i:1050;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20757;}i:1051;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20757;}i:1052;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"!= ";}i:2;i:20758;}i:1053;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20761;}i:1054;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20761;}i:1055;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"按位或  ";}i:2;i:20762;}i:1056;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20773;}i:1057;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20773;}i:1058;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"|";}i:2;i:20782;}i:1059;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"          ";}i:2;i:20792;}i:1060;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20802;}i:1061;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20803;}i:1062;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20803;}i:1063;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20803;}i:1064;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20803;}i:1065;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20803;}i:1066;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20803;}i:1067;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20803;}i:1068;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20803;}i:1069;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20803;}i:1070;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20803;}i:1071;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20803;}i:1072;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20803;}i:1073;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:20803;}i:1074;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:20803;}i:1075;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20803;}i:1076;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"减法 ";}i:2;i:20805;}i:1077;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20812;}i:1078;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20812;}i:1079;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"- ";}i:2;i:20813;}i:1080;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20815;}i:1081;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20815;}i:1082;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"逻辑与 ";}i:2;i:20816;}i:1083;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20826;}i:1084;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20826;}i:1085;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"&&             ";}i:2;i:20827;}i:1086;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20842;}i:1087;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20843;}i:1088;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20843;}i:1089;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20843;}i:1090;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20843;}i:1091;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20843;}i:1092;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20843;}i:1093;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20843;}i:1094;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20843;}i:1095;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20843;}i:1096;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20843;}i:1097;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20843;}i:1098;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20843;}i:1099;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20843;}i:1100;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20843;}i:1101;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20843;}i:1102;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20843;}i:1103;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20843;}i:1104;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20843;}i:1105;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:20843;}i:1106;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:20843;}i:1107;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20843;}i:1108;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20845;}i:1109;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20846;}i:1110;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20846;}i:1111;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"   ";}i:2;i:20847;}i:1112;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20850;}i:1113;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20850;}i:1114;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"逻辑或 ";}i:2;i:20851;}i:1115;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20861;}i:1116;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20861;}i:1117;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:2:"||";}i:2;i:20870;}i:1118;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"             ";}i:2;i:20881;}i:1119;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20894;}i:1120;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20895;}i:1121;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20895;}i:1122;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20895;}i:1123;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20895;}i:1124;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20895;}i:1125;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20895;}i:1126;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20895;}i:1127;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20895;}i:1128;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20895;}i:1129;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20895;}i:1130;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20895;}i:1131;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20895;}i:1132;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20895;}i:1133;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20895;}i:1134;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20895;}i:1135;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20895;}i:1136;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20895;}i:1137;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20895;}i:1138;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:20895;}i:1139;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:20895;}i:1140;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20895;}i:1141;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20897;}i:1142;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20898;}i:1143;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20898;}i:1144;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"   ";}i:2;i:20899;}i:1145;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20902;}i:1146;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20902;}i:1147;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:"条件（三元运算符） ";}i:2;i:20903;}i:1148;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20931;}i:1149;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20931;}i:1150;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"?:              ";}i:2;i:20932;}i:1151;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20948;}i:1152;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20949;}i:1153;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20949;}i:1154;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20949;}i:1155;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20949;}i:1156;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20949;}i:1157;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20949;}i:1158;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20949;}i:1159;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20949;}i:1160;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20949;}i:1161;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20949;}i:1162;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20949;}i:1163;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20949;}i:1164;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20949;}i:1165;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20949;}i:1166;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20949;}i:1167;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20949;}i:1168;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20949;}i:1169;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20949;}i:1170;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:20949;}i:1171;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:20949;}i:1172;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20949;}i:1173;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20951;}i:1174;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20952;}i:1175;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20952;}i:1176;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"   ";}i:2;i:20953;}i:1177;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20956;}i:1178;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20956;}i:1179;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"逗号 ";}i:2;i:20957;}i:1180;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20964;}i:1181;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20964;}i:1182;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:",             ";}i:2;i:20965;}i:1183;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20979;}i:1184;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20980;}i:1185;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20980;}i:1186;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20980;}i:1187;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20980;}i:1188;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20980;}i:1189;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20980;}i:1190;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20980;}i:1191;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20980;}i:1192;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20980;}i:1193;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20980;}i:1194;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20980;}i:1195;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20980;}i:1196;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20980;}i:1197;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20980;}i:1198;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20980;}i:1199;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20980;}i:1200;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:20980;}i:1201;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20980;}i:1202;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:20980;}i:1203;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:20980;}i:1204;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20980;}i:1205;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:20982;}i:1206;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20983;}i:1207;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:20983;}i:1208;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"   ";}i:2;i:20984;}i:1209;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:20987;}i:1210;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:20987;}i:1211;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"严格相等 ";}i:2;i:20988;}i:1212;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21001;}i:1213;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:21001;}i:1214;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"===             ";}i:2;i:21002;}i:1215;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21018;}i:1216;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:21019;}i:1217;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:21019;}i:1218;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21019;}i:1219;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:21019;}i:1220;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:21019;}i:1221;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21019;}i:1222;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:21019;}i:1223;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:21019;}i:1224;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21019;}i:1225;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:21019;}i:1226;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:21019;}i:1227;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21019;}i:1228;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:21019;}i:1229;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:21019;}i:1230;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21019;}i:1231;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:21019;}i:1232;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:21019;}i:1233;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21019;}i:1234;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:21019;}i:1235;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:21019;}i:1236;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:21019;}i:1237;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:21021;}i:1238;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21022;}i:1239;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:21022;}i:1240;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"   ";}i:2;i:21023;}i:1241;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21026;}i:1242;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:21026;}i:1243;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"非严格相等 ";}i:2;i:21027;}i:1244;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21043;}i:1245;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:21043;}i:1246;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:"!==              ";}i:2;i:21044;}i:1247;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21061;}i:1248;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:21062;}i:1249;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:21062;}i:1250;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21062;}i:1251;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:21062;}i:1252;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:21062;}i:1253;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21062;}i:1254;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:21062;}i:1255;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:21062;}i:1256;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21062;}i:1257;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:21062;}i:1258;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:21062;}i:1259;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21062;}i:1260;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:21062;}i:1261;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:21062;}i:1262;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21062;}i:1263;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:21062;}i:1264;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:21062;}i:1265;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:21062;}i:1266;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:21062;}i:1267;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:21062;}i:2;i:21062;}i:1268;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:21062;}i:1269;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:144:"== （相等）与 === （严格相等）的区别在于恒等运算符在比较前强制转换不同类型的值。例如，恒等对字符串 ";}i:2;i:21065;}i:1270;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:21209;}i:1271;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"1";}i:2;i:21210;}i:1272;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:21211;}i:1273;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:118:" 与数值 1 的比较结果将为 true。而严格相等不强制转换不同类型的值，因此它认为字符串 ";}i:2;i:21212;}i:1274;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:21330;}i:1275;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"1";}i:2;i:21331;}i:1276;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:21332;}i:1277;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:" 与数值 1 不相同。";}i:2;i:21333;}i:1278;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:21358;}i:1279;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:21358;}i:1280;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:126:"基本的字符串、数值和布尔值是按值比较的。如果它们的值相同，比较结果为相等。对象（包括";}i:2;i:21360;}i:1281;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:21486;}i:1282;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"Array";}i:2;i:3;i:3;s:5:"Array";}i:2;i:21488;}i:1283;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:21493;}i:1284;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:21495;}i:1285;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:21498;}i:1286;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"Function";}i:2;i:3;i:3;s:8:"Function";}i:2;i:21500;}i:1287;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:21508;}i:1288;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:21510;}i:1289;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:21513;}i:1290;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"String";}i:2;i:3;i:3;s:6:"String";}i:2;i:21515;}i:1291;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:21521;}i:1292;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:21523;}i:1293;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:21526;}i:1294;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"Number";}i:2;i:3;i:3;s:6:"Number";}i:2;i:21528;}i:1295;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:21534;}i:1296;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:21536;}i:1297;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:21539;}i:1298;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:7:"Boolean";}i:2;i:3;i:3;s:7:"Boolean";}i:2;i:21541;}i:1299;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:21548;}i:1300;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:21550;}i:1301;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:21553;}i:1302;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"Error";}i:2;i:3;i:3;s:5:"Error";}i:2;i:21555;}i:1303;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:21560;}i:1304;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:21562;}i:1305;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:21565;}i:1306;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"Date";}i:2;i:3;i:3;s:4:"Date";}i:2;i:21567;}i:1307;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:21571;}i:1308;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"以及 ";}i:2;i:21573;}i:1309;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:21580;}i:1310;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"RegExp";}i:2;i:3;i:3;s:6:"RegExp";}i:2;i:21582;}i:1311;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:21588;}i:1312;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:147:" 对象）按引用比较。即使这些类型的两个变量具有相同的值，只有在它们正好为同一对象时比较结果才为 true。";}i:2;i:21590;}i:1313;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:21737;}i:1314;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:21737;}i:1315;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"例如：";}i:2;i:21739;}i:1316;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:21754;}i:1317;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:614:"
// 具有相同值的两个基本字符串。
var string1 = "Hello";
var string2 = "Hello";

// 具有相同值的两个 String 对象。
var StringObject1 = new String(string1);
var StringObject2 = new String(string2);

// 比较结果为 true。
if (string1 == string2)
     // 执行某些命令（将要运行的）。

// 比较结果为 false。
if (StringObject1 == StringObject2)
    //执行某些命令（不会运行）。

// 要比较 String 对象的值， 
// 用 toString() 或者 valueOf() 方法。
if (StringObject1.valueOf() == StringObject2)
     //执行某些命令（将要运行的）。
";i:1;s:10:"javascript";i:2;N;}i:2;i:21754;}i:1318;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:22389;}i:1319;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"控制程序的流程";i:1;i:3;i:2;i:22389;}i:2;i:22389;}i:1320;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:22389;}i:1321;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:22389;}i:1322;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:131:"Jscript 脚本中的语句一般是按照写的顺序来运行的。这种运行称为顺序运行，是程序流的默认方向。";}i:2;i:22420;}i:1323;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:22551;}i:1324;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:22551;}i:1325;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:165:"与顺序运行不同，另一种运行将程序流转换到脚本的另外的部分。也就是，不按顺序运行下一条语句，而是运行另外的语句。";}i:2;i:22553;}i:1326;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:22718;}i:1327;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:22718;}i:1328;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:179:"要使脚本可用，该控制的转换必须以逻辑方式执行。程序控制的转换是基于一个“决定”，这个“决定”结果是真或假（返回  Boolean 型 ";}i:2;i:22720;}i:1329;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:22899;}i:1330;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"true";}i:2;i:3;i:3;s:4:"true";}i:2;i:22901;}i:1331;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:22905;}i:1332;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 或 ";}i:2;i:22907;}i:1333;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:22912;}i:1334;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"false";}i:2;i:3;i:3;s:5:"false";}i:2;i:22914;}i:1335;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:22919;}i:1336;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:106:"）。 创建一个表达式，然后测试其是否为真。主要有两种程序结构实现本功能。";}i:2;i:22921;}i:1337;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:23027;}i:1338;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:23027;}i:1339;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:160:"第一种是选择结构。用来指明两种程序流方向，在程序中创建一个交叉点（像岔路）。在 Jscript 中有四种选择结构可用。 ";}i:2;i:23029;}i:1340;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:23190;}i:1341;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:23190;}i:1342;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:23190;}i:1343;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:23190;}i:1344;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"单一选择结构（";}i:2;i:23194;}i:1345;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:23215;}i:1346;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"if";}i:2;i:3;i:3;s:2:"if";}i:2;i:23217;}i:1347;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:23219;}i:1348;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"）， ";}i:2;i:23221;}i:1349;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:23228;}i:1350;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:23228;}i:1351;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:23228;}i:1352;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:23228;}i:1353;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"二路选择结构（";}i:2;i:23232;}i:1354;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:23253;}i:1355;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:7:"if/else";}i:2;i:3;i:3;s:7:"if/else";}i:2;i:23255;}i:1356;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:23262;}i:1357;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"）， ";}i:2;i:23264;}i:1358;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:23271;}i:1359;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:23271;}i:1360;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:23271;}i:1361;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:23271;}i:1362;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:"内联三元运算符 ";}i:2;i:23275;}i:1363;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:23297;}i:1364;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:1:"?";}i:2;i:3;i:3;s:1:"?";}i:2;i:23299;}i:1365;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:23300;}i:1366;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:": ";}i:2;i:23302;}i:1367;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:23304;}i:1368;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:23304;}i:1369;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:23304;}i:1370;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:23304;}i:1371;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"多路选择结构（";}i:2;i:23308;}i:1372;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:23329;}i:1373;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"switch";}i:2;i:3;i:3;s:6:"switch";}i:2;i:23331;}i:1374;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:23337;}i:1375;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"）。 ";}i:2;i:23339;}i:1376;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:23346;}i:1377;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:23346;}i:1378;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:23346;}i:1379;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:23346;}i:1380;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:313:"第二种类型的程序控制结构是循环结构。使用循环结构来指明当某些条件保持为真时要重复的动作。当控制语句的条件得到满足时（通常在某些迭代的特定数字后），控制跳过循环结构传递到下条语句。在 Jscript 中有四种循环结构可用。 ";}i:2;i:23348;}i:1381;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:23662;}i:1382;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:23662;}i:1383;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:23662;}i:1384;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:23662;}i:1385;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"在循环的开头测试表达式（";}i:2;i:23666;}i:1386;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:23702;}i:1387;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"while";}i:2;i:3;i:3;s:5:"while";}i:2;i:23704;}i:1388;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:23709;}i:1389;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"）， ";}i:2;i:23711;}i:1390;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:23718;}i:1391;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:23718;}i:1392;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:23718;}i:1393;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:23718;}i:1394;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"在循环的末尾测试表达式（";}i:2;i:23722;}i:1395;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:23758;}i:1396;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"do/while";}i:2;i:3;i:3;s:8:"do/while";}i:2;i:23760;}i:1397;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:23768;}i:1398;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"）， ";}i:2;i:23770;}i:1399;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:23777;}i:1400;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:23777;}i:1401;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:23777;}i:1402;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:23777;}i:1403;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"对对象的每个属性都进行操作（";}i:2;i:23781;}i:1404;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:23823;}i:1405;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"for/in";}i:2;i:3;i:3;s:6:"for/in";}i:2;i:23825;}i:1406;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:23831;}i:1407;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"）， ";}i:2;i:23833;}i:1408;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:23840;}i:1409;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:23840;}i:1410;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:23840;}i:1411;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:23840;}i:1412;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:"由计数器控制的循环（";}i:2;i:23844;}i:1413;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:23874;}i:1414;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"or";}i:2;i:3;i:3;s:2:"or";}i:2;i:23876;}i:1415;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:23878;}i:1416;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"）。 ";}i:2;i:23880;}i:1417;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:23887;}i:1418;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:23887;}i:1419;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:23887;}i:1420;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:23887;}i:1421;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:87:"通过嵌套和堆栈选择、循环控制结构，可以创建相当复杂的脚本。";}i:2;i:23889;}i:1422;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:23976;}i:1423;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:23976;}i:1424;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:81:"第三种形式的结构程序流由意外处理给出，本文档不作讨论。";}i:2;i:23978;}i:1425;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:24059;}i:1426;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:24061;}i:1427;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"使用条件语句";i:1;i:4;i:2;i:24061;}i:2;i:24061;}i:1428;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:24061;}i:1429;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:24061;}i:1430;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"JScript 支持 ";}i:2;i:24087;}i:1431;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:24102;}i:1432;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"if";}i:2;i:3;i:3;s:2:"if";}i:2;i:24104;}i:1433;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:24106;}i:1434;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 和 ";}i:2;i:24108;}i:1435;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:24113;}i:1436;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"if";}i:2;i:3;i:3;s:2:"if";}i:2;i:24115;}i:1437;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:24117;}i:1438;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"else";}i:2;i:3;i:3;s:4:"else";}i:2;i:24120;}i:1439;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:24124;}i:1440;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:" 条件语句。在 ";}i:2;i:24126;}i:1441;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:24146;}i:1442;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"if";}i:2;i:3;i:3;s:2:"if";}i:2;i:24148;}i:1443;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:24150;}i:1444;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:101:" 语句中将测试一个条件，如果该条件满足测试，执行相关的 JScript 编码。在 ";}i:2;i:24152;}i:1445;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:24253;}i:1446;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"if";}i:2;i:3;i:3;s:2:"if";}i:2;i:24255;}i:1447;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:24257;}i:1448;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"else";}i:2;i:3;i:3;s:4:"else";}i:2;i:24260;}i:1449;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:24264;}i:1450;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:159:" 语句中，如果条件不满足测试，则将执行不同的代码。最简单的 if 语句格式可以在一行中写完，不过更常见的是多行的 ";}i:2;i:24266;}i:1451;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:24425;}i:1452;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"if";}i:2;i:3;i:3;s:2:"if";}i:2;i:24427;}i:1453;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:24429;}i:1454;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 和 ";}i:2;i:24431;}i:1455;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:24436;}i:1456;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"if";}i:2;i:3;i:3;s:2:"if";}i:2;i:24438;}i:1457;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:24440;}i:1458;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"else";}i:2;i:3;i:3;s:4:"else";}i:2;i:24443;}i:1459;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:24447;}i:1460;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" 语句。";}i:2;i:24449;}i:1461;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:24459;}i:1462;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:24459;}i:1463;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:"下述示例演示了使用 ";}i:2;i:24461;}i:1464;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:24489;}i:1465;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"if";}i:2;i:3;i:3;s:2:"if";}i:2;i:24491;}i:1466;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:24493;}i:1467;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 和 ";}i:2;i:24495;}i:1468;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:24500;}i:1469;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"if";}i:2;i:3;i:3;s:2:"if";}i:2;i:24502;}i:1470;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:24504;}i:1471;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"else";}i:2;i:3;i:3;s:4:"else";}i:2;i:24507;}i:1472;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:24511;}i:1473;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:164:" 语句的各种可能的语法。第一个示例演示了最简单的布尔测试。当（且仅当）括号之间的项的值为（或者可被强制转换为） ";}i:2;i:24513;}i:1474;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:24677;}i:1475;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"true";}i:2;i:3;i:3;s:4:"true";}i:2;i:24679;}i:1476;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:24683;}i:1477;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:" 时，";}i:2;i:24685;}i:1478;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:24692;}i:1479;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"if";}i:2;i:3;i:3;s:2:"if";}i:2;i:24694;}i:1480;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:24696;}i:1481;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:" 后续的语句或语句块才会被执行。 ";}i:2;i:24698;}i:1482;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:24751;}i:1483;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:649:"
// smash() 函数是在该代码的其他地方定义的。
// 布尔测试，看 newShip 是否为 true。
if (newShip)
   smash(champagneBottle,bow); 

// 在本示例中，除非两个条件都为真，否则该测试将不会被满足。
if (rind.color == "deep yellow " && rind.texture == "large and small wrinkles")
{
   theResponse = ("Is it a Crenshaw melon?");
}

// 在本示例中，只要任何一个条件为真，则测试即会满足。
var theReaction = "";
if ((dayOfWeek == "Saturday") || (dayOfWeek == "Sunday"))
{
   theReaction = ("I'm off to the beach!");
}
else
{
   theReaction = ("Hi ho, hi ho, it's off to work I go!");
}
";i:1;s:10:"javascript";i:2;N;}i:2;i:24751;}i:1484;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:25421;}i:1485;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"条件运算符";i:1;i:5;i:2;i:25421;}i:2;i:25421;}i:1486;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:25421;}i:1487;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:25421;}i:1488;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:120:"JScript 也支持隐式的条件格式。该格式在要测试的条件后使用一个问号（而不是在条件前的 ";}i:2;i:25442;}i:1489;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:25562;}i:1490;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"if";}i:2;i:3;i:3;s:2:"if";}i:2;i:25564;}i:1491;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:25566;}i:1492;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:163:" ）。它也指定两个可选项，一个在满足条件时使用，另一个在条件不满足时使用。这两个选择项之间必须用一个冒号隔开。";}i:2;i:25568;}i:1493;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:25737;}i:1494;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:165:"
var hours = "";

// 下面的代码指定 hours 是包含 theHour 的内容，
// 还是包含 theHour - 12 的内容。

hours += (theHour >= 12) ? " PM" : " AM";
";i:1;s:10:"javascript";i:2;N;}i:2;i:25737;}i:1495;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:25737;}i:1496;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:276:"如果要一起测试多个条件，并且知道某个条件比其他条件更可能满足或不满足测试，可以使用称为“短路计算”的特性来加速脚本的运行速度。当 JScript 计算逻辑表达式时，只计算要得到结果所需的子表达式。";}i:2;i:25922;}i:1497;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:26198;}i:1498;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:26198;}i:1499;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:"例如，如果有一个“与”表达式，如";}i:2;i:26200;}i:1500;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:26:" ((x == 123) && (y == 42))";}i:2;i:26256;}i:1501;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:170:"，Jscript 首先检查 x 是否为 123。如果不是，即使 y 等于 42，整个表达式的值也不可能为 true。因此，并不对 y 作测试，Jscript 返回 ";}i:2;i:26291;}i:1502;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:26461;}i:1503;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"false";}i:2;i:3;i:3;s:5:"false";}i:2;i:26463;}i:1504;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:26468;}i:1505;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:" 值。";}i:2;i:26470;}i:1506;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:26477;}i:1507;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:26477;}i:1508;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:306:"类似地，如果多个条件中只要有一个为真（使用 || 运算符），则当任何一个条件满足该测试时测试则停止。如果要测试的条件包括函数调用或其他复合表达式，这种处理方式就有效。出于此种想法，写 OR 表达式时，先写最有可能为 ";}i:2;i:26479;}i:1509;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:26785;}i:1510;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"true";}i:2;i:3;i:3;s:4:"true";}i:2;i:26787;}i:1511;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:26791;}i:1512;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:58:" 的条件。写 AND 表达式时，先写最有可能为 ";}i:2;i:26793;}i:1513;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:26851;}i:1514;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"false";}i:2;i:3;i:3;s:5:"false";}i:2;i:26853;}i:1515;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:26858;}i:1516;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:" 的条件。";}i:2;i:26860;}i:1517;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:26873;}i:1518;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:26873;}i:1519;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:"以这种方式设计脚本的好处的一个示例是：在下例中如果 ";}i:2;i:26875;}i:1520;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:26951;}i:1521;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:10:"runfirst()";}i:2;i:3;i:3;s:10:"runfirst()";}i:2;i:26953;}i:1522;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:26963;}i:1523;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" 返回 ";}i:2;i:26965;}i:1524;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:26973;}i:1525;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:1:"0";}i:2;i:3;i:3;s:1:"0";}i:2;i:26975;}i:1526;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:26976;}i:1527;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 或 ";}i:2;i:26978;}i:1528;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:26983;}i:1529;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"false";}i:2;i:3;i:3;s:5:"false";}i:2;i:26985;}i:1530;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:26990;}i:1531;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"， 则不会运行 ";}i:2;i:26992;}i:1532;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:27012;}i:1533;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:11:"runsecond()";}i:2;i:3;i:3;s:11:"runsecond()";}i:2;i:27014;}i:1534;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:27025;}i:1535;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"。 ";}i:2;i:27027;}i:1536;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:27037;}i:1537;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:73:"
if ((runfirst() == 0) || (runsecond() == 0)) {
    // 若干代码。
}
";i:1;s:10:"javascript";i:2;N;}i:2;i:27037;}i:1538;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:27131;}i:1539;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"使用循环";i:1;i:4;i:2;i:27131;}i:2;i:27131;}i:1540;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:27131;}i:1541;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:27131;}i:1542;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:84:"有多种方式来重复执行一条语句或语句块。通常重复执行被称为";}i:2;i:27151;}i:1543;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:27235;}i:1544;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"循环";}i:2;i:27237;}i:1545;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:27243;}i:1546;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"或";}i:2;i:27245;}i:1547;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:27248;}i:1548;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"重复";}i:2;i:27250;}i:1549;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:27256;}i:1550;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:174:"。重复只是循环的一个运行。典型情况是用一个变量测试来进行控制，每执行一次循环变量的取值都会更改。JScript 支持四种循环： ";}i:2;i:27258;}i:1551;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:27432;}i:1552;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"for";}i:2;i:3;i:3;s:3:"for";}i:2;i:27434;}i:1553;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:27437;}i:1554;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" 循环、 ";}i:2;i:27439;}i:1555;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:27450;}i:1556;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"for";}i:2;i:3;i:3;s:3:"for";}i:2;i:27452;}i:1557;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:27455;}i:1558;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"in";}i:2;i:3;i:3;s:2:"in";}i:2;i:27458;}i:1559;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:27460;}i:1560;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" 循环、 ";}i:2;i:27462;}i:1561;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:27473;}i:1562;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"while";}i:2;i:3;i:3;s:5:"while";}i:2;i:27475;}i:1563;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:27480;}i:1564;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" 循环、 ";}i:2;i:27482;}i:1565;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:27493;}i:1566;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"do";}i:2;i:3;i:3;s:2:"do";}i:2;i:27495;}i:1567;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:27497;}i:1568;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"while";}i:2;i:3;i:3;s:5:"while";}i:2;i:27500;}i:1569;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:27505;}i:1570;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" 循环。";}i:2;i:27507;}i:1571;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:27517;}i:1572;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:27519;}i:1573;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"使用 for 循环";i:1;i:5;i:2;i:27519;}i:2;i:27519;}i:1574;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:27519;}i:1575;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:27519;}i:1576;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:27542;}i:1577;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"for";}i:2;i:3;i:3;s:3:"for";}i:2;i:27544;}i:1578;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:27547;}i:1579;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:391:" 语句指定了一个计数器变量，一个测试条件，以及更新该计数器的操作。在每次循环的重复之前，都将测试该条件。如果测试成功，将运行循环中的代码。如果测试不成功，不运循环中的代码，程序继续运行紧跟在循环后的第一行代码。在执行该循环后，计算机变量将在下一次循环之前被更新。";}i:2;i:27549;}i:1580;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:27940;}i:1581;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:27940;}i:1582;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:252:"如果循环条件永不会满足，则不执行该循环。如果测试条件始终满足，则将导致无限循环。在有些情况下，前者可能是合乎需要的，而后者几乎没有用处，因此在编写循环条件时一定要注意。";}i:2;i:27942;}i:1583;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:28194;}i:1584;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:789:"
/*
更新表达式 （下例中的 "icount++"）将在循环结束时被执行，即在构成循环主体的语句块被执行后，在测试条件之前。
*/

var howFar = 10;  // 将循环次数限制为 10。

var sum = new Array(howFar);  // 创建一个称为 sum 并具有 10 个成员的数组，这 10 个成员从 0 到 9。
var theSum = 0;
sum[0] = 0;

for(var icount = 0; icount < howFar; icount++)  {        // 在本例中将从 0 到 9 进行计数。
theSum += icount;
sum[icount] = theSum;
}

var newSum = 0;
for(var icount = 0; icount > howFar; icount++)  {        // 该循环根本不会被执行，因为 icount 不大于 howFar。
newSum += icount;
}

var sum = 0;
for(var icount = 0; icount >= 0; icount++)  {        // 这是一个无限循环。
sum += icount;
}
";i:1;s:10:"javascript";i:2;N;}i:2;i:28201;}i:1585;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:29011;}i:1586;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:22:"使用 for...in 循环";i:1;i:5;i:2;i:29011;}i:2;i:29011;}i:1587;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:29011;}i:1588;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:29011;}i:1589;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:131:"JScript 提供了一种特别的循环方式来遍历一个对象的所有用户定义的属性或者一个数组的所有元素。";}i:2;i:29039;}i:1590;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:29170;}i:1591;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"for";}i:2;i:3;i:3;s:3:"for";}i:2;i:29172;}i:1592;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:29175;}i:1593;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"in";}i:2;i:3;i:3;s:2:"in";}i:2;i:29178;}i:1594;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:29180;}i:1595;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:133:" 循环中的循环计数器是一个字符串，而不是数字。它包含当前属性的名称或者当前数组元素的下标。";}i:2;i:29182;}i:1596;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:29315;}i:1597;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:29315;}i:1598;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:"下面的代码范例应在 Internet 浏览器中运行，因为它使用 ";}i:2;i:29317;}i:1599;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:29391;}i:1600;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"alert";}i:2;i:3;i:3;s:5:"alert";}i:2;i:29393;}i:1601;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:29398;}i:1602;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:" 方法，该方法不属于 Jscript。";}i:2;i:29400;}i:1603;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:29445;}i:1604;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:340:"
// 创建具有某些属性的对象
var myObject = new Object();
myObject.name = "James";
myObject.age = "22";
myObject.phone = "555 1234";

// 枚举（循环）对象的所有属性
for (prop in myObject)
{
    // 显示 "The property 'name' is James"，等等。
    window.alert("The property '" + prop + "' is " + myObject[prop]);
}
";i:1;s:10:"javascript";i:2;N;}i:2;i:29445;}i:1605;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:29445;}i:1606;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"尽管 ";}i:2;i:29805;}i:1607;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:29812;}i:1608;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"for";}i:2;i:3;i:3;s:3:"for";}i:2;i:29814;}i:1609;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:29817;}i:1610;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"in";}i:2;i:3;i:3;s:2:"in";}i:2;i:29820;}i:1611;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:29822;}i:1612;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:" 循环看起来像 VBScript 的 ";}i:2;i:29824;}i:1613;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:29857;}i:1614;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"For Each";}i:2;i:3;i:3;s:8:"For Each";}i:2;i:29859;}i:1615;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:29867;}i:1616;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"Next";}i:2;i:3;i:3;s:4:"Next";}i:2;i:29870;}i:1617;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:29874;}i:1618;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:" 循环，其实并不一样。JScript 的 ";}i:2;i:29876;}i:1619;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:29919;}i:1620;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"for";}i:2;i:3;i:3;s:3:"for";}i:2;i:29921;}i:1621;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:29924;}i:1622;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"in";}i:2;i:3;i:3;s:2:"in";}i:2;i:29927;}i:1623;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:29929;}i:1624;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:58:" 循环重复Jscript 对象所有的属性。VBScript 的 ";}i:2;i:29931;}i:1625;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:29989;}i:1626;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"For Each";}i:2;i:3;i:3;s:8:"For Each";}i:2;i:29991;}i:1627;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:29999;}i:1628;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"Next";}i:2;i:3;i:3;s:4:"Next";}i:2;i:30002;}i:1629;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:30006;}i:1630;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:89:" 循环重复集合中的所有项目。要循环 JScript 中的所有集合，需要用 ";}i:2;i:30008;}i:1631;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:30097;}i:1632;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:10:"Enumerator";}i:2;i:3;i:3;s:10:"Enumerator";}i:2;i:30099;}i:1633;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:30109;}i:1634;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:88:" 对象。尽管某些对象（像 Internet 浏览器中的那些）支持 VBScript 的 ";}i:2;i:30111;}i:1635;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:30199;}i:1636;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"For Each";}i:2;i:3;i:3;s:8:"For Each";}i:2;i:30201;}i:1637;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:30209;}i:1638;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"Next";}i:2;i:3;i:3;s:4:"Next";}i:2;i:30212;}i:1639;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:30216;}i:1640;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" 和 Jscript 的 ";}i:2;i:30218;}i:1641;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:30235;}i:1642;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"for";}i:2;i:3;i:3;s:3:"for";}i:2;i:30237;}i:1643;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:30240;}i:1644;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"in";}i:2;i:3;i:3;s:2:"in";}i:2;i:30243;}i:1645;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:30245;}i:1646;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:" 循环，但多数对象并不都支持。";}i:2;i:30247;}i:1647;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:30290;}i:1648;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:30292;}i:1649;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:19:"使用 while 循环";i:1;i:5;i:2;i:30292;}i:2;i:30292;}i:1650;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:30292;}i:1651;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:30292;}i:1652;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:30317;}i:1653;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"while";}i:2;i:3;i:3;s:5:"while";}i:2;i:30319;}i:1654;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:30324;}i:1655;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" 循环相似于 ";}i:2;i:30326;}i:1656;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:30343;}i:1657;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"for";}i:2;i:3;i:3;s:3:"for";}i:2;i:30345;}i:1658;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:30348;}i:1659;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:" 循环。其不同之处是 ";}i:2;i:30350;}i:1660;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:30379;}i:1661;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"while";}i:2;i:3;i:3;s:5:"while";}i:2;i:30381;}i:1662;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:30386;}i:1663;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:182:" 循环没有内置的计数器或更新表达式。如果希望控制语句或语句块的循环执行，需要不只是“运行该代码 n 次”，而是更复杂的规则，用 ";}i:2;i:30388;}i:1664;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:30570;}i:1665;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"while";}i:2;i:3;i:3;s:5:"while";}i:2;i:30572;}i:1666;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:30577;}i:1667;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:" 循环。下面的示例使用 Internet 浏览器对象模型和 ";}i:2;i:30579;}i:1668;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:30645;}i:1669;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"while";}i:2;i:3;i:3;s:5:"while";}i:2;i:30647;}i:1670;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:30652;}i:1671;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:" 循环来询问用户一个简单的问题。";}i:2;i:30654;}i:1672;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:30700;}i:1673;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:215:"
var x = 0;
while ((x != 42) && (x != null))
{
    x = window.prompt("What is my favourite number?", x);
}

if (x == null)
    window.alert("You gave up!");
else
    window.alert("Yep - it's the Ultimate Answer!");
";i:1;s:10:"javascript";i:2;N;}i:2;i:30707;}i:1674;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:30707;}i:1675;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:30942;}i:1676;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"注意";}i:2;i:3;i:3;s:6:"注意";}i:2;i:30944;}i:1677;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:30950;}i:1678;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"   由于 ";}i:2;i:30952;}i:1679;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:30962;}i:1680;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"while";}i:2;i:3;i:3;s:5:"while";}i:2;i:30964;}i:1681;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:30969;}i:1682;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:230:" 循环没有显式的内置计数器变量，因此比其他类型的循环更容易产生无限循环。此外，由于不易发现循环条件是在何时何地被更新的，很容易编写一个实际上从不更新条件的 ";}i:2;i:30971;}i:1683;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:31201;}i:1684;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"while";}i:2;i:3;i:3;s:5:"while";}i:2;i:31203;}i:1685;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:31208;}i:1686;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:" 循环。因此在编写 ";}i:2;i:31210;}i:1687;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:31236;}i:1688;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"while";}i:2;i:3;i:3;s:5:"while";}i:2;i:31238;}i:1689;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:31243;}i:1690;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:" 循环时应特别小心。";}i:2;i:31245;}i:1691;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:31273;}i:1692;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:31273;}i:1693;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:"同上面所提到的，在 JScript 中还有 ";}i:2;i:31277;}i:1694;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:31323;}i:1695;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"do";}i:2;i:3;i:3;s:2:"do";}i:2;i:31325;}i:1696;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:31327;}i:1697;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"while";}i:2;i:3;i:3;s:5:"while";}i:2;i:31330;}i:1698;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:31335;}i:1699;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" 循环与 ";}i:2;i:31337;}i:1700;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:31348;}i:1701;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"while";}i:2;i:3;i:3;s:5:"while";}i:2;i:31350;}i:1702;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:31355;}i:1703;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:169:" 循环相似，不同处在于它总是至少运行一次，因为是在循环的末尾检查条件，而不是在开头。例如，上面的循环可以被改写为：";}i:2;i:31357;}i:1704;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:31526;}i:1705;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:219:"
var x = 0;
do
{
    x = window.prompt("What is my favourite number?", x);
} while ((x != 42) && (x != null));

if (x == null)
    window.alert("You gave up!");
else
    window.alert("Yep - it's the Ultimate Answer!");
";i:1;s:10:"javascript";i:2;N;}i:2;i:31533;}i:1706;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:31773;}i:1707;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:32:"使用 break 和 continue 语句";i:1;i:4;i:2;i:31773;}i:2;i:31773;}i:1708;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:31773;}i:1709;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:31773;}i:1710;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:"在 Microsoft Jscript 中当某些条件得到满足时，用 ";}i:2;i:31813;}i:1711;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:31875;}i:1712;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"break";}i:2;i:3;i:3;s:5:"break";}i:2;i:31877;}i:1713;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:31882;}i:1714;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:" 语句来中断一个循环的运行。（请注意，也用 ";}i:2;i:31884;}i:1715;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:31946;}i:1716;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"break";}i:2;i:3;i:3;s:5:"break";}i:2;i:31948;}i:1717;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:31953;}i:1718;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:" 语句退出一个 ";}i:2;i:31955;}i:1719;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:31975;}i:1720;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"switch";}i:2;i:3;i:3;s:6:"switch";}i:2;i:31977;}i:1721;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:31983;}i:1722;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:" 块。）。如果是一个 ";}i:2;i:31985;}i:1723;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:32014;}i:1724;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"for";}i:2;i:3;i:3;s:3:"for";}i:2;i:32016;}i:1725;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:32019;}i:1726;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" 或者 ";}i:2;i:32021;}i:1727;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:32029;}i:1728;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"for";}i:2;i:3;i:3;s:3:"for";}i:2;i:32031;}i:1729;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:32034;}i:1730;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"in";}i:2;i:3;i:3;s:2:"in";}i:2;i:32037;}i:1731;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:32039;}i:1732;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:" 循环，在更新计数器变量时使用 ";}i:2;i:32041;}i:1733;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:32085;}i:1734;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"continue";}i:2;i:3;i:3;s:8:"continue";}i:2;i:32087;}i:1735;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:32095;}i:1736;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:" 语句越过余下的代码块而直接跳到下一个循环中。";}i:2;i:32097;}i:1737;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:32164;}i:1738;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:32164;}i:1739;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"下面的例子基于前面的示例用 ";}i:2;i:32166;}i:1740;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:32206;}i:1741;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"break";}i:2;i:3;i:3;s:5:"break";}i:2;i:32208;}i:1742;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:32213;}i:1743;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 和 ";}i:2;i:32215;}i:1744;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:32220;}i:1745;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"continue";}i:2;i:3;i:3;s:8:"continue";}i:2;i:32222;}i:1746;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:32230;}i:1747;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:" 语句控制循环。";}i:2;i:32232;}i:1748;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:32254;}i:1749;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:521:"
var x = 0;
do
{
    x = window.prompt("What is my favourite number?", x);

    // 判断用户是否选择取消？如果是，退出循环。
    if (x == null)
        break;

    // 是否输入一个数？
    // 如果是则无需要求输入一个数。
    if (Number(x) == x)
        continue;

    //  要求用户只输入数字。
    window.alert("Please only enter in numbers!");

} while (x != 42)

if (x == null)
    window.alert("You gave up!");
else
    window.alert("Yep - it's the Ultimate Answer!");
";i:1;s:10:"javascript";i:2;N;}i:2;i:32261;}i:1750;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:32802;}i:1751;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"JScript 函数";i:1;i:3;i:2;i:32802;}i:2;i:32802;}i:1752;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:32802;}i:1753;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:32802;}i:1754;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:141:"Microsoft Jscript 函数执行操作，也可以返回值。某些时候是计算或比较的结果。函数又被称为“全局方法”。";}i:2;i:32826;}i:1755;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:32967;}i:1756;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:32967;}i:1757;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:186:"一个函数中包含有几个操作。这样可使得代码更合理化。可以写一组语句并给其命名，然后通过调用它并传递其需要的信息来运行整组语句。";}i:2;i:32969;}i:1758;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:33155;}i:1759;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:33155;}i:1760;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:270:"给函数传递信息可以把信息放在函数名称后面的圆括号中。传递给函数的信息称作参数。某些函数根本不带任何参数，而其他函数带一个或者多个参数。在某些函数中，参数的个数取决于如何使用该函数。";}i:2;i:33157;}i:1761;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:33427;}i:1762;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:33427;}i:1763;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:92:"Jscript 支持两种函数：一类是语言内部的函数，另一类是自己创建的。";}i:2;i:33429;}i:1764;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:33521;}i:1765;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:33523;}i:1766;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"特殊的内部函数";i:1;i:4;i:2;i:33523;}i:2;i:33523;}i:1767;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:33523;}i:1768;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:33523;}i:1769;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:168:"Jscript 语言包含很多内部函数。某些函数可以操作表达式和特殊字符，而其他函数将字符串转换为数值。一个有用的内部函数是 ";}i:2;i:33552;}i:1770;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:33720;}i:1771;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"eval()";}i:2;i:3;i:3;s:6:"eval()";}i:2;i:33722;}i:1772;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:33728;}i:1773;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:86:"。该函数可以对以字符串形式表示的任意有效的 Jscript代码求值。";}i:2;i:33730;}i:1774;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:33816;}i:1775;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"eval()";}i:2;i:3;i:3;s:6:"eval()";}i:2;i:33818;}i:1776;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:33824;}i:1777;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:109:" 函数有一个参数，该参数就是想要求值的代码。下面给出一个使用本函数的示例。";}i:2;i:33826;}i:1778;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:33941;}i:1779;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:336:"
var anExpression = "6 * 9 % 7";
var total = eval(anExpression); // 将变量 total 赋值为 5。
var yetAnotherExpression = "6 * (9 % 7)";
total = eval(yetAnotherExpression) // 将变量 total 赋值为 12。
// 将一个字符串赋给 totality （注意嵌套引用）
var totality = eval("’...surrounded by acres of clams.’");
";i:1;s:10:"javascript";i:2;N;}i:2;i:33941;}i:1780;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:33941;}i:1781;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:57:"有关内部函数的详细信息请参考语言参考。";}i:2;i:34297;}i:1782;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:34354;}i:1783;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:34356;}i:1784;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"创建自己的函数";i:1;i:4;i:2;i:34356;}i:2;i:34356;}i:1785;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:34356;}i:1786;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:34356;}i:1787;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:141:"在必要的时候，可以创建并使用自己的函数。一个函数的定义中包含了一个函数语句和一个 Jscript 语句块。";}i:2;i:34385;}i:1788;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:34526;}i:1789;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:34526;}i:1790;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"下面示例中的 ";}i:2;i:34528;}i:1791;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:34547;}i:1792;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:12:"Checktriplet";}i:2;i:3;i:3;s:12:"Checktriplet";}i:2;i:34549;}i:1793;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:34561;}i:1794;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:324:" 函数以三角形的边长为参数。通过查看三条边的长度是否可以组成一个毕达哥拉斯三元组（直角三角形斜边长度的平方等于其他两条边长的平方和）来计算该三角形是否为直角三角形。实际测试时 checkTriplet 函数要调用另两个函数中的一个函数。";}i:2;i:34563;}i:1795;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:34887;}i:1796;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:34887;}i:1797;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:376:"注意在浮点数测试版本中极小数（“epsilon”）作为测试变量的使用。由于浮点运算的不确定性和舍入误差，除非问题中的三个值均已知为整数，直接测试这三个数是否组成毕达哥拉斯三元组是不可行的。因为直接的测试更为准确，本示例中的代码确定其是否可行，如果可行则使用它。";}i:2;i:34889;}i:1798;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:35265;}i:1799;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:1548:"
var epsilon = 0.00000000001; // 一些需要测试的极小数字。

// 测试整数的函数。
function integerCheck(a, b, c) 
{
   // 测试。
   if ( (a*a) == ((b*b) + (c*c)) )   
      return true;

   return false;
} // 整数检查函数的结尾。

// 测试浮点数的函数。
function floatCheck(a, b, c)   
{
   // 得到测试数值。
   var delta = ((a*a) - ((b*b) + (c*c)))

   // 测试需要绝对值
   delta = Math.abs(delta);

   // 如果差小于 epsilon，那么它相当接近。
   if (delta < epsilon)   
      return true;

   return false;
} // 浮点检查函数的末尾。


// 三元检查。
function checkTriplet(a, b, c)
{ 
   // 创建临时变量，用于交换值
   var d = 0; 

   // 先将最长的移动到位置“a”。

   // 需要的话交换 a 和 b
   if (b > a)
   {
      d = a;
      a = b;
      b = d;
   }

   // 需要的话交换 a 和 c
   if (c > a)
   {
      d = a;
      a = c;
      c = d;
   }

   // 测试全部的 3 个值，看其是否为整数？
   if (((a % 1) == 0) && ((b % 1) == 0) && ((c % 1) == 0))
   { 
      // 如果成立，使用精确检查。
      return integerCheck(a, b, c); 
   }
   else
   {
      // 如果不成立，取尽可能相近的。
      return floatCheck(a, b, c); 
   }
} // 三元检查函数的末尾。

// 下面的三个语句赋给范例值，用于测试。
var sideA = 5;
var sideB = 5;
var sideC = Math.sqrt(50.001);

// 调用函数。调用后，'result' 中包含了结果。
var result = checkTriplet(sideA, sideB, sideC);
";i:1;s:10:"javascript";i:2;N;}i:2;i:35272;}i:1800;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:36840;}i:1801;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"JScript 对象";i:1;i:3;i:2;i:36840;}i:2;i:36840;}i:1802;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:36840;}i:1803;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:36864;}i:1804;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"创建自己的对象";i:1;i:4;i:2;i:36864;}i:2;i:36864;}i:1805;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:36864;}i:1806;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:36864;}i:1807;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:242:"要创建自己的对象实例，必须首先为其定义一个构造函数。构造函数创建一个新对象，赋予对象属性，并在合适的时候赋予方法。例如，下面的示例为 pasta 对象定义了构造函数。注意 ";}i:2;i:36893;}i:1808;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:37135;}i:1809;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"this";}i:2;i:3;i:3;s:4:"this";}i:2;i:37137;}i:1810;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:37141;}i:1811;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:" 关键字的使用，它指向当前对象。";}i:2;i:37143;}i:1812;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:37189;}i:1813;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:343:"
// pasta 是有四个参数的构造器。
function pasta(grain, width, shape, hasEgg)
{
    // 是用什么粮食做的？
    this.grain = grain;

    // 多宽？（数值）
    this.width = width;     

    // 横截面形状？（字符串）
    this.shape = shape;   

// 是否加蛋黄？（boolean）
    this.hasEgg = hasEgg;  
}
";i:1;s:10:"javascript";i:2;N;}i:2;i:37196;}i:1814;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:37196;}i:1815;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:"定义了对象构造器后，用 ";}i:2;i:37559;}i:1816;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:37593;}i:1817;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"new";}i:2;i:3;i:3;s:3:"new";}i:2;i:37595;}i:1818;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:37598;}i:1819;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:" 运算符创建对象实例。";}i:2;i:37600;}i:1820;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:37631;}i:1821;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:112:"
var spaghetti = new pasta("wheat", 0.2, "circle", true);
var linguine = new pasta("wheat", 0.3, "oval", true);
";i:1;s:10:"javascript";i:2;N;}i:2;i:37638;}i:1822;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:37638;}i:1823;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:384:"可以给对象实例添加属性以改变该实例，但是用相同的构造器生成的其他对象定义中并不包括这些属性，而且除非你特意添加这些属性那么在其他实例中并不显示出来。如果要将对象所有实例的附加属性显示出来，必须将它们添加到构造函数或构造器原型对象（原型在高级文档中讨论）中。";}i:2;i:37770;}i:1824;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:38154;}i:1825;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:586:"
// spaghetti 的附加属性。
spaghetti.color = "pale straw";
spaghetti.drycook = 7;
spaghetti.freshcook = 0.5;

var chowFun = new pasta("rice", 3, "flat", false); 
// chowFun 对象或其他现有的 pasta 对象
// 都没有添加到 spaghetti 对象
// 的三个新属性。


// 将属性‘foodgroup’加到 pasta 原型对象
// 中，这样 pasta 对象的所有实例都可以有该属性，
// 包括那些已经生成的实例。
pasta.prototype.foodgroup = "carbohydrates"

// 现在 spaghetti.foodgroup、chowFun.foodgroup，等等
// 均包含值“carbohydrates”。
";i:1;s:10:"javascript";i:2;N;}i:2;i:38161;}i:1826;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:38161;}i:1827;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:38768;}i:1828;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:24:"在定义中包含方法";}i:2;i:3;i:3;s:24:"在定义中包含方法";}i:2;i:38770;}i:1829;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:38794;}i:1830;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:38796;}i:1831;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:38796;}i:1832;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:212:"可以在对象的定义中包含方法（函数）。一种方法是在引用别处定义的函数的构造函数中添加一个属性。例如，下面的示例扩充上面定义的 pasta 构造函数以包含 ";}i:2;i:38798;}i:1833;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:39010;}i:1834;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"toString";}i:2;i:3;i:3;s:8:"toString";}i:2;i:39012;}i:1835;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:39020;}i:1836;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:58:" 方法，该方法将在显示对象的值时被调用。";}i:2;i:39022;}i:1837;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:39080;}i:1838;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:1069:"
// pasta 是有四个参数的构造器。
// 第一部分与上面相同。
function pasta(grain, width, shape, hasEgg)
{
    // 用什么粮食做的？
    this.grain = grain;

    // 多宽？（数值）
    this.width = width;     

    // 横截面形状？（字符串）
    this.shape = shape;   

    // 是否加蛋黄？（boolean）
    this.hasEgg = hasEgg;  

    // 这里添加 toString 方法（如下定义）。
    // 注意在函数的名称后没有加圆括号；
    // 这不是一个函数调用，而是
    // 对函数自身的引用。
    this.toString = pastaToString;
}

// 实际的用来显示 past 对象内容的函数。 
function pastaToString()
{
    // 返回对象的属性。

    return "Grain: " + this.grain + "\n" +
        "Width: " + this.width + "\n" +
        "Shape: " + this.shape + "\n" +
        "Egg?: " + Boolean(this.hasEgg);
}

var spaghetti = new pasta("wheat", 0.2, "circle", true);
// 将调用 toString() 并显示 spaghetti 对象
// 的属性（需要Internet 浏览器）。
window.alert(spaghetti);
";i:1;s:10:"javascript";i:2;N;}i:2;i:39087;}i:1839;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:40177;}i:1840;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"内部对象";i:1;i:4;i:2;i:40177;}i:2;i:40177;}i:1841;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:40177;}i:1842;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:40177;}i:1843;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"Microsoft Jscript 提供了 11 个内部（或“内置”）对象。它们是";}i:2;i:40197;}i:1844;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:40276;}i:1845;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"Array";}i:2;i:3;i:3;s:5:"Array";}i:2;i:40278;}i:1846;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:40283;}i:1847;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:40285;}i:1848;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:40288;}i:1849;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:7:"Boolean";}i:2;i:3;i:3;s:7:"Boolean";}i:2;i:40290;}i:1850;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:40297;}i:1851;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:40299;}i:1852;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:40302;}i:1853;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"Date";}i:2;i:3;i:3;s:4:"Date";}i:2;i:40304;}i:1854;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:40308;}i:1855;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:40310;}i:1856;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:40313;}i:1857;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"Function";}i:2;i:3;i:3;s:8:"Function";}i:2;i:40315;}i:1858;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:40323;}i:1859;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:40325;}i:1860;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:40328;}i:1861;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"Global";}i:2;i:3;i:3;s:6:"Global";}i:2;i:40330;}i:1862;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:40336;}i:1863;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:40338;}i:1864;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:40341;}i:1865;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"Math";}i:2;i:3;i:3;s:4:"Math";}i:2;i:40343;}i:1866;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:40347;}i:1867;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:40349;}i:1868;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:40352;}i:1869;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"Number";}i:2;i:3;i:3;s:6:"Number";}i:2;i:40354;}i:1870;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:40360;}i:1871;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:40362;}i:1872;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:40365;}i:1873;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"Object";}i:2;i:3;i:3;s:6:"Object";}i:2;i:40367;}i:1874;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:40373;}i:1875;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:40375;}i:1876;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:40378;}i:1877;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"RegExp";}i:2;i:3;i:3;s:6:"RegExp";}i:2;i:40380;}i:1878;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:40386;}i:1879;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:40388;}i:1880;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:40391;}i:1881;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"Error";}i:2;i:3;i:3;s:5:"Error";}i:2;i:40393;}i:1882;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:40398;}i:1883;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:" 以及";}i:2;i:40400;}i:1884;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:40407;}i:1885;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"String";}i:2;i:3;i:3;s:6:"String";}i:2;i:40409;}i:1886;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:40415;}i:1887;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:132:"对象。每一个对象有相关的方法和属性，这在语言参考中有详细的描述。本节中也描述了某些对象。";}i:2;i:40417;}i:1888;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:40549;}i:1889;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:40551;}i:1890;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"Array 对象";i:1;i:5;i:2;i:40551;}i:2;i:40551;}i:1891;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:40551;}i:1892;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:40551;}i:1893;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:198:"数组下标可以被认为是对象的属性，它是通过数字索引来引用的。注意添加到数组中的已命名的属性不能通过数字来索引；它们是与数组元素分离的。";}i:2;i:40569;}i:1894;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:40767;}i:1895;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:40767;}i:1896;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"使用 ";}i:2;i:40769;}i:1897;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:40776;}i:1898;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"new";}i:2;i:3;i:3;s:3:"new";}i:2;i:40778;}i:1899;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:40781;}i:1900;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 运算符和 ";}i:2;i:40783;}i:1901;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:40797;}i:1902;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:7:"Array()";}i:2;i:3;i:3;s:7:"Array()";}i:2;i:40799;}i:1903;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:40806;}i:1904;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:" 构造器 生成一个新的数组，如下面的示例。";}i:2;i:40808;}i:1905;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:40867;}i:1906;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:298:"
var theMonths = new Array(12);
theMonths[0] = "Jan";
theMonths[1] = "Feb";
theMonths[2] = "Mar";
theMonths[3] = "Apr";
theMonths[4] = "May";
theMonths[5] = "Jun";
theMonths[6] = "Jul";
theMonths[7] = "Aug";
theMonths[8] = "Sep";
theMonths[9] = "Oct";
theMonths[10] = "Nov";
theMonths[11] = "Dec";
";i:1;s:10:"javascript";i:2;N;}i:2;i:40874;}i:1907;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:40874;}i:1908;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"用关键字 ";}i:2;i:41193;}i:1909;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:41206;}i:1910;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"Array";}i:2;i:3;i:3;s:5:"Array";}i:2;i:41208;}i:1911;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:41213;}i:1912;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:" 生成数组时，Jscript 包含了 ";}i:2;i:41215;}i:1913;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:41252;}i:1914;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"length";}i:2;i:3;i:3;s:6:"length";}i:2;i:41254;}i:1915;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:41260;}i:1916;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:366:" 属性，该属性记录了数组入口数。如果没有给该属性指定值，则设置长度为 0 且数组没有入口点。如果指定一个数值，则将长度设置为该数。如果指定了不止一个参数，则这些参数被用作数组的入口。另外，参数的数目被赋给 length 属性。如下面的示例与前一个示例是等价的。";}i:2;i:41262;}i:1917;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:41628;}i:1918;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:113:"
var theMonths = new Array("Jan", "Feb", "Mar", "Apr", "May", "Jun", 
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec");
";i:1;s:10:"javascript";i:2;N;}i:2;i:41635;}i:1919;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:41635;}i:1920;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"当向用关键字 ";}i:2;i:41768;}i:1921;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:41787;}i:1922;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"Array";}i:2;i:3;i:3;s:5:"Array";}i:2;i:41789;}i:1923;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:41794;}i:1924;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" 生成的数组中添加元素时，Jscript 自动改变属性 ";}i:2;i:41796;}i:1925;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:41860;}i:1926;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"length";}i:2;i:3;i:3;s:6:"length";}i:2;i:41862;}i:1927;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:41868;}i:1928;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:129:" 的值。Jscript 中的数组索引总是以 0 开始，而不是 1，所以属性 length 通常比数组的最大索引大 1。";}i:2;i:41870;}i:1929;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:41999;}i:1930;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:42001;}i:1931;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"String对象";i:1;i:5;i:2;i:42001;}i:2;i:42001;}i:1932;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:42001;}i:1933;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:42001;}i:1934;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:258:"在 Jscript 中，可以将字符串（和数）当作对象来处理。string 对象 有一些内置方法，可以和自己的字符串一起使用。其中一个是substring 方法，它返回字符串的一部分。该方法以两个数字作为参数。";}i:2;i:42019;}i:1935;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:42277;}i:1936;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:301:"
aString = "0123456789";
var aChunk = aString.substring(4, 7);  // 将 aChunk 设为 "456"。
var aNotherChunk = aString.substring(7, 4);  // 将 aNotherChunk 设为 "456"。
// 使用上面生成数组的示例：
firstLetter = theMonths[5].substring(0,1);  // 将变量 firstLetter 设为“J”。
";i:1;s:10:"javascript";i:2;N;}i:2;i:42284;}i:1937;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:42284;}i:1938;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:42605;}i:1939;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"String";}i:2;i:3;i:3;s:6:"String";}i:2;i:42607;}i:1940;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:42613;}i:1941;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:" 对象的另一个属性是 ";}i:2;i:42615;}i:1942;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:42644;}i:1943;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"length";}i:2;i:3;i:3;s:6:"length";}i:2;i:42646;}i:1944;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:42652;}i:1945;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:132:" 属性。本属性包含了字符串中的字符数（空字符串为 0）。它是一个数值，可以直接在计算中使用。";}i:2;i:42654;}i:1946;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:42786;}i:1947;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:71:"
var howLong = "Hello World".length  // 设置变量 howLong 为 11。
";i:1;s:10:"javascript";i:2;N;}i:2;i:42793;}i:1948;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:42885;}i:1949;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:11:"Math 对象";i:1;i:5;i:2;i:42885;}i:2;i:42885;}i:1950;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:42885;}i:1951;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:42885;}i:1952;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:42901;}i:1953;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"Math";}i:2;i:3;i:3;s:4:"Math";}i:2;i:42903;}i:1954;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:42907;}i:1955;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:140:" 对象有许多预定义属性和方法。属性是特殊的数字。这些特殊的数字之一是 pi 值（近似 3.14159…）。这是 ";}i:2;i:42909;}i:1956;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:43049;}i:1957;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:7:"Math.PI";}i:2;i:3;i:3;s:7:"Math.PI";}i:2;i:43051;}i:1958;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:43058;}i:1959;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:" 属性，如下例所示。";}i:2;i:43060;}i:1960;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:43088;}i:1961;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:121:"
// 声明一个半径变量并赋数值。
var circleArea = Math.PI * radius * radius;  // 注意 Math 和 PI 大写。
";i:1;s:10:"javascript";i:2;N;}i:2;i:43095;}i:1962;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:43095;}i:1963;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:43237;}i:1964;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"Math";}i:2;i:3;i:3;s:4:"Math";}i:2;i:43239;}i:1965;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:43243;}i:1966;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:" 对象的一个内置方法是乘幂方法（或 ";}i:2;i:43245;}i:1967;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:43295;}i:1968;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"pow";}i:2;i:3;i:3;s:3:"pow";}i:2;i:43297;}i:1969;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:43300;}i:1970;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:94:"），使用该方法求得指定数的幂次。下面的例子同时使用了 pi 和乘幂。";}i:2;i:43302;}i:1971;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:43396;}i:1972;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:98:"
// 本公式计算给定半径的球体的体积。
volume = (4/3)*(Math.PI*Math.pow(radius,3));
";i:1;s:10:"javascript";i:2;N;}i:2;i:43403;}i:1973;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:43522;}i:1974;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:11:"Date 对象";i:1;i:5;i:2;i:43522;}i:2;i:43522;}i:1975;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:43522;}i:1976;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:43522;}i:1977;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:43539;}i:1978;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"Date";}i:2;i:3;i:3;s:4:"Date";}i:2;i:43541;}i:1979;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:43545;}i:1980;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:169:" 对象可以被用来表示任意的日期和时间，获取当前系统日期以及计算两个日期的间隔。它拥有一些预定义的属性和方法。通常，";}i:2;i:43547;}i:1981;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:43716;}i:1982;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"Date";}i:2;i:3;i:3;s:4:"Date";}i:2;i:43718;}i:1983;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:43722;}i:1984;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:403:" 对象给出星期；月份，天数和年份；以及以小时，分钟和秒表示的时间。该信息是基于 1970 年1 月 1 日 00:00:00.000 GMT 开始的毫秒数，其中 GMT 是格林威治标准时间（首选术语是 UTC，或者“全球标准时间”，它引用的信号是由“世界时间标准”发布的）。Jscript 可以处理 250,000 B.C. 到 255,000 A.D范围内的日期。";}i:2;i:43724;}i:1985;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:44127;}i:1986;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:44127;}i:1987;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"使用 ";}i:2;i:44129;}i:1988;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:44136;}i:1989;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"new";}i:2;i:3;i:3;s:3:"new";}i:2;i:44138;}i:1990;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:44141;}i:1991;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:" 运算符创建一个新的 ";}i:2;i:44143;}i:1992;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:44172;}i:1993;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"Date";}i:2;i:3;i:3;s:4:"Date";}i:2;i:44174;}i:1994;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:44178;}i:1995;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:82:" 对象。下面的示例计算当年已过去的天数和今年剩下的天数。";}i:2;i:44180;}i:1996;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:44262;}i:1997;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:411:"
/*
本示例使用前面定义的月份名称数组。
第一条语句以“Day Month Date 00:00:00 Year”格式
对 thisIsToday 变量赋值。
*/
var thisIsToday = new Date();

var toDay = new Date();  //获取今天的日期。

// 提取年，月，日。
var thisYear = toDay.getFullYear();
var thisMonth = theMonths[toDay.getMonth()];
var thisDay = thisMonth  + " " + toDay.getDate() + ", " + thisYear;
";i:1;s:10:"javascript";i:2;N;}i:2;i:44269;}i:1998;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:44701;}i:1999;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"Number 对象";i:1;i:5;i:2;i:44701;}i:2;i:44701;}i:2000;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:5;}i:2;i:44701;}i:2001;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:44701;}i:2002;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"除了 ";}i:2;i:44719;}i:2003;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:44726;}i:2004;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"Math";}i:2;i:3;i:3;s:4:"Math";}i:2;i:44728;}i:2005;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:44732;}i:2006;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:" 对象中可用的特殊数值属性（例如 ";}i:2;i:44734;}i:2007;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:44781;}i:2008;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"PI";}i:2;i:3;i:3;s:2:"PI";}i:2;i:44783;}i:2009;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:44785;}i:2010;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:"）外，在 Microsoft Jscript 中， ";}i:2;i:44787;}i:2011;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:44825;}i:2012;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"Number";}i:2;i:3;i:3;s:6:"Number";}i:2;i:44827;}i:2013;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:44833;}i:2014;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:" 对象有几个其他的数值属性。";}i:2;i:44835;}i:2015;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:44876;}i:2016;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:2;i:1;i:5;i:2;i:44877;}i:2;i:44876;}i:2017;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:44876;}i:2018;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:44876;}i:2019;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:44876;}i:2020;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"  属性  ";}i:2;i:44878;}i:2021;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:44888;}i:2022;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:44888;}i:2023;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"   描述  ";}i:2;i:44889;}i:2024;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:44900;}i:2025;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:44901;}i:2026;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:44901;}i:2027;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:44901;}i:2028;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:44901;}i:2029;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"MAX";}i:2;i:44903;}i:2030;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:44906;}i:2031;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:135:"VALUE |可能的最大数大约为 1.79E+308；可以是正数或负数。（具体数值随系统不同而有微小差别。） |
|MIN";}i:2;i:3;i:3;s:135:"VALUE |可能的最大数大约为 1.79E+308；可以是正数或负数。（具体数值随系统不同而有微小差别。） |
|MIN";}i:2;i:44907;}i:2032;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:45042;}i:2033;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"VALUE ";}i:2;i:45043;}i:2034;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:45049;}i:2035;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:45049;}i:2036;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:122:"可能的最小数大约为 2.22E-308；可以是正数或负数。（具体数值随系统不同而有微小差别。） ";}i:2;i:45050;}i:2037;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:45172;}i:2038;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:45173;}i:2039;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:45173;}i:2040;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:45173;}i:2041;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"NaN ";}i:2;i:45175;}i:2042;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:45179;}i:2043;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:45179;}i:2044;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:"特殊非数量值，“不是数值”。 ";}i:2;i:45180;}i:2045;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:45223;}i:2046;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:45224;}i:2047;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:45224;}i:2048;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:45224;}i:2049;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"POSITIVE";}i:2;i:45226;}i:2050;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:45234;}i:2051;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:38:"INFINITY |比最大正数（Number.MAX";}i:2;i:3;i:3;s:38:"INFINITY |比最大正数（Number.MAX";}i:2;i:45235;}i:2052;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:45273;}i:2053;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:81:"VALUE）还要大的任意正值自动被转换为此值，代表正无穷大。 ";}i:2;i:45274;}i:2054;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:45355;}i:2055;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:45356;}i:2056;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:45356;}i:2057;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:45356;}i:2058;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:45356;}i:2059;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:45356;}i:2060;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:45356;}i:2061;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"NEGATIVE";}i:2;i:45358;}i:2062;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:45366;}i:2063;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:48:"INFINITY |比最小的负数（负的 Number.MAX";}i:2;i:3;i:3;s:48:"INFINITY |比最小的负数（负的 Number.MAX";}i:2;i:45367;}i:2064;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:45415;}i:2065;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:"VALUE）还小的任意值被自动转换为此值，代表负无穷。 ";}i:2;i:45416;}i:2066;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:45488;}i:2067;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:45489;}i:2068;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:45489;}i:2069;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:45489;}i:2070;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:45489;}i:2071;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:45489;}i:2;i:45489;}i:2072;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:45489;}i:2073;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:45492;}i:2074;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:10:"Number.NaN";}i:2;i:3;i:3;s:10:"Number.NaN";}i:2;i:45494;}i:2075;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:45504;}i:2076;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:83:" 是一个特殊的属性，被定义为“不是数值”。例如被 0 除返回 ";}i:2;i:45506;}i:2077;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:45589;}i:2078;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"NaN";}i:2;i:3;i:3;s:3:"NaN";}i:2;i:45591;}i:2079;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:45594;}i:2080;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:70:"。试图解析一个无法被解析为数字的字符串同样返回 ";}i:2;i:45596;}i:2081;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:45666;}i:2082;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:10:"Number.NaN";}i:2;i:3;i:3;s:10:"Number.NaN";}i:2;i:45668;}i:2083;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:45678;}i:2084;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"。把 ";}i:2;i:45680;}i:2085;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:45687;}i:2086;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"NaN";}i:2;i:3;i:3;s:3:"NaN";}i:2;i:45689;}i:2087;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:45692;}i:2088;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:" 与任何数值或本身作比较的结果都是不相等。不能通过与 ";}i:2;i:45694;}i:2089;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:45771;}i:2090;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:10:"Number.NaN";}i:2;i:3;i:3;s:10:"Number.NaN";}i:2;i:45773;}i:2091;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:45783;}i:2092;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" 比较来测试 ";}i:2;i:45785;}i:2093;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:45802;}i:2094;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"NaN";}i:2;i:3;i:3;s:3:"NaN";}i:2;i:45804;}i:2095;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:45807;}i:2096;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:" 结果，而应该使用 ";}i:2;i:45809;}i:2097;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:45835;}i:2098;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:7:"isNaN()";}i:2;i:3;i:3;s:7:"isNaN()";}i:2;i:45837;}i:2099;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:45844;}i:2100;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" 函数。";}i:2;i:45846;}i:2101;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:45857;}i:2102;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:45857;}i:2103;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"JScript 保留字";i:1;i:3;i:2;i:45857;}i:2;i:45857;}i:2104;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:45857;}i:2105;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:45857;}i:2106;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:203:"Jscript 有一些保留字不能在标识符中使用。保留字对 Jscript 语言有特殊的含义，它们是语言语法的一部分。使用保留字在加载脚本的时候将产生编译错误。";}i:2;i:45884;}i:2107;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:46087;}i:2108;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:46087;}i:2109;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:152:"Jscript 还有一些留作将来使用的保留字。这些字不是现在的 Jscript 语言的一部分，然而它们是为将来的使用保留的。";}i:2;i:46089;}i:2110;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:46241;}i:2111;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:46243;}i:2112;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:9:"保留词";i:1;i:4;i:2;i:46243;}i:2;i:46243;}i:2113;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:46243;}i:2114;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:5;i:1;i:6;i:2;i:46260;}i:2;i:46259;}i:2115;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:46259;}i:2116;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46259;}i:2117;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"break ";}i:2;i:46261;}i:2118;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46267;}i:2119;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46267;}i:2120;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"delete ";}i:2;i:46268;}i:2121;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46275;}i:2122;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46275;}i:2123;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"function ";}i:2;i:46276;}i:2124;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46285;}i:2125;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46285;}i:2126;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"return ";}i:2;i:46286;}i:2127;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46293;}i:2128;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46293;}i:2129;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"typeof ";}i:2;i:46294;}i:2130;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46301;}i:2131;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:46302;}i:2132;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:46302;}i:2133;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46302;}i:2134;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"case ";}i:2;i:46304;}i:2135;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46309;}i:2136;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46309;}i:2137;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"do ";}i:2;i:46310;}i:2138;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46313;}i:2139;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46313;}i:2140;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"if ";}i:2;i:46314;}i:2141;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46317;}i:2142;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46317;}i:2143;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"switch ";}i:2;i:46318;}i:2144;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46325;}i:2145;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46325;}i:2146;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"var ";}i:2;i:46326;}i:2147;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46330;}i:2148;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:46331;}i:2149;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:46331;}i:2150;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46331;}i:2151;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"catch ";}i:2;i:46333;}i:2152;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46339;}i:2153;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46339;}i:2154;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"else ";}i:2;i:46340;}i:2155;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46345;}i:2156;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46345;}i:2157;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"in ";}i:2;i:46346;}i:2158;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46349;}i:2159;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46349;}i:2160;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"this ";}i:2;i:46350;}i:2161;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46355;}i:2162;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46355;}i:2163;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"void ";}i:2;i:46356;}i:2164;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46361;}i:2165;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:46362;}i:2166;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:46362;}i:2167;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46362;}i:2168;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"continue ";}i:2;i:46364;}i:2169;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46373;}i:2170;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46373;}i:2171;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"false ";}i:2;i:46374;}i:2172;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46380;}i:2173;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46380;}i:2174;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"instanceof ";}i:2;i:46381;}i:2175;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46392;}i:2176;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46392;}i:2177;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"throw ";}i:2;i:46393;}i:2178;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46399;}i:2179;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46399;}i:2180;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"while ";}i:2;i:46400;}i:2181;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46406;}i:2182;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:46407;}i:2183;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:46407;}i:2184;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46407;}i:2185;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"debugger ";}i:2;i:46409;}i:2186;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46418;}i:2187;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46418;}i:2188;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"finally ";}i:2;i:46419;}i:2189;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46427;}i:2190;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46427;}i:2191;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"new ";}i:2;i:46428;}i:2192;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46432;}i:2193;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46432;}i:2194;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"true ";}i:2;i:46433;}i:2195;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46438;}i:2196;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46438;}i:2197;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"with ";}i:2;i:46439;}i:2198;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46444;}i:2199;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:46445;}i:2200;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:46445;}i:2201;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46445;}i:2202;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"default ";}i:2;i:46447;}i:2203;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46455;}i:2204;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46455;}i:2205;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"for ";}i:2;i:46456;}i:2206;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46460;}i:2207;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46460;}i:2208;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"null ";}i:2;i:46461;}i:2209;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46466;}i:2210;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:46466;}i:2211;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"try   ";}i:2;i:46467;}i:2212;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46473;}i:2213;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46473;}i:2214;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:46474;}i:2215;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46475;}i:2216;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:46476;}i:2217;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:46476;}i:2;i:46476;}i:2218;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:46479;}i:2219;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"为将来保留的词";i:1;i:4;i:2;i:46479;}i:2;i:46479;}i:2220;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:46479;}i:2221;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:5;i:1;i:6;i:2;i:46508;}i:2;i:46507;}i:2222;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:46507;}i:2223;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46507;}i:2224;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"abstract ";}i:2;i:46509;}i:2225;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46518;}i:2226;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46518;}i:2227;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"double ";}i:2;i:46519;}i:2228;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46526;}i:2229;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46526;}i:2230;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"goto ";}i:2;i:46527;}i:2231;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46532;}i:2232;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46532;}i:2233;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"native ";}i:2;i:46533;}i:2234;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46540;}i:2235;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46540;}i:2236;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"static ";}i:2;i:46541;}i:2237;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46548;}i:2238;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:46549;}i:2239;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:46549;}i:2240;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46549;}i:2241;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"boolean ";}i:2;i:46551;}i:2242;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46559;}i:2243;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46559;}i:2244;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"enum ";}i:2;i:46560;}i:2245;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46565;}i:2246;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46565;}i:2247;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"implements ";}i:2;i:46566;}i:2248;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46577;}i:2249;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46577;}i:2250;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"package ";}i:2;i:46578;}i:2251;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46586;}i:2252;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46586;}i:2253;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"super ";}i:2;i:46587;}i:2254;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46593;}i:2255;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:46594;}i:2256;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:46594;}i:2257;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46594;}i:2258;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"byte ";}i:2;i:46596;}i:2259;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46601;}i:2260;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46601;}i:2261;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"export ";}i:2;i:46602;}i:2262;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46609;}i:2263;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46609;}i:2264;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"import ";}i:2;i:46610;}i:2265;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46617;}i:2266;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46617;}i:2267;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"private ";}i:2;i:46618;}i:2268;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46626;}i:2269;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46626;}i:2270;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"synchronized ";}i:2;i:46627;}i:2271;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46640;}i:2272;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:46641;}i:2273;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:46641;}i:2274;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46641;}i:2275;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"char ";}i:2;i:46643;}i:2276;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46648;}i:2277;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46648;}i:2278;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"extends ";}i:2;i:46649;}i:2279;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46657;}i:2280;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46657;}i:2281;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"int ";}i:2;i:46658;}i:2282;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46662;}i:2283;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46662;}i:2284;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"protected ";}i:2;i:46663;}i:2285;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46673;}i:2286;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46673;}i:2287;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"throws ";}i:2;i:46674;}i:2288;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46681;}i:2289;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:46682;}i:2290;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:46682;}i:2291;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46682;}i:2292;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"class ";}i:2;i:46684;}i:2293;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46690;}i:2294;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46690;}i:2295;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"final ";}i:2;i:46691;}i:2296;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46697;}i:2297;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46697;}i:2298;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"interface ";}i:2;i:46698;}i:2299;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46708;}i:2300;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46708;}i:2301;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"public ";}i:2;i:46709;}i:2302;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46716;}i:2303;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46716;}i:2304;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"transient ";}i:2;i:46717;}i:2305;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46727;}i:2306;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:46728;}i:2307;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:46728;}i:2308;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46728;}i:2309;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"const ";}i:2;i:46730;}i:2310;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46736;}i:2311;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46736;}i:2312;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"float ";}i:2;i:46737;}i:2313;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46743;}i:2314;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46743;}i:2315;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"long ";}i:2;i:46744;}i:2316;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46749;}i:2317;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46749;}i:2318;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"short ";}i:2;i:46750;}i:2319;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46756;}i:2320;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:46756;}i:2321;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"volatile ";}i:2;i:46757;}i:2322;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:46766;}i:2323;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:46767;}i:2324;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:46767;}i:2;i:46767;}i:2325;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:46767;}i:2326;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:94:"当选择标识符时避免使用已经在内部 Jscript 对象或函数中使用的词，如 ";}i:2;i:46770;}i:2327;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:46864;}i:2328;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"String";}i:2;i:3;i:3;s:6:"String";}i:2;i:46866;}i:2329;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:46872;}i:2330;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 或 ";}i:2;i:46874;}i:2331;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:46879;}i:2332;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"parseInt";}i:2;i:3;i:3;s:8:"parseInt";}i:2;i:46881;}i:2333;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:46889;}i:2334;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"。";}i:2;i:46891;}i:2335;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:46894;}i:2336;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:46897;}i:2337;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"高级 JScript";i:1;i:2;i:2;i:46897;}i:2;i:46897;}i:2338;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:46897;}i:2339;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:46923;}i:2340;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"高级对象的创建";i:1;i:3;i:2;i:46923;}i:2;i:46923;}i:2341;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:46923;}i:2342;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:46954;}i:2343;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:33:"使用构造函数来创建对象";i:1;i:4;i:2;i:46954;}i:2;i:46954;}i:2344;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:46954;}i:2345;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:46954;}i:2346;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:97:"构造函数是一个函数，调用它来例示并初始化特殊类型的对象。可以使用 ";}i:2;i:46995;}i:2347;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:47092;}i:2348;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"new";}i:2;i:3;i:3;s:3:"new";}i:2;i:47094;}i:2349;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:47097;}i:2350;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:88:" 关键字来调用一个构造函数。下面给出了使用构造函数的新示例。";}i:2;i:47099;}i:2351;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:47193;}i:2352;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:259:"
var myObject = new Object();             // 创建没有属性的通用对象。
var myBirthday = new Date(1961, 5, 10);  // 创建一个 Date 对象。
var myCar = new Car();                   // 创建一个用户定义的对象，并初始化其属性。
";i:1;s:10:"javascript";i:2;N;}i:2;i:47193;}i:2353;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:47193;}i:2354;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"通过构造函数将一个参数作为特定的 ";}i:2;i:47472;}i:2355;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:47521;}i:2356;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"this";}i:2;i:3;i:3;s:4:"this";}i:2;i:47523;}i:2357;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:47527;}i:2358;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:220:" 关键字的值传递给新创建的空对象。然后构造函数负责为新对象执行适应的初始化（创建属性并给出其初始值）。完成后，构造函数返回它所构造的对象的一个参数。";}i:2;i:47529;}i:2359;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:47749;}i:2360;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:47751;}i:2361;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"编写构造函数";i:1;i:4;i:2;i:47751;}i:2;i:47751;}i:2362;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:47751;}i:2363;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:47751;}i:2364;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"可以使用 ";}i:2;i:47777;}i:2365;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:47790;}i:2366;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"new";}i:2;i:3;i:3;s:3:"new";}i:2;i:47792;}i:2367;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:47795;}i:2368;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:" 运算符结合像 ";}i:2;i:47797;}i:2369;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:47817;}i:2370;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"Object()";}i:2;i:3;i:3;s:8:"Object()";}i:2;i:47819;}i:2371;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:47827;}i:2372;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"、";}i:2;i:47829;}i:2373;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:47832;}i:2374;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"Date()";}i:2;i:3;i:3;s:6:"Date()";}i:2;i:47834;}i:2375;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:47840;}i:2376;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 和 ";}i:2;i:47842;}i:2377;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:47847;}i:2378;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:10:"Function()";}i:2;i:3;i:3;s:10:"Function()";}i:2;i:47849;}i:2379;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:47859;}i:2380;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:329:" 这样的预定义的构造函数来创建对象并对其初始化。面向对象的编程其强有力的特征是定义自定义构造函数以创建脚本中使用的自定义对象的能力。创建了自定义的构造函数，这样就可以创建具有已定义属性的对象。下面是自定义函数的示例（注意 ";}i:2;i:47861;}i:2381;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:48190;}i:2382;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"this";}i:2;i:3;i:3;s:4:"this";}i:2;i:48192;}i:2383;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:48196;}i:2384;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:" 关键字的使用）。";}i:2;i:48198;}i:2385;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:48229;}i:2386;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:181:"
function Circle (xPoint, yPoint, radius) {
    this.x = xPoint;  // 圆心的 x 坐标。
    this.y = yPoint;  // 圆心的 y 坐标。
    this.r = radius;  // 圆的半径。
}
";i:1;s:10:"javascript";i:2;N;}i:2;i:48229;}i:2387;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:48229;}i:2388;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:228:"调用 Circle 构造函数时，给出圆心点的值和圆的半径（所有这些元素是完全定义一个独特的圆对象所必需的）。结束时 Circle 对象包含三个属性。下面是如何例示 Circle 对象。";}i:2;i:48430;}i:2389;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:48664;}i:2390;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:38:"
var aCircle = new Circle(5, 11, 99);
";i:1;s:10:"javascript";i:2;N;}i:2;i:48664;}i:2391;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:48723;}i:2392;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:27:"使用原型来创建对象";i:1;i:4;i:2;i:48723;}i:2;i:48723;}i:2393;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:48723;}i:2394;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:48723;}i:2395;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:490:"在编写构造函数时，可以使用原型对象（它本身是所有构造函数的一个属性）的属性来创建继承属性和共享方法。原型属性和方法将按引用复制给类中的每个对象，因此它们都具有相同的值。可以在一个对象中更改原型属性的值，新的值将覆盖默认值，但仅在该实例中有效。属于这个类的其他对象不受此更改的影响。下面给出了使用自定义构造函数的示例，Circle（注意 ";}i:2;i:48758;}i:2396;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:49248;}i:2397;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"this";}i:2;i:3;i:3;s:4:"this";}i:2;i:49250;}i:2398;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:49254;}i:2399;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:" 关键字的使用）。";}i:2;i:49256;}i:2400;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:49281;}i:2401;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:349:"
Circle.prototype.pi = Math.PI;
function ACirclesArea () {
    return this.pi * this.r * this.r; // 计算圆面积的公式为 ?r2。
}
Circle.prototype.area = ACirclesArea; // 计算圆面积的函数现在是 Circle Prototype 对象的一个方法。
var a = ACircle.area();               // 此为如何在 Circle 对象上调用面积函数。
";i:1;s:10:"javascript";i:2;N;}i:2;i:49288;}i:2402;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:49288;}i:2403;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:179:"使用这个原则，可以给预定义的构造函数（都具有原型对象）定义附加属性。例如，如果想要能够删除字符串的前后空格（与 VBScript 的 ";}i:2;i:49657;}i:2404;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:49836;}i:2405;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"Trim";}i:2;i:3;i:3;s:4:"Trim";}i:2;i:49838;}i:2406;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:49842;}i:2407;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" 函数类似），就可以给 ";}i:2;i:49844;}i:2408;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:49876;}i:2409;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"String";}i:2;i:3;i:3;s:6:"String";}i:2;i:49878;}i:2410;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:49884;}i:2411;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:" 原型对象创建自己的方法。";}i:2;i:49886;}i:2412;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:49923;}i:2413;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:549:"
// 增加一个名为 trim 的函数作为
// String 构造函数的原型对象的一个方法。
String.prototype.trim = function()
{
    // 用正则表达式将前后空格
    // 用空字符串替代。
    return this.replace(/(^\s*)|(\s*$)/g, "");
}

// 有空格的字符串
var s = "    leading and trailing spaces    ";

// 显示 "    leading and trailing spaces     (35)"
window.alert(s + " (" + s.length + ")");

// 删除前后空格
s = s.trim();
// 显示"leading and trailing spaces (27)"
window.alert(s + " (" + s.length + ")");
";i:1;s:10:"javascript";i:2;N;}i:2;i:49930;}i:2414;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:50499;}i:2415;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"递归";i:1;i:3;i:2;i:50499;}i:2;i:50499;}i:2416;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:50499;}i:2417;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:50499;}i:2418;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:212:"递归是一种重要的编程技术。该方法用于让一个函数从其内部调用其自身。一个示例就是计算阶乘。0 的阶乘被特别地定义为 1。 更大数的阶乘是通过计算 1 * 2 * ";}i:2;i:50515;}i:2419;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:50727;}i:2420;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"来求得的，每次增加 1，直至达到要计算其阶乘的那个数。";}i:2;i:50730;}i:2421;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:50807;}i:2422;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:50807;}i:2423;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:66:"下面的段落是用文字定义的计算阶乘的一个函数。";}i:2;i:50809;}i:2424;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:50875;}i:2425;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:50875;}i:2426;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:237:"“如果这个数小于零，则拒绝接收。如果不是一个整数，则将其向下舍入为相邻的整数。如果这个数为 0，则其阶乘为 1。如果这个数大于 0，则将其与相邻较小的数的阶乘相乘。”";}i:2;i:50877;}i:2427;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:51114;}i:2428;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:51114;}i:2429;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:291:"要计算任何大于 0 的数的阶乘，至少需要计算一个其他数的阶乘。用来实现这个功能的函数就是已经位于其中的函数；该函数在执行当前的这个数之前，必须调用它本身来计算相邻的较小数的阶乘。这就是一个递归示例。";}i:2;i:51116;}i:2430;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:51407;}i:2431;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:51407;}i:2432;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:263:"递归和迭代（循环）是密切相关的 — 能用递归处理的算法也都可以采用迭代，反之亦然。确定的算法通常可以用几种方法实现，您只需选择最自然贴切的方法，或者您觉得用起来最轻松的一种即可。";}i:2;i:51409;}i:2433;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:51672;}i:2434;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:51672;}i:2435;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:604:"显然，这样有可能会出现问题。可以很容易地创建一个递归函数，但该函数不能得到一个确定的结果，并且不能达到一个终点。这样的递归将导致计算机执行一个“无限”循环。下面就是一个示例：在计算阶乘的文字描述中遗漏了第一条规则（对负数的处理） ，并试图计算任何负数的阶乘。这将导致失败，因为按顺序计算 -24 的阶乘时，首先不得不计算 -25 的阶乘；然而这样又不得不计算 -26 的阶乘；如此继续。很明显，这样永远也不会到达一个终止点。";}i:2;i:51674;}i:2436;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:52278;}i:2437;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:52278;}i:2438;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:261:"因此在设计递归函数时应特别仔细。如果怀疑其中存在着无限递归的可能，则可以让该函数记录它调用自身的次数。如果该函数调用自身的次数太多，即使您已决定了它应调用多少次，就自动退出。";}i:2;i:52280;}i:2439;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:52541;}i:2440;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:52541;}i:2441;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:70:"下面仍然是阶乘函数，这次是用 JScript 代码编写的。 ";}i:2;i:52543;}i:2442;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:52619;}i:2443;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:604:"
// 计算阶乘的函数。如果传递了
// 无效的数值（例如小于零），
// 将返回 -1，表明发生了错误。若数值有效，
// 把数值转换为最相近的整数，并
// 返回阶乘。
function factorial(aNumber)  {
aNumber = Math.floor(aNumber);  // 如果这个数不是一个整数，则向下舍入。
if (aNumber < 0)  {  // 如果这个数小于 0，拒绝接收。
    return -1;
    }
      if (aNumber == 0)  {  // 如果为 0，则其阶乘为 1。
      return 1;
      }
        else return (aNumber * factorial(aNumber - 1));  // 否则，递归直至完成。
}
";i:1;s:10:"javascript";i:2;N;}i:2;i:52619;}i:2444;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:53243;}i:2445;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"变量范围";i:1;i:3;i:2;i:53243;}i:2;i:53243;}i:2446;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:53243;}i:2447;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:53243;}i:2448;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:392:"JScript 有两种变量范围：全局和局部。如果在任何函数定义之外声明了一个变量，则该变量为全局变量，且该变量的值在整个持续范围内都可以访问和修改。如果在函数定义内声明了一个变量，则该变量为局部变量。每次执行该函数时都会创建和破坏该变量；且它不能被该函数外的任何事物访问。";}i:2;i:53265;}i:2449;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:53657;}i:2450;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:53657;}i:2451;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:132:"像 C++ 这样的语言也有“块范围”。在这里，任何一对“{}”都定义新的范围。JScript 不支持块范围。";}i:2;i:53659;}i:2452;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:53791;}i:2453;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:53791;}i:2454;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:259:"一个局部变量的名称可以与某个全局变量的名称相同，但这是完全不同和独立的两个变量。因此，更改一个变量的值不会影响另一个变量的值。在声明局部变量的函数内，只有该局部变量有意义。 ";}i:2;i:53793;}i:2455;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:54052;}i:2456;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:867:"
var aCentaur = "a horse with rider,";  // aCentaur 的全局定义。

// JScript 代码，为简洁起见有省略。
function antiquities()  // 在这个函数中声明了一个局部 aCentaur 变量。
{

// JScript 代码，为简洁起见有省略。
var aCentaur = "A centaur is probably a mounted Scythian warrior";

// JScript 代码，为简洁起见有省略。
   aCentaur += ", misreported; that is, ";  // 添加到局部变量。

// JScript 代码，为简洁起见有省略。
}  // 函数结束。

var nothinginparticular = antiquities();
aCentaur += " as seen from a distance by a naive innocent.";

/*
在函数内，该变量的值为 "A centaur is probably a mounted Scythian warrior,
misreported; that is, "；在函数外，该变量的值为这句话的其余部分：
"a horse with rider, as seen from a distance by a naive innocent."
*/  
";i:1;s:10:"javascript";i:2;N;}i:2;i:54059;}i:2457;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:54059;}i:2458;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:127:"很重要的一点是注意变量是否是在其所属范围的开始处声明的。有时这会导致意想不到的情况。 ";}i:2;i:54946;}i:2459;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:55073;}i:2460;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:598:"
tweak();
var aNumber = 100;
function tweak()  {
var newThing = 0;  // 显式声明 newThing 变量。

    // 本语句将未定义的变量赋给 newThing，因为已有名为 aNumber 的局部变量。
    newThing = aNumber;

    //下一条语句将值 42 赋给局部的 aNumber。aNumber = 42;
if (false)  {
    var aNumber;  // 该语句永远不会执行。
    aNumber = 123;  //  该语句永远不会执行。
    }  // 条件语句结束。

}  // 该函数定义结束。
</code<
当 JScript 运行函数时，首先查找所有的变量声明，

<code javascript>
var someVariable;
";i:1;s:10:"javascript";i:2;N;}i:2;i:55080;}i:2461;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:55080;}i:2462;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:75:"并以未定义的初始值创建变量。如果变量被声明时有值，";}i:2;i:55698;}i:2463;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:55773;}i:2464;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:33:"
var someVariable = "something";
";i:1;s:10:"javascript";i:2;N;}i:2;i:55780;}i:2465;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:55780;}i:2466;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:135:"那么该变量仍以未定义的值初始化，并且只有在运行了声明行时才被声明值取代，假如曾经被声明过。";}i:2;i:55833;}i:2467;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:55968;}i:2468;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:55968;}i:2469;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:364:"JScript 在运行代码前处理变量声明，所以声明是位于一个条件块中还是其他某些结构中无关紧要。JScript 找到所有的变量后立即运行函数中的代码。如果变量是在函数中显式声明的 — 也就是说，如果它出现于赋值表达式的左边但没有用 var 声明 — 那么将把它创建为全局变量。";}i:2;i:55970;}i:2470;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:56334;}i:2471;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:56336;}i:2472;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:30:"复制、传递和比较数据";i:1;i:3;i:2;i:56336;}i:2;i:56336;}i:2473;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:56336;}i:2474;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:56336;}i:2475;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:"在 JScript 中，对数据的处理取决于该数据的类型。 ";}i:2;i:56376;}i:2476;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:56443;}i:2477;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:56445;}i:2478;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:27:"按值和按引用的比较";i:1;i:4;i:2;i:56445;}i:2;i:56445;}i:2479;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:56445;}i:2480;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:56445;}i:2481;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:"Numbers 和 Boolean 类型的值 (";}i:2;i:56480;}i:2482;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:56514;}i:2483;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"true";}i:2;i:3;i:3;s:4:"true";}i:2;i:56516;}i:2484;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:56520;}i:2485;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 和 ";}i:2;i:56522;}i:2486;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:56527;}i:2487;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"false";}i:2;i:3;i:3;s:5:"false";}i:2;i:56529;}i:2488;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:56534;}i:2489;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:278:") 是按值来复制、传递和比较的。当按值复制或传递时，将在计算机内存中分配一块空间并将原值复制到其中。然后，即使更改原来的值，也不会影响所复制的值（反过来也一样），因为这两个值是独立的实体。";}i:2;i:56536;}i:2490;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:56814;}i:2491;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:56814;}i:2492;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:409:"对象、数组以及函数是按引用来复制、传递和比较的。 当按地址复制或传递时，实际是创建一个指向原始项的指针，然后就像拷贝一样来使用该指针。如果随后更改原始项，则将同时更改原始项和复制项（反过来也一样）。实际上只有一个实体；“复本”并不是一个真正的复本，而只是该数据的又一个引用。";}i:2;i:56816;}i:2493;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:57225;}i:2494;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:57225;}i:2495;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:118:"当按引用比较时，要想比较成功，两个变量必须参照完全相同的实体。例如，两个不同的 ";}i:2;i:57227;}i:2496;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:57345;}i:2497;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"Array";}i:2;i:3;i:3;s:5:"Array";}i:2;i:57347;}i:2498;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:57352;}i:2499;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:194:" 对象即使包含相同的元素也将比较为不相等。要想比较成功，其中一个变量必须为另一个的参考。要想检查两个数组是否包含了相同的元素，比较 ";}i:2;i:57354;}i:2500;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:57548;}i:2501;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:10:"toString()";}i:2;i:3;i:3;s:10:"toString()";}i:2;i:57550;}i:2502;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:57560;}i:2503;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:" 方法的结果。";}i:2;i:57562;}i:2504;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:57581;}i:2505;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:57581;}i:2506;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:109:"最后，字符串是按引用复制和传递的，但是是按值来比较的。请注意，假如有两个 ";}i:2;i:57583;}i:2507;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:57692;}i:2508;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"String";}i:2;i:3;i:3;s:6:"String";}i:2;i:57694;}i:2509;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:57700;}i:2510;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 对象（用 ";}i:2;i:57702;}i:2511;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:57716;}i:2512;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:11:"new String(";}i:2;i:3;i:3;s:11:"new String(";}i:2;i:57718;}i:2513;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:57729;}i:2514;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:9:"something";}i:2;i:3;i:3;s:9:"something";}i:2;i:57730;}i:2515;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:57739;}i:2516;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:1:")";}i:2;i:3;i:3;s:1:")";}i:2;i:57740;}i:2517;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:57741;}i:2518;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:127:" 创建的），按引用比较它们，但是，如果其中一个或者两者都是字符串值的话，按值比较它们。";}i:2;i:57743;}i:2519;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:57870;}i:2520;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:57870;}i:2521;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:57872;}i:2522;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"注意";}i:2;i:3;i:3;s:6:"注意";}i:2;i:57874;}i:2523;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:57880;}i:2524;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:115:"   鉴于 ASCII和 ANSI 字符集的构造方法，按序列顺序大写字母位于小写字母的前面。例如 ";}i:2;i:57882;}i:2525;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:57997;}i:2526;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"Zoo";}i:2;i:57998;}i:2527;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:58001;}i:2528;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" 小于 ";}i:2;i:58002;}i:2529;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:58010;}i:2530;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"aardvark";}i:2;i:58011;}i:2531;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:58019;}i:2532;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"。如果想执行不区分大小写的匹配，可以对两个字符串调用 ";}i:2;i:58020;}i:2533;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:58099;}i:2534;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:13:"toUpperCase()";}i:2;i:3;i:3;s:13:"toUpperCase()";}i:2;i:58101;}i:2535;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:58114;}i:2536;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 或 ";}i:2;i:58116;}i:2537;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:58121;}i:2538;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:13:"toLowerCase()";}i:2;i:3;i:3;s:13:"toLowerCase()";}i:2;i:58123;}i:2539;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:58136;}i:2540;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"。";}i:2;i:58138;}i:2541;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:58141;}i:2542;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:58143;}i:2543;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:21:"传递参数给函数";i:1;i:4;i:2;i:58143;}i:2;i:58143;}i:2544;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:58143;}i:2545;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:58143;}i:2546;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:339:"按值传递一个参数给函数就是制作该参数的一个独立复本，即一个只存在于该函数内的复本。即使按引用传递对象和数组时，如果直接在函数中用新值覆盖原先的值，在函数外并不反映新值。只有在对象的属性或者数组的元素改变时，在函数外才可以看出。";}i:2;i:58172;}i:2547;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:58511;}i:2548;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:58511;}i:2549;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"例如（使用 ";}i:2;i:58513;}i:2550;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:2:"IE";}i:2;i:58529;}i:2551;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:" 对象模式）：";}i:2;i:58531;}i:2552;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:58556;}i:2553;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:899:"
// 本代码段破坏（覆盖）其参数，所以
// 调用代码中反映不出变化。
function Clobber(param) 
{
    // 破坏参数；在调用代码中
    // 看不到。
    param = new Object();
    param.message = "This will not work";
}

// 本段代码改变参数的属性，
// 在调用代码中可看到属性改变。
function Update(param)
{
    // 改变对象的属性；
    // 可从调用代码中看到改变。
    param.message = "I was changed";
}

// 创建一个对象，并赋给一个属性。
var obj = new Object();
obj.message = "This is the original";

// 调用 Clobber，并输出 obj.message。注意，它没有发生变化。
Clobber(obj);
window.alert(obj.message); // 仍然显示 "This is the original"。

// 调用 Update，并输出 obj.message。注意，它已经被改变了。
Update(obj);
window.alert(obj.message); // 显示 "I was changed"。
";i:1;s:10:"javascript";i:2;N;}i:2;i:58556;}i:2554;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:59476;}i:2555;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"检验数据";i:1;i:4;i:2;i:59476;}i:2;i:59476;}i:2556;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:59476;}i:2557;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:59476;}i:2558;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:360:"当按值进行检验时，是比较两个截然不同的项以查看它们是否相等。通常，该比较是逐字节进行的。当按引用进行检验时，是看这两项是否是指向同一个原始项的指针。如果是，则比较结果是相等；如果不是，即使它们每个字节都包含完全一样的值，比较结果也为不相等。";}i:2;i:59496;}i:2559;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:59856;}i:2560;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:59856;}i:2561;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:243:"按引用复制和传递字符串能节约内存；但是由于在字符串被创建后不能进行更改，因此可以按值进行比较。这样可以检查两个字符串是否包含相同的内容，即使它们是完全独立产生的。";}i:2;i:59858;}i:2562;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:60102;}i:2563;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:60102;}i:2564;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"使用数组";i:1;i:3;i:2;i:60102;}i:2;i:60102;}i:2565;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:60102;}i:2566;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:60124;}i:2567;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"数组下标";i:1;i:4;i:2;i:60124;}i:2;i:60124;}i:2568;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:60124;}i:2569;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:60124;}i:2570;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:462:"JScript 中的数组是稀疏的。也就是说，如果一个数组具有三个元素，编号分别为 0、1 和 2，您就可以创建元素 50，而不必担心从 3 到 49 的参数。如果该数组有一个自动的 length 变量，（请参阅内部对象了解有关数组长度的自动监控的说明），该 length 变量被设为 51，而不是 4。当然您可以创建各元素的编号之间没有间隙的数组，不过没有必要这样做。";}i:2;i:60144;}i:2571;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:60606;}i:2572;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:60606;}i:2573;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:144:"在 JScript 中，对象和数组几乎相同。两个主要差别是对象没有自动长度属性，而数组没有对象的属性和方法。";}i:2;i:60608;}i:2574;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:60752;}i:2575;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:60754;}i:2576;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"数组寻址";i:1;i:4;i:2;i:60754;}i:2;i:60754;}i:2577;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:60754;}i:2578;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:60754;}i:2579;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:161:"使用方括号“[]”来寻址数组。方括号中是一个数值或一个值为整数的表达式。下面的示例假定在脚本的其他地方已定义了";}i:2;i:60774;}i:2580;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:60935;}i:2581;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"entryNum";}i:2;i:60937;}i:2582;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:60945;}i:2583;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:" 变量，且已赋值。 ";}i:2;i:60947;}i:2584;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:60979;}i:2585;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:67:"
theListing = addressBook[entryNum];
theFirstLine = theListing[1];
";i:1;s:10:"javascript";i:2;N;}i:2;i:60979;}i:2586;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:61067;}i:2587;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:27:"将对象作为关联数组";i:1;i:4;i:2;i:61067;}i:2;i:61067;}i:2588;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:61067;}i:2589;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:61067;}i:2590;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:"通常，使用点运算符“.”访问对象的属性。例如，";}i:2;i:61102;}i:2591;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:61175;}i:2592;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:20:"
myObject.aProperty
";i:1;s:10:"javascript";i:2;N;}i:2;i:61175;}i:2593;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:61175;}i:2594;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:275:"在这里，属性名称是一个标识符。也可以用索引运算符“[]”访问对象的属性。在这里，是把对象看作一个关联数组。关联数组是一种数据结构，它可以动态地将任意的数据的值与任意的字符串相关联。例如，";}i:2;i:61215;}i:2595;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:61496;}i:2596;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:45:"
myObject["aProperty"] // 与上面相同。
";i:1;s:10:"javascript";i:2;N;}i:2;i:61496;}i:2597;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:61496;}i:2598;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:132:"尽管索引运算符更多地用于访问数组元素，当用于对象时，索引总是以字符串文字表示的属性名称。";}i:2;i:61561;}i:2599;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:61693;}i:2600;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:61693;}i:2601;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:57:"注意访问对象属性的两种方法的重要差异。";}i:2;i:61695;}i:2602;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:61753;}i:2603;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:3;i:1;i:3;i:2;i:61754;}i:2;i:61753;}i:2604;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:61753;}i:2605;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:61753;}i:2606;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:61753;}i:2607;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"  运算符  ";}i:2;i:61755;}i:2608;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:61768;}i:2609;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:61768;}i:2610;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:"  属性名称作为  ";}i:2;i:61769;}i:2611;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:61791;}i:2612;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:61791;}i:2613;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:"  对属性名称的处理  ";}i:2;i:61792;}i:2614;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:61820;}i:2615;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:61821;}i:2616;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:61821;}i:2617;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:61821;}i:2618;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:61821;}i:2619;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"点“.” ";}i:2;i:61823;}i:2620;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:61834;}i:2621;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:61834;}i:2622;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"标识符 ";}i:2;i:61835;}i:2623;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:61845;}i:2624;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:61845;}i:2625;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"不能作为数据处理 ";}i:2;i:61846;}i:2626;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:61871;}i:2627;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:61872;}i:2628;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:61872;}i:2629;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:61872;}i:2630;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"索引“[]” ";}i:2;i:61874;}i:2631;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:61889;}i:2632;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:61889;}i:2633;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"字符串文字 ";}i:2;i:61890;}i:2634;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:61906;}i:2635;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:61906;}i:2636;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"能被作为数据处理 ";}i:2;i:61907;}i:2637;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:61932;}i:2638;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:61933;}i:2639;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:61933;}i:2;i:61933;}i:2640;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:61933;}i:2641;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:175:"在运行之前并不知道属性名称时，这个差异会有用（比如基于用户输入构造对象时）。要想从一个关联数组提取所有的属性，必须用 ";}i:2;i:61936;}i:2642;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:62111;}i:2643;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:10:"for … in";}i:2;i:3;i:3;s:10:"for … in";}i:2;i:62113;}i:2644;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:62123;}i:2645;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" 循环。";}i:2;i:62125;}i:2646;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:62135;}i:2647;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:62137;}i:2648;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"特殊字符";i:1;i:3;i:2;i:62137;}i:2;i:62137;}i:2649;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:62137;}i:2650;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:62137;}i:2651;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:227:"JScript 提供了一些特殊字符，允许在字符串中包括一些无法直接键入的字符。每个字符都以反斜杠开始。反斜杠是一个转义字符，表示 JScript 解释器下面的字符为特殊字符。";}i:2;i:62159;}i:2652;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:62387;}i:2653;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:2;i:1;i:9;i:2;i:62388;}i:2;i:62387;}i:2654;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:62387;}i:2655;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:62387;}i:2656;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:62387;}i:2657;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"  转义序列  ";}i:2;i:62389;}i:2658;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:62405;}i:2659;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:62405;}i:2660;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"  字符  ";}i:2;i:62406;}i:2661;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:62416;}i:2662;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:62417;}i:2663;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:62417;}i:2664;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:62417;}i:2665;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62417;}i:2666;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"\b ";}i:2;i:62419;}i:2667;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62422;}i:2668;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62422;}i:2669;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"退格 ";}i:2;i:62423;}i:2670;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62430;}i:2671;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:62431;}i:2672;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:62431;}i:2673;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62431;}i:2674;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"\f ";}i:2;i:62433;}i:2675;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62436;}i:2676;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62436;}i:2677;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"走纸换页 ";}i:2;i:62437;}i:2678;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62450;}i:2679;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:62451;}i:2680;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:62451;}i:2681;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62451;}i:2682;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"\n ";}i:2;i:62453;}i:2683;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62456;}i:2684;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62456;}i:2685;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"换行 ";}i:2;i:62457;}i:2686;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62464;}i:2687;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:62465;}i:2688;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:62465;}i:2689;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62465;}i:2690;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"\r ";}i:2;i:62467;}i:2691;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62470;}i:2692;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62470;}i:2693;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"回车 ";}i:2;i:62471;}i:2694;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62478;}i:2695;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:62479;}i:2696;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:62479;}i:2697;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62479;}i:2698;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"\t ";}i:2;i:62481;}i:2699;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62484;}i:2700;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62484;}i:2701;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:"横向跳格 (Ctrl-I) ";}i:2;i:62485;}i:2702;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62507;}i:2703;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:62508;}i:2704;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:62508;}i:2705;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62508;}i:2706;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"\' ";}i:2;i:62510;}i:2707;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62513;}i:2708;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62513;}i:2709;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"单引号 ";}i:2;i:62514;}i:2710;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62524;}i:2711;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:62525;}i:2712;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:62525;}i:2713;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62525;}i:2714;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"\";}i:2;i:62527;}i:2715;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:62528;}i:2716;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:62529;}i:2717;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62530;}i:2718;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62530;}i:2719;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"双引号 ";}i:2;i:62531;}i:2720;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62541;}i:2721;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:62542;}i:2722;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:62542;}i:2723;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62542;}i:2724;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:2:"\\";}i:2;i:62552;}i:2725;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:62563;}i:2726;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62564;}i:2727;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:62564;}i:2728;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"反斜杠 ";}i:2;i:62565;}i:2729;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:62575;}i:2730;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:62576;}i:2731;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:62576;}i:2;i:62576;}i:2732;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:62576;}i:2733;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:180:"请注意，由于反斜杠本身用作转义符，因此不能直接在脚本中键入一个反斜杠。如果要产生一个反斜杠，必须一起键入两个反斜杠 (\\)。 ";}i:2;i:62579;}i:2734;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:62765;}i:2735;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:171:"
document.write('The image path is C:\\webstuff\\mypage\\gifs\\garden.gif.');
document.write('The caption reads, "After the snow of \'97. Grandma\'s house is covered."');
";i:1;s:10:"javascript";i:2;N;}i:2;i:62765;}i:2736;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:62956;}i:2737;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"脚本疑难解答";i:1;i:3;i:2;i:62956;}i:2;i:62956;}i:2738;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:62956;}i:2739;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:62956;}i:2740;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:139:"如果不够细致，任何编程语言都有一些可能发生错误的地方，而且每种语言都有其特殊之处。例如，对于 ";}i:2;i:62984;}i:2741;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:63123;}i:2742;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"null";}i:2;i:3;i:3;s:4:"null";}i:2;i:63125;}i:2743;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:63129;}i:2744;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:55:" 值： JScript 中这个值与 C 或 C++ 语言中的 ";}i:2;i:63131;}i:2745;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:63186;}i:2746;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"Null";}i:2;i:3;i:3;s:4:"Null";}i:2;i:63188;}i:2747;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:63192;}i:2748;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:" 值所起的作用是不一样的。 ";}i:2;i:63194;}i:2749;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:63232;}i:2750;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:63232;}i:2751;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:"下面提供了一些在编写 JScript 脚本时可能遇到的问题。 ";}i:2;i:63234;}i:2752;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:63307;}i:2753;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:63309;}i:2754;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"语法错误";i:1;i:4;i:2;i:63309;}i:2;i:63309;}i:2755;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:63309;}i:2756;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:63309;}i:2757;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:252:"由于编程语言中的语法比自然语言的语法要严格得多，因此在编写脚本时对细节应倍加关注。例如，如果您本意是将字符串作为某个参数，但是在键入时忘了使用引号引起来，就会产生问题。";}i:2;i:63329;}i:2758;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:63581;}i:2759;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:63583;}i:2760;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"脚本解释顺序";i:1;i:4;i:2;i:63583;}i:2;i:63583;}i:2761;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:63583;}i:2762;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:63583;}i:2763;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"对 JScript 的解释是 Web 浏览器的 ";}i:2;i:63609;}i:2764;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTML";}i:2;i:63651;}i:2765;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:304:" 语法分析处理的一部分。因此，如果在文档的 <HEAD> 标识中放置了一个脚本，则将在检查所有的 <BODY> 标识之前加以解释。如果在 <BODY> 标识中将创建对象，但由于在分析处理 <HEAD> 标识时这些对象尚不存在，因而不能被脚本操作。 ";}i:2;i:63655;}i:2766;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:63959;}i:2767;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:63959;}i:2768;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:63961;}i:2769;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"注意";}i:2;i:3;i:3;s:6:"注意";}i:2;i:63963;}i:2770;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:63969;}i:2771;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:93:"   本情况特定于 IE。ASP 和 WSH 具有不同的运行模式（其他宿主亦是）。";}i:2;i:63971;}i:2772;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:64064;}i:2773;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:64066;}i:2774;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"自动类型强制";i:1;i:4;i:2;i:64066;}i:2;i:64066;}i:2775;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:64066;}i:2776;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:64066;}i:2777;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:171:"JScript 是一种具有自动强制的自由类型语言。因此，尽管实际上不同类型的值是不相等的，但对下述示例中的表达式求值都将得到 ";}i:2;i:64092;}i:2778;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:64263;}i:2779;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"true";}i:2;i:3;i:3;s:4:"true";}i:2;i:64265;}i:2780;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:64269;}i:2781;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"。 ";}i:2;i:64271;}i:2782;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:64275;}i:2783;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:27:"
"100" == 100;
false == 0;
";i:1;s:10:"javascript";i:2;N;}i:2;i:64282;}i:2784;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:64282;}i:2785;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:114:"要核对类型与值都一致，用“严格相等”运算符（===）。下面两个表达式的值为 false：";}i:2;i:64330;}i:2786;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:64444;}i:2787;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:29:"
"100" === 100;
false === 0;
";i:1;s:10:"javascript";i:2;N;}i:2;i:64451;}i:2788;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:64501;}i:2789;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"运算符优先级";i:1;i:4;i:2;i:64501;}i:2;i:64501;}i:2790;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:64501;}i:2791;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:64501;}i:2792;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:236:"在对表达式求值时某个特定运算符的执行主要是根据 运算符优先级 ，而不是表达式的位置。因此，在下面的示例中，乘法将先于减法执行，尽管在该表达式中第一个出现的运算符";}i:2;i:64527;}i:2793;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:64763;}i:2794;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:69:"
theRadius = aPerimeterPoint - theCenterpoint * theCorrectionFactor;
";i:1;s:10:"javascript";i:2;N;}i:2;i:64770;}i:2795;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:64770;}i:2796;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:64860;}i:2797;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:19:"对对象使用 for";}i:2;i:3;i:3;s:19:"对对象使用 for";}i:2;i:64862;}i:2798;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:64881;}i:2799;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:9:"in 循环";}i:2;i:3;i:3;s:9:"in 循环";}i:2;i:64884;}i:2800;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:64893;}i:2801;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:64895;}i:2802;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:64895;}i:2803;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"当使用 ";}i:2;i:64897;}i:2804;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:64907;}i:2805;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"for";}i:2;i:3;i:3;s:3:"for";}i:2;i:64909;}i:2806;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:64912;}i:2807;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:2:"in";}i:2;i:3;i:3;s:2:"in";}i:2;i:64915;}i:2808;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:64917;}i:2809;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:217:" 循环对某个对象的属性进行遍历时，不必预先确定或管理将要指定给该循环计数器变量的对象字段的顺序。此外，在该语言的不同实现方案中该顺序可能会不一样。";}i:2;i:64919;}i:2810;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:65136;}i:2811;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:65138;}i:2812;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"with 关键字";i:1;i:4;i:2;i:65138;}i:2;i:65138;}i:2813;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:65138;}i:2814;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:65138;}i:2815;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:185:"with 语句可以方便地用来引用某个特定对象中已有的属性，但是不能用来给对象添加属性。要给对象创建新的属性，必须明确地引用该对象。";}i:2;i:65160;}i:2816;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:65345;}i:2817;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:65347;}i:2818;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:14:"this 关键字";i:1;i:4;i:2;i:65347;}i:2;i:65347;}i:2819;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:65347;}i:2820;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:65347;}i:2821;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:346:"尽管可以在对象的定义范围内使用 this 关键字来引用该对象本身，但是当函数不是该对象的定义时，就不能象普通情况那样使用 this 或类似的关键字来引用当前的执行函数。如果该函数被指定为某个对象的方法，则可以在该函数内使用 this 关键字来引用该对象。 ";}i:2;i:65369;}i:2822;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:65715;}i:2823;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:65717;}i:2824;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:49:"编写一个脚本，该脚本在 IE 中写脚本";i:1;i:4;i:2;i:65717;}i:2;i:65717;}i:2825;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:65717;}i:2826;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:65717;}i:2827;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:"当解释程序遇到</SCRIPT>标记时会终止当前脚本。要显示";}i:2;i:65774;}i:2828;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:65846;}i:2829;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"</SCRIPT>";}i:2;i:65847;}i:2830;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:65856;}i:2831;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:" 本身，请将其改写为至少两个字符串，例如 ";}i:2;i:65857;}i:2832;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:65916;}i:2833;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"</SCR";}i:2;i:65917;}i:2834;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:65922;}i:2835;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 和 ";}i:2;i:65923;}i:2836;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:65928;}i:2837;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"IPT>";}i:2;i:65929;}i:2838;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:65933;}i:2839;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:"，这样就可以在输出语句中将其连接在一起。 ";}i:2;i:65934;}i:2840;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:65995;}i:2841;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:65997;}i:2842;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:27:"IE 中的隐式窗口引用";i:1;i:4;i:2;i:65997;}i:2;i:65997;}i:2843;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:65997;}i:2844;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:65997;}i:2845;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:138:"由于同时可以打开多个窗口，任何隐式的窗口引用都被指向当前窗口。对于其他窗口必须使用显式引用。";}i:2;i:66032;}i:2846;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:66171;}i:2847;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:66171;}i:2848;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:12:"条件编译";i:1;i:3;i:2;i:66171;}i:2;i:66171;}i:2849;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:66171;}i:2850;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:66171;}i:2851;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:105:"使用条件编译可以使用 Jscript 语言的新特性并且与不支持该特性的老版本兼容。";}i:2;i:66193;}i:2852;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:66298;}i:2853;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:66298;}i:2854;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"用 ";}i:2;i:66300;}i:2855;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:66304;}i:2856;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"@cc_on";}i:2;i:3;i:3;s:6:"@cc_on";}i:2;i:66306;}i:2857;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:66312;}i:2858;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" 语句、";}i:2;i:66314;}i:2859;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:66324;}i:2860;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"@if";}i:2;i:3;i:3;s:3:"@if";}i:2;i:66326;}i:2861;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:66329;}i:2862;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 或 ";}i:2;i:66331;}i:2863;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:66336;}i:2864;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"@set";}i:2;i:3;i:3;s:4:"@set";}i:2;i:66338;}i:2865;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:66342;}i:2866;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:163:" 语句来激活条件编译。条件编译的某些典型用途包括使用 Jscript 中的新特性、在脚本中嵌入调试支持以及跟踪代码的运行。";}i:2;i:66344;}i:2867;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:66507;}i:2868;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:66507;}i:2869;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:163:"一般将条件编译代码放在注释中，所以不能理解条件编译的宿主（如 Netscape Navigator）就忽略了条件编译。下面是一个示例。";}i:2;i:66509;}i:2870;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:66672;}i:2871;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:161:"
/*@cc_on @*/
/*@if (@_jscript_version >= 4)
   alert("JScript version 4 or better");
   @else @*/
   alert("You need a more recent script engine.");
/*@end @*/
";i:1;s:10:"javascript";i:2;N;}i:2;i:66679;}i:2872;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:66679;}i:2873;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:"本示例使用了特殊的注释分隔符，该分隔符只有在 ";}i:2;i:66860;}i:2874;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:66927;}i:2875;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"@cc_on";}i:2;i:3;i:3;s:6:"@cc_on";}i:2;i:66929;}i:2876;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:66935;}i:2877;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:130:" 语句激活条件编译时才使用。不支持条件编译的脚本引擎只能看到一个需要更新脚本引擎的信息。";}i:2;i:66937;}i:2878;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:67067;}i:2879;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:67070;}i:2880;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"条件编译变量";i:1;i:3;i:2;i:67070;}i:2;i:67070;}i:2881;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:67070;}i:2882;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:67070;}i:2883;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:"下面是条件编译可用的预定义变量。如果变量不是 ";}i:2;i:67098;}i:2884;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:67165;}i:2885;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"true";}i:2;i:3;i:3;s:4:"true";}i:2;i:67167;}i:2886;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:67171;}i:2887;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"，就不被定义或者作为 ";}i:2;i:67173;}i:2888;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:67204;}i:2889;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:3:"NaN";}i:2;i:3;i:3;s:3:"NaN";}i:2;i:67206;}i:2890;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:67209;}i:2891;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" 处理。";}i:2;i:67211;}i:2892;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:67222;}i:2893;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:2;i:1;i:11;i:2;i:67223;}i:2;i:67222;}i:2894;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:67222;}i:2895;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:67222;}i:2896;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:67222;}i:2897;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"  变量  ";}i:2;i:67224;}i:2898;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:67234;}i:2899;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:67234;}i:2900;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"  描述  ";}i:2;i:67235;}i:2901;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:67245;}i:2902;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:67246;}i:2903;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:67246;}i:2904;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:67246;}i:2905;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67246;}i:2906;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"@";}i:2;i:67248;}i:2907;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"_";}i:2;i:67257;}i:2908;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"win32 ";}i:2;i:67267;}i:2909;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67273;}i:2910;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67273;}i:2911;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:"在 Win32 系统上运行为 true。 ";}i:2;i:67274;}i:2912;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67311;}i:2913;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:67312;}i:2914;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:67312;}i:2915;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67312;}i:2916;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"@";}i:2;i:67314;}i:2917;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"_";}i:2;i:67323;}i:2918;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"win16 ";}i:2;i:67333;}i:2919;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67339;}i:2920;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67339;}i:2921;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:"在 Win16 系统上运行为 true。 ";}i:2;i:67340;}i:2922;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67377;}i:2923;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:67378;}i:2924;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:67378;}i:2925;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67378;}i:2926;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"@";}i:2;i:67380;}i:2927;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"_";}i:2;i:67389;}i:2928;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"mac ";}i:2;i:67399;}i:2929;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67403;}i:2930;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67403;}i:2931;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:"在 Apple Macintosh 系统上运行为 true。 ";}i:2;i:67404;}i:2932;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67451;}i:2933;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:67452;}i:2934;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:67452;}i:2935;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67452;}i:2936;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"@";}i:2;i:67454;}i:2937;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"_";}i:2;i:67463;}i:2938;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"alpha ";}i:2;i:67473;}i:2939;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67479;}i:2940;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67479;}i:2941;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:"在 DEC Alpha 处理器上运行为 true。 ";}i:2;i:67480;}i:2942;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67524;}i:2943;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:67525;}i:2944;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:67525;}i:2945;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67525;}i:2946;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"@";}i:2;i:67527;}i:2947;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"_";}i:2;i:67536;}i:2948;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"x86 ";}i:2;i:67546;}i:2949;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67550;}i:2950;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67550;}i:2951;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"在 Intel 处理器上运行为 true。 ";}i:2;i:67551;}i:2952;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67591;}i:2953;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:67592;}i:2954;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:67592;}i:2955;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67592;}i:2956;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"@";}i:2;i:67594;}i:2957;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"_";}i:2;i:67603;}i:2958;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"mc680x0 ";}i:2;i:67613;}i:2959;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67621;}i:2960;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67621;}i:2961;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"在 Motorola ";}i:2;i:67622;}i:2962;a:3:{i:0;s:14:"multiplyentity";i:1;a:2:{i:0;s:3:"680";i:1;s:1:"0";}i:2;i:67635;}i:2963;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:" 处理器上运行为 true。 ";}i:2;i:67640;}i:2964;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67671;}i:2965;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:67672;}i:2966;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:67672;}i:2967;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67672;}i:2968;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"@";}i:2;i:67674;}i:2969;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"_";}i:2;i:67683;}i:2970;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"PowerPC ";}i:2;i:67693;}i:2971;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67701;}i:2972;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67701;}i:2973;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:51:"在 Motorola PowerPC 处理器上运行为 true。 ";}i:2;i:67702;}i:2974;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67753;}i:2975;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:67754;}i:2976;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:67754;}i:2977;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67754;}i:2978;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"@";}i:2;i:67756;}i:2979;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"_";}i:2;i:67765;}i:2980;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"jscript ";}i:2;i:67775;}i:2981;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67783;}i:2982;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67783;}i:2983;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"永远为 true。 ";}i:2;i:67784;}i:2984;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67802;}i:2985;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:67803;}i:2986;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:67803;}i:2987;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67803;}i:2988;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"@";}i:2;i:67805;}i:2989;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"_";}i:2;i:67814;}i:2990;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"jscript";}i:2;i:67824;}i:2991;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"_";}i:2;i:67839;}i:2992;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"build ";}i:2;i:67849;}i:2993;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67855;}i:2994;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67855;}i:2995;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:40:"包含 Jscript 脚本引擎创建号。 ";}i:2;i:67856;}i:2996;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67896;}i:2997;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:67897;}i:2998;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:67897;}i:2999;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67897;}i:3000;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"@";}i:2;i:67899;}i:3001;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"_";}i:2;i:67908;}i:3002;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"jscript";}i:2;i:67918;}i:3003;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:1:"_";}i:2;i:67933;}i:3004;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"version ";}i:2;i:67943;}i:3005;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:67951;}i:3006;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:67951;}i:3007;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:58:"包含以 major、minor 为格式的 Jscript 版本号。 ";}i:2;i:67952;}i:3008;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:68010;}i:3009;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:68011;}i:3010;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:68011;}i:2;i:68011;}i:3011;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:68013;}i:3012;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:27:"在浏览器中显示信息";i:1;i:2;i:2;i:68013;}i:2;i:68013;}i:3013;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:68013;}i:3014;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:68013;}i:3015;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:90:"Microsoft JScript 提供了两种方式来在浏览器中直接显示数据。可以使用";}i:2;i:68052;}i:3016;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:68142;}i:3017;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"write( )";}i:2;i:3;i:3;s:8:"write( )";}i:2;i:68144;}i:3018;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:68152;}i:3019;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 和 ";}i:2;i:68154;}i:3020;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:68159;}i:3021;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:10:"writeln( )";}i:2;i:3;i:3;s:10:"writeln( )";}i:2;i:68161;}i:3022;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:68171;}i:3023;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"，这两个函数是";}i:2;i:68173;}i:3024;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:68194;}i:3025;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"document";}i:2;i:3;i:3;s:8:"document";}i:2;i:68196;}i:3026;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:68204;}i:3027;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:86:" 对象的方法。也可以在浏览器中以表格的方式显示信息，以及用 ";}i:2;i:68206;}i:3028;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:68292;}i:3029;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:24:"警告、提示和确认";}i:2;i:3;i:3;s:24:"警告、提示和确认";}i:2;i:68294;}i:3030;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:68318;}i:3031;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:" 消息框来显示信息。 ";}i:2;i:68320;}i:3032;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:68349;}i:3033;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:68351;}i:3034;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:47:"使用document.write( ) 和 document.writeln( )";i:1;i:4;i:2;i:68351;}i:2;i:68351;}i:3035;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:68351;}i:3036;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:68351;}i:3037;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:"显示信息最常用的方式是 ";}i:2;i:68406;}i:3038;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:68440;}i:3039;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"document";}i:2;i:3;i:3;s:8:"document";}i:2;i:68442;}i:3040;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:68450;}i:3041;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" 对象的 ";}i:2;i:68452;}i:3042;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:68463;}i:3043;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"write( )";}i:2;i:3;i:3;s:8:"write( )";}i:2;i:68465;}i:3044;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:68473;}i:3045;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:126:" 方法。该方法用一个字符串作为其参数，并在浏览器中显示。该字符串可以是普通文本或 HTML。";}i:2;i:68475;}i:3046;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:68601;}i:3047;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:68601;}i:3048;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:109:"字符串可以用单引号或双引号引起来。这样可以引用那些包含引号或撇号的内容。 ";}i:2;i:68603;}i:3049;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:68712;}i:3050;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:79:"
document.write("Pi is approximately equal to " + Math.PI);
document.write( );
";i:1;s:10:"javascript";i:2;N;}i:2;i:68719;}i:3051;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:68719;}i:3052;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:68819;}i:3053;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"注意";}i:2;i:3;i:3;s:6:"注意";}i:2;i:68821;}i:3054;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:68827;}i:3055;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:82:"   下面的简单函数可以避免在浏览器中显示信息时不得不键入 ";}i:2;i:68829;}i:3056;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:68911;}i:3057;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"document.write";}i:2;i:68912;}i:3058;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:68926;}i:3059;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:82:"。该函数不能告知要显示的信息是否未定义，而是发布给命令 ";}i:2;i:68927;}i:3060;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:69009;}i:3061;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"w();";}i:2;i:69010;}i:3062;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:69014;}i:3063;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:"，该命令将显示一个空行。 ";}i:2;i:69015;}i:3064;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:69052;}i:3065;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:298:"
function w(m) { // 编写函数。
m = "" + m + ""; //  确保变量 m 是一个字符串。
if ("undefined" != m) { // 判别是否为空或其它未定义的项。
   document.write(m);
   }
document.write("<br>");
}

w('<IMG SRC="horse.gif">');
w();
w("This is an engraving of a horse.");
w();
";i:1;s:10:"javascript";i:2;N;}i:2;i:69059;}i:3066;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:69059;}i:3067;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:69378;}i:3068;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:10:"writeln( )";}i:2;i:3;i:3;s:10:"writeln( )";}i:2;i:69380;}i:3069;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:69390;}i:3070;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" 方法与 ";}i:2;i:69392;}i:3071;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:69403;}i:3072;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"write( )";}i:2;i:3;i:3;s:8:"write( )";}i:2;i:69405;}i:3073;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:69413;}i:3074;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:110:" 方法几乎一样，差别仅在于是前者将在所提供的任何字符串后添加一个换行符。在 ";}i:2;i:69415;}i:3075;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTML";}i:2;i:69525;}i:3076;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:156:" 中，这通常只会在后面产生一个空格；不过如果使用了 <PRE> 和 <XMP> 标识，这个换行符会被解释，且在浏览器中显示。";}i:2;i:69529;}i:3077;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:69685;}i:3078;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:69685;}i:3079;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"在调用 ";}i:2;i:69687;}i:3080;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:69697;}i:3081;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"write( )";}i:2;i:3;i:3;s:8:"write( )";}i:2;i:69699;}i:3082;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:69707;}i:3083;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:" 方法时，如果该文档不处于在调用 ";}i:2;i:69709;}i:3084;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:69756;}i:3085;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"write( )";}i:2;i:3;i:3;s:8:"write( )";}i:2;i:69758;}i:3086;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:69766;}i:3087;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:272:" 方法时的打开和分析的过程中，该方法将打开并清除该文档，所以它可能是有危险的。该示例显示了一个每隔一分钟就显示时间的脚本，但是在第一次显示后由于它从过程中将自己清除，因此会导致失败。 ";}i:2;i:69768;}i:3088;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:70040;}i:3089;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:499:"
<HTML>
<HEAD>
<SCRIPT LANGUAGE="JScript">
function singOut()  {
var theMoment = new Date();
var theHour = theMoment.getHours();
var theMinute = theMoment.getMinutes();
var theDisplacement = (theMoment.getTimezoneOffset() / 60);
theHour -= theDisplacement;
if (theHour > 23)  {
theHour -= 24
}
document.write(theHour + " hours, " + theMinute + " minutes, Coordinated Universal Time.");
window.setTimeout("singOut();", 60000);
}
</SCRIPT>
</HEAD>
<BODY>
<SCRIPT>
singOut();
</SCRIPT>
</BODY>
</HTML>
";i:1;s:11:"html4strict";i:2;N;}i:2;i:70047;}i:3090;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:70047;}i:3091;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:"如果使用 window 对象的 ";}i:2;i:70560;}i:3092;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:70590;}i:3093;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:7:"alert()";}i:2;i:3;i:3;s:7:"alert()";}i:2;i:70592;}i:3094;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:70599;}i:3095;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" 方法而不是 ";}i:2;i:70601;}i:3096;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:70618;}i:3097;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:16:"document.write()";}i:2;i:3;i:3;s:16:"document.write()";}i:2;i:70620;}i:3098;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:70636;}i:3099;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"，则该脚本可以运行。 ";}i:2;i:70638;}i:3100;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:70669;}i:3101;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:133:"
window.alert(theHour + " hours, " + theMinute + " minutes, Coordinated Universal Time.");
window.setTimeout("singOut();", 60000);
}
";i:1;s:10:"javascript";i:2;N;}i:2;i:70676;}i:3102;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:70830;}i:3103;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"清除当前文档";i:1;i:4;i:2;i:70830;}i:2;i:70830;}i:3104;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:70830;}i:3105;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:70830;}i:3106;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:70856;}i:3107;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"document";}i:2;i:3;i:3;s:8:"document";}i:2;i:70858;}i:3108;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:70866;}i:3109;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" 对象的 ";}i:2;i:70868;}i:3110;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:70879;}i:3111;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:7:"clear()";}i:2;i:3;i:3;s:7:"clear()";}i:2;i:70881;}i:3112;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:70888;}i:3113;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:185:" 方法将清空当前文档。该方法也将清除您的脚本（随文档的其他部分一起），因此要特别注意该方法的使用方式及在什么时候使用该方法。 ";}i:2;i:70890;}i:3114;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:71075;}i:3115;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:19:"
document.clear();
";i:1;s:10:"javascript";i:2;N;}i:2;i:71082;}i:3116;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:71121;}i:3117;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"使用消息框";i:1;i:3;i:2;i:71121;}i:2;i:71121;}i:3118;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:71121;}i:3119;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:71146;}i:3120;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:30:"使用警告、提示和确认";i:1;i:4;i:2;i:71146;}i:2;i:71146;}i:3121;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:71146;}i:3122;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:71146;}i:3123;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:91:"可以使用警告、确认和提示消息框来获得用户的输入。这些消息框是 ";}i:2;i:71184;}i:3124;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:71275;}i:3125;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"window";}i:2;i:3;i:3;s:6:"window";}i:2;i:71277;}i:3126;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:71283;}i:3127;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:" 对象的接口方法。由于 ";}i:2;i:71285;}i:3128;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:71317;}i:3129;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"window";}i:2;i:3;i:3;s:6:"window";}i:2;i:71319;}i:3130;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:71325;}i:3131;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:104:" 对象位于对象层次的顶层，因此实际应用中不必使用这些消息框的全名（例如 ";}i:2;i:71327;}i:3132;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:71431;}i:3133;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"window.alert()";}i:2;i:71432;}i:3134;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:71446;}i:3135;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:105:"），不过采用全名是一个好注意，这样有助于您记住这些消息框属于哪个对象。";}i:2;i:71447;}i:3136;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:71552;}i:3137;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:71554;}i:3138;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"警告消息框";i:1;i:4;i:2;i:71554;}i:2;i:71554;}i:3139;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:71554;}i:3140;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:71554;}i:3141;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:71577;}i:3142;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"alert";}i:2;i:3;i:3;s:5:"alert";}i:2;i:71579;}i:3143;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:71584;}i:3144;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:89:" 方法有一个参数，即希望对用户显示的文本字符串。该字符串不是 ";}i:2;i:71586;}i:3145;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTML";}i:2;i:71675;}i:3146;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:206:" 格式。该消息框提供了一个“确定”按钮让用户关闭该消息框，并且该消息框是模式对话框，也就是说，用户必须先关闭该消息框然后才能继续进行操作。 ";}i:2;i:71679;}i:3147;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:71885;}i:3148;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:55:"
window.alert("欢迎！请按“确定”继续。");
";i:1;s:10:"javascript";i:2;N;}i:2;i:71892;}i:3149;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:71968;}i:3150;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"确认消息框";i:1;i:4;i:2;i:71968;}i:2;i:71968;}i:3151;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:71968;}i:3152;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:71968;}i:3153;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:149:"使用确认消息框可向用户问一个“是-或-否”问题，并且用户可以选择单击“确定”按钮或者单击“取消”按钮。";}i:2;i:71991;}i:3154;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:72140;}i:3155;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:7:"confirm";}i:2;i:3;i:3;s:7:"confirm";}i:2;i:72142;}i:3156;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:72149;}i:3157;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:" 方法的返回值为 ";}i:2;i:72151;}i:3158;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:72174;}i:3159;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:4:"true";}i:2;i:3;i:3;s:4:"true";}i:2;i:72176;}i:3160;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:72180;}i:3161;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 或 ";}i:2;i:72182;}i:3162;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:72187;}i:3163;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:5:"false";}i:2;i:3;i:3;s:5:"false";}i:2;i:72189;}i:3164;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:72194;}i:3165;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:145:"。该消息框也是模式对话框：用户必须在响应该对话框（单击一个按钮）将其关闭后，才能进行下一步操作。 ";}i:2;i:72196;}i:3166;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:72341;}i:3167;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:201:"
var truthBeTold = window.confirm("单击“确定”继续。单击“取消”停止。");
if (truthBeTold) {
window.alert("欢迎访问我们的 Web 页！");
}  else  window.alert("再见啦！");
";i:1;s:10:"javascript";i:2;N;}i:2;i:72348;}i:3168;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:72570;}i:3169;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"提示消息框";i:1;i:4;i:2;i:72570;}i:2;i:72570;}i:3170;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:72570;}i:3171;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:72570;}i:3172;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:334:"提示消息框提供了一个文本字段，用户可以在此字段输入一个答案来响应您的提示。该消息框有一个“确定”按钮和一个“取消”按钮。如果您提供了一个辅助字符串参数，则提示消息框将在文本字段显示该辅助字符串作为默认响应。否则，默认文本为 ";}i:2;i:72593;}i:3173;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:72927;}i:3174;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"<undefined>";}i:2;i:72928;}i:3175;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:72939;}i:3176;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"。 ";}i:2;i:72940;}i:3177;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:72944;}i:3178;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:72944;}i:3179;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"与";}i:2;i:72946;}i:3180;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:72949;}i:3181;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:8:"alert( )";}i:2;i:3;i:3;s:8:"alert( )";}i:2;i:72951;}i:3182;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:72959;}i:3183;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" 和 ";}i:2;i:72961;}i:3184;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:72966;}i:3185;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:10:"confirm( )";}i:2;i:3;i:3;s:10:"confirm( )";}i:2;i:72968;}i:3186;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:72978;}i:3187;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:" 方法类似，";}i:2;i:72980;}i:3188;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:72996;}i:3189;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:6:"prompt";}i:2;i:3;i:3;s:6:"prompt";}i:2;i:72998;}i:3190;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:73004;}i:3191;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:98:" 方法也将显示一个模式消息框。用户在继续操作之前必须先关闭该消息框 ";}i:2;i:73006;}i:3192;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:73104;}i:3193;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:80:"
var theResponse = window.prompt("欢迎？","请在此输入您的姓名。");
";i:1;s:10:"javascript";i:2;N;}i:2;i:73111;}i:3194;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:73210;}i:3195;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:73210;}}