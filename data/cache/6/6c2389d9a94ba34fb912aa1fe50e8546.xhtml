
<h1 class="sectionedit1" id="window_对象">Window 对象</h1>
<div class="level1">

<p>
Window 对象表示浏览器中打开的窗口。
如果文档包含框架（frame 或 iframe 标签），浏览器会为 <abbr title="HyperText Markup Language">HTML</abbr> 文档创建一个 window 对象，并为每个框架创建一个额外的 window 对象。
</p>

<p>
<strong>注释：</strong>没有应用于 window 对象的公开标准，不过所有浏览器都支持该对象。
</p>

</div>
<!-- EDIT1 SECTION "Window 对象" [1-352] -->
<h3 class="sectionedit2" id="window_对象描述">Window 对象描述</h3>
<div class="level3">

<p>
Window 对象表示一个浏览器窗口或一个框架。在客户端 JavaScript 中，Window 对象是全局对象，所有的表达式都在当前的环境中计算。也就是说，要引用当前窗口根本不需要特殊的语法，可以把那个窗口的属性作为全局变量来使用。例如，可以只写 document，而不必写 window.document。
</p>

<p>
同样，可以把当前窗口对象的方法当作函数来使用，如只写 
<a href="/doku.php/html:browser:window:function:alert" class="wikilink2" title="html:browser:window:function:alert" rel="nofollow">alert</a>
()，而不必写 Window.alert()。
</p>

<p>
除了上面列出的属性和方法，Window 对象还实现了核心 JavaScript 所定义的所有全局属性和方法。
</p>

<p>
Window 对象的 window 属性和 self 属性引用的都是它自己。当你想明确地引用当前窗口，而不仅仅是隐式地引用它时，可以使用这两个属性。除了这两个属性之外，parent 属性、top 属性以及 frame[] 数组都引用了与当前 Window 对象相关的其他 Window 对象。
</p>

<p>
要引用窗口中的一个框架，可以使用如下语法：
</p>
<pre class="code javascript">frame<span class="br0">&#91;</span>i<span class="br0">&#93;</span>		<span class="co1">//当前窗口的框架</span>
self.<span class="me1">frame</span><span class="br0">&#91;</span>i<span class="br0">&#93;</span>	<span class="co1">//当前窗口的框架</span>
w.<span class="me1">frame</span><span class="br0">&#91;</span>i<span class="br0">&#93;</span>	<span class="co1">//窗口 w 的框架</span></pre>

<p>
要引用一个框架的父窗口（或父框架），可以使用下面的语法：
</p>
<pre class="code javascript">parent		<span class="co1">//当前窗口的父窗口</span>
self.<span class="me1">parent</span>	<span class="co1">//当前窗口的父窗口</span>
w.<span class="me1">parent</span> 	<span class="co1">//窗口 w 的父窗口</span></pre>

<p>
要从顶层窗口含有的任何一个框架中引用它，可以使用如下语法：
</p>
<pre class="code javascript">top		<span class="co1">//当前框架的顶层窗口</span>
self.<span class="me1">top</span>	<span class="co1">//当前框架的顶层窗口</span>
f.<span class="me1">top</span>		<span class="co1">//框架 f 的顶层窗口</span></pre>

<p>
新的顶层浏览器窗口由方法 Window.open() 创建。当调用该方法时，应把 open() 调用的返回值存储在一个变量中，然后使用那个变量来引用新窗口。新窗口的 opener 属性反过来引用了打开它的那个窗口。
</p>

<p>
一般来说，Window 对象的方法都是对浏览器窗口或框架进行某种操作。而 alert() 方法、confirm() 方法和 prompt 方法则不同，它们通过简单的对话框与用户进行交互。
</p>

<p>
<ul ><li class="catlist-ns"><strong class="li catlist-nshead"><a href="/doku.php/html:browser:window:attr:start" class="wikilink1" title="html:browser:window:attr:start">Window 对象属性</a></strong><ul class="catlist-nslist"><li class="catlist-page"><a href="/doku.php/html:browser:window:attr:closed" class="wikilink1" title="html:browser:window:attr:closed">closed</a></li><li class="catlist-page"><a href="/doku.php/html:browser:window:attr:defaultstatus" class="wikilink1" title="html:browser:window:attr:defaultstatus">defaultStatus</a></li><li class="catlist-page"><a href="/doku.php/html:browser:window:attr:document" class="wikilink1" title="html:browser:window:attr:document">Document</a></li><li class="catlist-page"><a href="/doku.php/html:browser:window:attr:history" class="wikilink1" title="html:browser:window:attr:history">history</a></li><li class="catlist-page"><a href="/doku.php/html:browser:window:attr:innerheight" class="wikilink1" title="html:browser:window:attr:innerheight">innerheight</a></li></ul></li><li class="catlist-ns"><strong class="li catlist-nshead"><a href="/doku.php/html:browser:window:collections:start" class="wikilink1" title="html:browser:window:collections:start">Window 对象集合</a></strong><ul class="catlist-nslist"></ul></li><li class="catlist-ns"><strong class="li catlist-nshead"><a href="/doku.php/html:browser:window:function:start" class="wikilink1" title="html:browser:window:function:start">Window 对象方法</a></strong><ul class="catlist-nslist"><li class="catlist-page"><a href="/doku.php/html:browser:window:function:open" class="wikilink1" title="html:browser:window:function:open">open</a></li></ul></li></ul>
</p>

</div>
<!-- EDIT2 SECTION "Window 对象描述" [353-] -->