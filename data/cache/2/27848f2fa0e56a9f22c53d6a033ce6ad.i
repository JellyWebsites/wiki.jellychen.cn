a:75:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"从 HTML 中分离";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:155:"凡是在一对开始和结束标记之外的内容都会被 PHP 解析器忽略，这使得 PHP 文件可以具备混合内容。 可以使 PHP 嵌入到 ";}i:2;i:35;}i:5;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTML";}i:2;i:190;}i:6;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:" 文档中去，如下例所示。 ";}i:2;i:194;}i:7;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:229;}i:8;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:200:"
<p>This is going to be ignored by PHP and displayed by the browser.</p>
<?php  echo  'While this is going to be parsed.' ;  ?>
<p>This will also be ignored by PHP and displayed by the browser.</p>  
";i:1;s:3:"php";i:2;N;}i:2;i:236;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:236;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:336:"这将如预期中的运行，因为当 PHP 解释器碰到 ?> 结束标记时就简单地将其后内容原样输出（除非马上紧接换行 - 见指令分隔符）直到碰到下一个开始标记；例外是处于条件语句中间时，此时 PHP 解释器会根据条件判断来决定哪些输出，哪些跳过。见下例。 ";}i:2;i:450;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:786;}i:12;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:786;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:"使用条件结构： ";}i:2;i:788;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:810;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:810;}i:16;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:813;}i:17;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:41:"Example #1 使用条件的高级分离术";}i:2;i:3;i:3;s:41:"Example #1 使用条件的高级分离术";}i:2;i:815;}i:18;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:856;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:858;}i:20;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:864;}i:21;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:152:"
<?php  if ( $expression  ==  true ):  ?>
  This will show if the expression is true.
<?php  else:  ?>
  Otherwise this will show.
<?php  endif;  ?>   
";i:1;s:3:"php";i:2;N;}i:2;i:864;}i:22;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:864;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:234:"上例中 PHP 将跳过条件语句未达成的段落，即使该段落位于 PHP 开始和结束标记之外。由于 PHP 解释器会在条件未达成时直接跳过该段条件语句块，因此 PHP 会根据条件来忽略之。 ";}i:2;i:1030;}i:24;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1264;}i:25;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1264;}i:26;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:114:"要输出大段文本时，跳出 PHP 解析模式通常比将文本通过 echo  或 print  输出更有效率。 ";}i:2;i:1266;}i:27;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1380;}i:28;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1380;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"可以在 PHP 中使用四对不同的开始和结束标记。其中两种，";}i:2;i:1382;}i:30;a:3:{i:0;s:11:"unformatted";i:1;a:1:{i:0;s:46:"<?php ?> 和 <script language="php"> </script>";}i:2;i:1467;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:" 总是可用的。另两种是短标记和 ASP 风格标记，可以在 ";}i:2;i:1522;}i:32;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:1595;}i:33;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"php.ini";}i:2;i:1597;}i:34;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:1604;}i:35;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:142:" 配置文件中打开或关闭。尽管有些人觉得短标记和 ASP 风格标记很方便，但移植性较差，通常不推荐使用。 ";}i:2;i:1606;}i:36;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1748;}i:37;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:116:"Note: 
此外注意如果将 PHP 嵌入到 XML 或 XHTML 中则需要使用 <?php ?> 标记以保持符合标准。 ";}i:2;i:1750;}i:38;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1750;}i:39;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:1873;}i:40;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:36:"Example #2 PHP 开始和结束标记";}i:2;i:3;i:3;s:36:"Example #2 PHP 开始和结束标记";}i:2;i:1875;}i:41;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:1911;}i:42;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1913;}i:43;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:501:"
1.  <?php  echo  'if you want to serve XHTML or XML documents, do it like this' ;  ?>
 
2.  <script language="php">
         echo  'some editors (like FrontPage) don\'t
              like processing instructions' ;
     </script>
 
3.  <?  echo  'this is the simplest, an SGML processing instruction' ;  ?>
    <?= expression ?> This is a shortcut for "<?  echo  expression ?>"

4.  <% echo 'You may optionally use ASP-style tags'; %>
    <%= $variable; # This is a shortcut for "<% echo . . ." %>  
";i:1;s:3:"php";i:2;N;}i:2;i:1920;}i:44;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1920;}i:45;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:112:"上例中的 1 和 2 中使用的标记总是可用的，其中示例 1 中是最常用，并建议使用的。 ";}i:2;i:2435;}i:46;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2547;}i:47;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2547;}i:48;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"短标记（上例 3）仅在通过 ";}i:2;i:2549;}i:49;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:2585;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"php.ini";}i:2;i:2587;}i:51;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:2594;}i:52;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:" 配置文件中的指令 short";}i:2;i:2596;}i:53;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:1;i:1;s:1:"_";}i:2;i:1;i:3;s:1:"_";}i:2;i:2627;}i:54;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:3;i:1;s:4:"open";}i:2;i:3;i:3;s:4:"open";}i:2;i:2628;}i:55;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:25:"markdowku_italicunderline";i:1;a:2:{i:0;i:4;i:1;s:1:"_";}i:2;i:4;i:3;s:1:"_";}i:2;i:2632;}i:56;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:58:"tag 打开后才可用，或者在 PHP 编译时加入了 ";}i:2;i:2633;}i:57;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:2691;}i:58;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:2693;}i:59;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:17:"enable-short-tags";}i:2;i:3;i:3;s:17:"enable-short-tags";}i:2;i:2695;}i:60;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:2712;}i:61;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" 选项。 ";}i:2;i:2714;}i:62;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2725;}i:63;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2725;}i:64;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:"ASP 风格标记（上例 4）仅在通过 ";}i:2;i:2727;}i:65;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:2770;}i:66;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"php.ini";}i:2;i:2772;}i:67;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:2779;}i:68;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:57:" 配置文件中的指令 asp_tags 打开后才可用。 ";}i:2;i:2781;}i:69;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2839;}i:70;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:257:"Note: 
在以下情况应避免使用短标记：开发需要再次发布的程序或者库，或者在用户不能控制的服务器上开发。因为目标服务器可能不支持短标记。为了代码的移植及发行，确保不要使用短标记。 ";}i:2;i:2839;}i:71;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:215:"Note: 
在 PHP 5.2 和之前的版本中，解释器不允许一个文件的全部内容就是一个开始标记 <?php。自 PHP 5.3 起则允许此种文件，但要开始标记后有一个或更多白空格符。 ";}i:2;i:3102;}i:72;a:3:{i:0;s:12:"preformatted";i:1;a:1:{i:0;s:131:"Note: 
自 PHP 5.4 起，短格式的 echo 标记 <?= 总会被识别并且合法，而不管 short_open_tag 的设置是什么。 ";}i:2;i:3323;}i:73;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3323;}i:74;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:3323;}}