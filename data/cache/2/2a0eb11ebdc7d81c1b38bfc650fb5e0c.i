a:55:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:13:"Window 对象";i:1;i:1;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:122:"Window 对象表示浏览器中打开的窗口。
如果文档包含框架（frame 或 iframe 标签），浏览器会为 ";}i:2;i:29;}i:5;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"HTML";}i:2;i:151;}i:6;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:92:" 文档创建一个 window 对象，并为每个框架创建一个额外的 window 对象。";}i:2;i:155;}i:7;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:247;}i:8;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:247;}i:9;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:1;i:1;s:2:"**";}i:2;i:1;i:3;s:2:"**";}i:2;i:249;}i:10;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:3;i:1;s:9:"注释：";}i:2;i:3;i:3;s:9:"注释：";}i:2;i:251;}i:11;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:22:"markdowku_boldasterisk";i:1;a:2:{i:0;i:4;i:1;s:2:"**";}i:2;i:4;i:3;s:2:"**";}i:2;i:260;}i:12;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:89:"没有应用于 window 对象的公开标准，不过所有浏览器都支持该对象。";}i:2;i:262;}i:13;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:351;}i:14;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:353;}i:15;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:19:"Window 对象描述";i:1;i:3;i:2;i:353;}i:2;i:353;}i:16;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:353;}i:17;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:353;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:363:"Window 对象表示一个浏览器窗口或一个框架。在客户端 JavaScript 中，Window 对象是全局对象，所有的表达式都在当前的环境中计算。也就是说，要引用当前窗口根本不需要特殊的语法，可以把那个窗口的属性作为全局变量来使用。例如，可以只写 document，而不必写 window.document。";}i:2;i:384;}i:19;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:747;}i:20;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:747;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:"同样，可以把当前窗口对象的方法当作函数来使用，如只写 
";}i:2;i:749;}i:22;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:16:".:function:alert";i:1;N;}i:2;i:829;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"
()，而不必写 Window.alert()。";}i:2;i:849;}i:24;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:885;}i:25;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:885;}i:26;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:124:"除了上面列出的属性和方法，Window 对象还实现了核心 JavaScript 所定义的所有全局属性和方法。";}i:2;i:888;}i:27;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1012;}i:28;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1012;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:324:"Window 对象的 window 属性和 self 属性引用的都是它自己。当你想明确地引用当前窗口，而不仅仅是隐式地引用它时，可以使用这两个属性。除了这两个属性之外，parent 属性、top 属性以及 frame[] 数组都引用了与当前 Window 对象相关的其他 Window 对象。";}i:2;i:1014;}i:30;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1338;}i:31;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1338;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:"要引用窗口中的一个框架，可以使用如下语法：";}i:2;i:1340;}i:33;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1403;}i:34;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:105:"
frame[i]		//当前窗口的框架
self.frame[i]	//当前窗口的框架
w.frame[i]	//窗口 w 的框架
";i:1;s:10:"javascript";i:2;N;}i:2;i:1410;}i:35;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1410;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:84:"要引用一个框架的父窗口（或父框架），可以使用下面的语法：";}i:2;i:1536;}i:37;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1620;}i:38;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:109:"
parent		//当前窗口的父窗口
self.parent	//当前窗口的父窗口
w.parent 	//窗口 w 的父窗口
";i:1;s:10:"javascript";i:2;N;}i:2;i:1627;}i:39;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1627;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:87:"要从顶层窗口含有的任何一个框架中引用它，可以使用如下语法：";}i:2;i:1756;}i:41;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1843;}i:42;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:109:"
top		//当前框架的顶层窗口
self.top	//当前框架的顶层窗口
f.top		//框架 f 的顶层窗口
";i:1;s:10:"javascript";i:2;N;}i:2;i:1850;}i:43;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1850;}i:44;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:259:"新的顶层浏览器窗口由方法 Window.open() 创建。当调用该方法时，应把 open() 调用的返回值存储在一个变量中，然后使用那个变量来引用新窗口。新窗口的 opener 属性反过来引用了打开它的那个窗口。";}i:2;i:1980;}i:45;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2239;}i:46;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2239;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:211:"一般来说，Window 对象的方法都是对浏览器窗口或框架进行某种操作。而 alert() 方法、confirm() 方法和 prompt 方法则不同，它们通过简单的对话框与用户进行交互。";}i:2;i:2241;}i:48;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2452;}i:49;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2452;}i:50;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"catlist";i:1;a:23:{s:11:"displayType";i:1;s:8:"nsInBold";b:1;s:6:"expand";i:6;s:9:"exclupage";a:0:{}s:7:"excluns";a:0:{}s:10:"exclunsall";a:0:{}s:12:"exclunspages";a:0:{}s:9:"exclunsns";a:0:{}s:9:"exclutype";s:2:"id";s:16:"createPageButton";b:1;s:20:"createPageButtonEach";b:0;s:4:"head";b:0;s:9:"headTitle";N;s:9:"smallHead";b:0;s:13:"linkStartHead";b:1;s:2:"hn";s:2:"h1";s:11:"NsHeadTitle";b:1;s:7:"nsLinks";i:0;s:8:"wantedNS";s:19:"html:browser:window";s:4:"safe";b:1;s:7:"columns";i:0;s:12:"scandir_sort";i:0;s:8:"maxdepth";i:0;}i:2;i:5;i:3;s:32:"<catlist -sortAscending -noHead>";}i:2;i:2454;}i:51;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:2486;}i:52;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2486;}i:53;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2486;}i:54;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:2486;}}